// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMdbSqlserverCluster(args?: GetMdbSqlserverClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetMdbSqlserverClusterResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getMdbSqlserverCluster:getMdbSqlserverCluster", {
        "clusterId": args.clusterId,
        "deletionProtection": args.deletionProtection,
        "folderId": args.folderId,
        "name": args.name,
        "sqlcollation": args.sqlcollation,
        "sqlserverConfig": args.sqlserverConfig,
    }, opts);
}

/**
 * A collection of arguments for invoking getMdbSqlserverCluster.
 */
export interface GetMdbSqlserverClusterArgs {
    clusterId?: string;
    deletionProtection?: boolean;
    folderId?: string;
    name?: string;
    sqlcollation?: string;
    sqlserverConfig?: {[key: string]: string};
}

/**
 * A collection of values returned by getMdbSqlserverCluster.
 */
export interface GetMdbSqlserverClusterResult {
    readonly backupWindowStarts: outputs.GetMdbSqlserverClusterBackupWindowStart[];
    readonly clusterId: string;
    readonly createdAt: string;
    readonly databases: outputs.GetMdbSqlserverClusterDatabase[];
    readonly deletionProtection: boolean;
    readonly description: string;
    readonly environment: string;
    readonly folderId: string;
    readonly health: string;
    readonly hostGroupIds: string[];
    readonly hosts: outputs.GetMdbSqlserverClusterHost[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly name: string;
    readonly networkId: string;
    readonly resources: outputs.GetMdbSqlserverClusterResource[];
    readonly securityGroupIds: string[];
    readonly sqlcollation: string;
    readonly sqlserverConfig: {[key: string]: string};
    readonly status: string;
    readonly users: outputs.GetMdbSqlserverClusterUser[];
    readonly version: string;
}
export function getMdbSqlserverClusterOutput(args?: GetMdbSqlserverClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMdbSqlserverClusterResult> {
    return pulumi.output(args).apply((a: any) => getMdbSqlserverCluster(a, opts))
}

/**
 * A collection of arguments for invoking getMdbSqlserverCluster.
 */
export interface GetMdbSqlserverClusterOutputArgs {
    clusterId?: pulumi.Input<string>;
    deletionProtection?: pulumi.Input<boolean>;
    folderId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    sqlcollation?: pulumi.Input<string>;
    sqlserverConfig?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
