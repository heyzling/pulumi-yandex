// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getVpcGateway(args?: GetVpcGatewayArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcGatewayResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getVpcGateway:getVpcGateway", {
        "folderId": args.folderId,
        "gatewayId": args.gatewayId,
        "name": args.name,
        "sharedEgressGateway": args.sharedEgressGateway,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpcGateway.
 */
export interface GetVpcGatewayArgs {
    folderId?: string;
    gatewayId?: string;
    name?: string;
    sharedEgressGateway?: inputs.GetVpcGatewaySharedEgressGateway;
}

/**
 * A collection of values returned by getVpcGateway.
 */
export interface GetVpcGatewayResult {
    readonly createdAt: string;
    readonly description: string;
    readonly folderId: string;
    readonly gatewayId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly name: string;
    readonly sharedEgressGateway?: outputs.GetVpcGatewaySharedEgressGateway;
}
export function getVpcGatewayOutput(args?: GetVpcGatewayOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpcGatewayResult> {
    return pulumi.output(args).apply((a: any) => getVpcGateway(a, opts))
}

/**
 * A collection of arguments for invoking getVpcGateway.
 */
export interface GetVpcGatewayOutputArgs {
    folderId?: pulumi.Input<string>;
    gatewayId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    sharedEgressGateway?: pulumi.Input<inputs.GetVpcGatewaySharedEgressGatewayArgs>;
}
