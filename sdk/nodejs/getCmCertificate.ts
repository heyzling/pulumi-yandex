// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getCmCertificate(args?: GetCmCertificateArgs, opts?: pulumi.InvokeOptions): Promise<GetCmCertificateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getCmCertificate:getCmCertificate", {
        "certificateId": args.certificateId,
        "description": args.description,
        "folderId": args.folderId,
        "labels": args.labels,
        "name": args.name,
        "waitValidation": args.waitValidation,
    }, opts);
}

/**
 * A collection of arguments for invoking getCmCertificate.
 */
export interface GetCmCertificateArgs {
    certificateId?: string;
    description?: string;
    folderId?: string;
    labels?: {[key: string]: string};
    name?: string;
    waitValidation?: boolean;
}

/**
 * A collection of values returned by getCmCertificate.
 */
export interface GetCmCertificateResult {
    readonly certificateId: string;
    readonly challenges: outputs.GetCmCertificateChallenge[];
    readonly createdAt: string;
    readonly deletionProtection: boolean;
    readonly description: string;
    readonly domains: string[];
    readonly folderId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly issuedAt: string;
    readonly issuer: string;
    readonly labels: {[key: string]: string};
    readonly name: string;
    readonly notAfter: string;
    readonly notBefore: string;
    readonly serial: string;
    readonly status: string;
    readonly subject: string;
    readonly type: string;
    readonly updatedAt: string;
    readonly waitValidation?: boolean;
}
export function getCmCertificateOutput(args?: GetCmCertificateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCmCertificateResult> {
    return pulumi.output(args).apply((a: any) => getCmCertificate(a, opts))
}

/**
 * A collection of arguments for invoking getCmCertificate.
 */
export interface GetCmCertificateOutputArgs {
    certificateId?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    folderId?: pulumi.Input<string>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    name?: pulumi.Input<string>;
    waitValidation?: pulumi.Input<boolean>;
}
