// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AlbBackendGroupGrpcBackend {
    /**
     * Healthcheck specification that will be used by this backend. Structure is documented below.
     */
    healthcheck?: pulumi.Input<inputs.AlbBackendGroupGrpcBackendHealthcheck>;
    /**
     * Load Balancing Config specification that will be used by this backend. Structure is documented below.
     */
    loadBalancingConfig?: pulumi.Input<inputs.AlbBackendGroupGrpcBackendLoadBalancingConfig>;
    /**
     * Name of the backend.
     */
    name: pulumi.Input<string>;
    /**
     * Port for incoming traffic.
     */
    port?: pulumi.Input<number>;
    /**
     * References target groups for the backend.
     */
    targetGroupIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tls specification that will be used by this backend. Structure is documented below.
     */
    tls?: pulumi.Input<inputs.AlbBackendGroupGrpcBackendTls>;
    /**
     * Weight of the backend. Traffic will be split between backends of the same BackendGroup according to their weights.
     */
    weight?: pulumi.Input<number>;
}

export interface AlbBackendGroupGrpcBackendHealthcheck {
    /**
     * Grpc Healthcheck specification that will be used by this healthcheck. Structure is documented below.
     *
     * > **NOTE:** Only one of `streamHealthcheck` or `httpHealthcheck` or `grpcHealthcheck` should be specified.
     */
    grpcHealthcheck?: pulumi.Input<inputs.AlbBackendGroupGrpcBackendHealthcheckGrpcHealthcheck>;
    /**
     * Optional alternative port for health checking.
     */
    healthcheckPort?: pulumi.Input<number>;
    /**
     * Number of consecutive successful health checks required to promote endpoint into the healthy state. 0 means 1. Note that during startup, only a single successful health check is required to mark a host healthy.
     */
    healthyThreshold?: pulumi.Input<number>;
    /**
     * Http Healthcheck specification that will be used by this healthcheck. Structure is documented below.
     */
    httpHealthcheck?: pulumi.Input<inputs.AlbBackendGroupGrpcBackendHealthcheckHttpHealthcheck>;
    /**
     * Interval between health checks.
     */
    interval: pulumi.Input<string>;
    /**
     * An optional jitter amount as a percentage of interval. If specified, during every interval value of (interval_ms * intervalJitterPercent / 100) will be added to the wait time.
     */
    intervalJitterPercent?: pulumi.Input<number>;
    /**
     * Stream Healthcheck specification that will be used by this healthcheck. Structure is documented below.
     */
    streamHealthcheck?: pulumi.Input<inputs.AlbBackendGroupGrpcBackendHealthcheckStreamHealthcheck>;
    /**
     * Time to wait for a health check response.
     */
    timeout: pulumi.Input<string>;
    /**
     * Number of consecutive failed health checks required to demote endpoint into the unhealthy state. 0 means 1. Note that for HTTP health checks, a single 503 immediately makes endpoint unhealthy.
     */
    unhealthyThreshold?: pulumi.Input<number>;
}

export interface AlbBackendGroupGrpcBackendHealthcheckGrpcHealthcheck {
    /**
     * Service name for grpc.health.v1.HealthCheckRequest message.
     */
    serviceName?: pulumi.Input<string>;
}

export interface AlbBackendGroupGrpcBackendHealthcheckHttpHealthcheck {
    /**
     * "Host" HTTP header value.
     */
    host?: pulumi.Input<string>;
    /**
     * If set, health checks will use HTTP2.
     */
    http2?: pulumi.Input<boolean>;
    /**
     * HTTP path.
     */
    path: pulumi.Input<string>;
}

export interface AlbBackendGroupGrpcBackendHealthcheckStreamHealthcheck {
    /**
     * Data that must be contained in the messages received from targets for a successful health check. If not specified, no messages are expected from targets, and those that are received are not checked.
     */
    receive?: pulumi.Input<string>;
    /**
     * Message sent to targets during TCP data transfer.  If not specified, no data is sent to the target.
     */
    send?: pulumi.Input<string>;
}

export interface AlbBackendGroupGrpcBackendLoadBalancingConfig {
    /**
     * Percent of traffic to be sent to the same availability zone. The rest will be equally divided between other zones.
     */
    localityAwareRoutingPercent?: pulumi.Input<number>;
    /**
     * Load balancing mode for the backend. Possible values: "ROUND_ROBIN", "RANDOM", "LEAST_REQUEST", "MAGLEV_HASH".
     */
    mode?: pulumi.Input<string>;
    /**
     * If percentage of healthy hosts in the backend is lower than panic_threshold, traffic will be routed to all backends no matter what the health status is. This helps to avoid healthy backends overloading  when everything is bad. Zero means no panic threshold.
     */
    panicThreshold?: pulumi.Input<number>;
    /**
     * If set, will route requests only to the same availability zone. Balancer won't know about endpoints in other zones.
     */
    strictLocality?: pulumi.Input<boolean>;
}

export interface AlbBackendGroupGrpcBackendTls {
    /**
     * [SNI](https://en.wikipedia.org/wiki/Server_Name_Indication) string for TLS connections.
     * * `validation_context.0.trusted_ca_id` - (Optional) Trusted CA certificate ID in the Certificate Manager.
     * * `validation_context.0.trusted_ca_bytes` - (Optional) PEM-encoded trusted CA certificate chain.
     *
     * > **NOTE:** Only one of `validation_context.0.trusted_ca_id` or `validation_context.0.trusted_ca_bytes` should be specified.
     */
    sni?: pulumi.Input<string>;
    validationContext?: pulumi.Input<inputs.AlbBackendGroupGrpcBackendTlsValidationContext>;
}

export interface AlbBackendGroupGrpcBackendTlsValidationContext {
    trustedCaBytes?: pulumi.Input<string>;
    trustedCaId?: pulumi.Input<string>;
}

export interface AlbBackendGroupHttpBackend {
    /**
     * Healthcheck specification that will be used by this backend. Structure is documented below.
     */
    healthcheck?: pulumi.Input<inputs.AlbBackendGroupHttpBackendHealthcheck>;
    /**
     * Enables HTTP2 for upstream requests. If not set, HTTP 1.1 will be used by default.
     */
    http2?: pulumi.Input<boolean>;
    /**
     * Load Balancing Config specification that will be used by this backend. Structure is documented below.
     */
    loadBalancingConfig?: pulumi.Input<inputs.AlbBackendGroupHttpBackendLoadBalancingConfig>;
    /**
     * Name of the backend.
     */
    name: pulumi.Input<string>;
    /**
     * Port for incoming traffic.
     */
    port?: pulumi.Input<number>;
    storageBucket?: pulumi.Input<string>;
    /**
     * References target groups for the backend.
     */
    targetGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tls specification that will be used by this backend. Structure is documented below.
     */
    tls?: pulumi.Input<inputs.AlbBackendGroupHttpBackendTls>;
    /**
     * Weight of the backend. Traffic will be split between backends of the same BackendGroup according to their weights.
     */
    weight?: pulumi.Input<number>;
}

export interface AlbBackendGroupHttpBackendHealthcheck {
    /**
     * Grpc Healthcheck specification that will be used by this healthcheck. Structure is documented below.
     *
     * > **NOTE:** Only one of `streamHealthcheck` or `httpHealthcheck` or `grpcHealthcheck` should be specified.
     */
    grpcHealthcheck?: pulumi.Input<inputs.AlbBackendGroupHttpBackendHealthcheckGrpcHealthcheck>;
    /**
     * Optional alternative port for health checking.
     */
    healthcheckPort?: pulumi.Input<number>;
    /**
     * Number of consecutive successful health checks required to promote endpoint into the healthy state. 0 means 1. Note that during startup, only a single successful health check is required to mark a host healthy.
     */
    healthyThreshold?: pulumi.Input<number>;
    /**
     * Http Healthcheck specification that will be used by this healthcheck. Structure is documented below.
     */
    httpHealthcheck?: pulumi.Input<inputs.AlbBackendGroupHttpBackendHealthcheckHttpHealthcheck>;
    /**
     * Interval between health checks.
     */
    interval: pulumi.Input<string>;
    /**
     * An optional jitter amount as a percentage of interval. If specified, during every interval value of (interval_ms * intervalJitterPercent / 100) will be added to the wait time.
     */
    intervalJitterPercent?: pulumi.Input<number>;
    /**
     * Stream Healthcheck specification that will be used by this healthcheck. Structure is documented below.
     */
    streamHealthcheck?: pulumi.Input<inputs.AlbBackendGroupHttpBackendHealthcheckStreamHealthcheck>;
    /**
     * Time to wait for a health check response.
     */
    timeout: pulumi.Input<string>;
    /**
     * Number of consecutive failed health checks required to demote endpoint into the unhealthy state. 0 means 1. Note that for HTTP health checks, a single 503 immediately makes endpoint unhealthy.
     */
    unhealthyThreshold?: pulumi.Input<number>;
}

export interface AlbBackendGroupHttpBackendHealthcheckGrpcHealthcheck {
    /**
     * Service name for grpc.health.v1.HealthCheckRequest message.
     */
    serviceName?: pulumi.Input<string>;
}

export interface AlbBackendGroupHttpBackendHealthcheckHttpHealthcheck {
    /**
     * "Host" HTTP header value.
     */
    host?: pulumi.Input<string>;
    /**
     * If set, health checks will use HTTP2.
     */
    http2?: pulumi.Input<boolean>;
    /**
     * HTTP path.
     */
    path: pulumi.Input<string>;
}

export interface AlbBackendGroupHttpBackendHealthcheckStreamHealthcheck {
    /**
     * Data that must be contained in the messages received from targets for a successful health check. If not specified, no messages are expected from targets, and those that are received are not checked.
     */
    receive?: pulumi.Input<string>;
    /**
     * Message sent to targets during TCP data transfer.  If not specified, no data is sent to the target.
     */
    send?: pulumi.Input<string>;
}

export interface AlbBackendGroupHttpBackendLoadBalancingConfig {
    /**
     * Percent of traffic to be sent to the same availability zone. The rest will be equally divided between other zones.
     */
    localityAwareRoutingPercent?: pulumi.Input<number>;
    /**
     * Load balancing mode for the backend. Possible values: "ROUND_ROBIN", "RANDOM", "LEAST_REQUEST", "MAGLEV_HASH".
     */
    mode?: pulumi.Input<string>;
    /**
     * If percentage of healthy hosts in the backend is lower than panic_threshold, traffic will be routed to all backends no matter what the health status is. This helps to avoid healthy backends overloading  when everything is bad. Zero means no panic threshold.
     */
    panicThreshold?: pulumi.Input<number>;
    /**
     * If set, will route requests only to the same availability zone. Balancer won't know about endpoints in other zones.
     */
    strictLocality?: pulumi.Input<boolean>;
}

export interface AlbBackendGroupHttpBackendTls {
    /**
     * [SNI](https://en.wikipedia.org/wiki/Server_Name_Indication) string for TLS connections.
     * * `validation_context.0.trusted_ca_id` - (Optional) Trusted CA certificate ID in the Certificate Manager.
     * * `validation_context.0.trusted_ca_bytes` - (Optional) PEM-encoded trusted CA certificate chain.
     *
     * > **NOTE:** Only one of `validation_context.0.trusted_ca_id` or `validation_context.0.trusted_ca_bytes` should be specified.
     */
    sni?: pulumi.Input<string>;
    validationContext?: pulumi.Input<inputs.AlbBackendGroupHttpBackendTlsValidationContext>;
}

export interface AlbBackendGroupHttpBackendTlsValidationContext {
    trustedCaBytes?: pulumi.Input<string>;
    trustedCaId?: pulumi.Input<string>;
}

export interface AlbBackendGroupSessionAffinity {
    /**
     * Requests received from the same IP are combined into a session. Stream backend groups only support session affinity by client IP address. Structure is documented below.
     */
    connection?: pulumi.Input<inputs.AlbBackendGroupSessionAffinityConnection>;
    /**
     * Requests with the same cookie value and the specified file name are combined into a session. Allowed only for HTTP and gRPC backend groups. Structure is documented below.
     */
    cookie?: pulumi.Input<inputs.AlbBackendGroupSessionAffinityCookie>;
    /**
     * Requests with the same value of the specified HTTP header, such as with user authentication data, are combined into a session. Allowed only for HTTP and gRPC backend groups. Structure is documented below.
     *
     * > **NOTE:** Only one type( `connection` or `cookie` or `header` ) of session affinity should be specified.
     */
    header?: pulumi.Input<inputs.AlbBackendGroupSessionAffinityHeader>;
}

export interface AlbBackendGroupSessionAffinityConnection {
    /**
     * Source IP address to use with affinity.
     */
    sourceIp?: pulumi.Input<boolean>;
}

export interface AlbBackendGroupSessionAffinityCookie {
    /**
     * Name of the HTTP cookie to use with affinity.
     */
    name: pulumi.Input<string>;
    /**
     * TTL for the cookie (if not set, session cookie will be used)
     */
    ttl?: pulumi.Input<string>;
}

export interface AlbBackendGroupSessionAffinityHeader {
    /**
     * The name of the request header that will be used with affinity.
     */
    headerName: pulumi.Input<string>;
}

export interface AlbBackendGroupStreamBackend {
    enableProxyProtocol?: pulumi.Input<boolean>;
    /**
     * Healthcheck specification that will be used by this backend. Structure is documented below.
     */
    healthcheck?: pulumi.Input<inputs.AlbBackendGroupStreamBackendHealthcheck>;
    /**
     * Load Balancing Config specification that will be used by this backend. Structure is documented below.
     */
    loadBalancingConfig?: pulumi.Input<inputs.AlbBackendGroupStreamBackendLoadBalancingConfig>;
    /**
     * Name of the backend.
     */
    name: pulumi.Input<string>;
    /**
     * Port for incoming traffic.
     */
    port?: pulumi.Input<number>;
    /**
     * References target groups for the backend.
     */
    targetGroupIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tls specification that will be used by this backend. Structure is documented below.
     */
    tls?: pulumi.Input<inputs.AlbBackendGroupStreamBackendTls>;
    /**
     * Weight of the backend. Traffic will be split between backends of the same BackendGroup according to their weights.
     */
    weight?: pulumi.Input<number>;
}

export interface AlbBackendGroupStreamBackendHealthcheck {
    /**
     * Grpc Healthcheck specification that will be used by this healthcheck. Structure is documented below.
     *
     * > **NOTE:** Only one of `streamHealthcheck` or `httpHealthcheck` or `grpcHealthcheck` should be specified.
     */
    grpcHealthcheck?: pulumi.Input<inputs.AlbBackendGroupStreamBackendHealthcheckGrpcHealthcheck>;
    /**
     * Optional alternative port for health checking.
     */
    healthcheckPort?: pulumi.Input<number>;
    /**
     * Number of consecutive successful health checks required to promote endpoint into the healthy state. 0 means 1. Note that during startup, only a single successful health check is required to mark a host healthy.
     */
    healthyThreshold?: pulumi.Input<number>;
    /**
     * Http Healthcheck specification that will be used by this healthcheck. Structure is documented below.
     */
    httpHealthcheck?: pulumi.Input<inputs.AlbBackendGroupStreamBackendHealthcheckHttpHealthcheck>;
    /**
     * Interval between health checks.
     */
    interval: pulumi.Input<string>;
    /**
     * An optional jitter amount as a percentage of interval. If specified, during every interval value of (interval_ms * intervalJitterPercent / 100) will be added to the wait time.
     */
    intervalJitterPercent?: pulumi.Input<number>;
    /**
     * Stream Healthcheck specification that will be used by this healthcheck. Structure is documented below.
     */
    streamHealthcheck?: pulumi.Input<inputs.AlbBackendGroupStreamBackendHealthcheckStreamHealthcheck>;
    /**
     * Time to wait for a health check response.
     */
    timeout: pulumi.Input<string>;
    /**
     * Number of consecutive failed health checks required to demote endpoint into the unhealthy state. 0 means 1. Note that for HTTP health checks, a single 503 immediately makes endpoint unhealthy.
     */
    unhealthyThreshold?: pulumi.Input<number>;
}

export interface AlbBackendGroupStreamBackendHealthcheckGrpcHealthcheck {
    /**
     * Service name for grpc.health.v1.HealthCheckRequest message.
     */
    serviceName?: pulumi.Input<string>;
}

export interface AlbBackendGroupStreamBackendHealthcheckHttpHealthcheck {
    /**
     * "Host" HTTP header value.
     */
    host?: pulumi.Input<string>;
    /**
     * If set, health checks will use HTTP2.
     */
    http2?: pulumi.Input<boolean>;
    /**
     * HTTP path.
     */
    path: pulumi.Input<string>;
}

export interface AlbBackendGroupStreamBackendHealthcheckStreamHealthcheck {
    /**
     * Data that must be contained in the messages received from targets for a successful health check. If not specified, no messages are expected from targets, and those that are received are not checked.
     */
    receive?: pulumi.Input<string>;
    /**
     * Message sent to targets during TCP data transfer.  If not specified, no data is sent to the target.
     */
    send?: pulumi.Input<string>;
}

export interface AlbBackendGroupStreamBackendLoadBalancingConfig {
    /**
     * Percent of traffic to be sent to the same availability zone. The rest will be equally divided between other zones.
     */
    localityAwareRoutingPercent?: pulumi.Input<number>;
    /**
     * Load balancing mode for the backend. Possible values: "ROUND_ROBIN", "RANDOM", "LEAST_REQUEST", "MAGLEV_HASH".
     */
    mode?: pulumi.Input<string>;
    /**
     * If percentage of healthy hosts in the backend is lower than panic_threshold, traffic will be routed to all backends no matter what the health status is. This helps to avoid healthy backends overloading  when everything is bad. Zero means no panic threshold.
     */
    panicThreshold?: pulumi.Input<number>;
    /**
     * If set, will route requests only to the same availability zone. Balancer won't know about endpoints in other zones.
     */
    strictLocality?: pulumi.Input<boolean>;
}

export interface AlbBackendGroupStreamBackendTls {
    /**
     * [SNI](https://en.wikipedia.org/wiki/Server_Name_Indication) string for TLS connections.
     * * `validation_context.0.trusted_ca_id` - (Optional) Trusted CA certificate ID in the Certificate Manager.
     * * `validation_context.0.trusted_ca_bytes` - (Optional) PEM-encoded trusted CA certificate chain.
     *
     * > **NOTE:** Only one of `validation_context.0.trusted_ca_id` or `validation_context.0.trusted_ca_bytes` should be specified.
     */
    sni?: pulumi.Input<string>;
    validationContext?: pulumi.Input<inputs.AlbBackendGroupStreamBackendTlsValidationContext>;
}

export interface AlbBackendGroupStreamBackendTlsValidationContext {
    trustedCaBytes?: pulumi.Input<string>;
    trustedCaId?: pulumi.Input<string>;
}

export interface AlbHttpRouterRouteOptions {
    rbac?: pulumi.Input<inputs.AlbHttpRouterRouteOptionsRbac>;
    securityProfileId?: pulumi.Input<string>;
}

export interface AlbHttpRouterRouteOptionsRbac {
    action?: pulumi.Input<string>;
    principals: pulumi.Input<pulumi.Input<inputs.AlbHttpRouterRouteOptionsRbacPrincipal>[]>;
}

export interface AlbHttpRouterRouteOptionsRbacPrincipal {
    andPrincipals: pulumi.Input<pulumi.Input<inputs.AlbHttpRouterRouteOptionsRbacPrincipalAndPrincipal>[]>;
}

export interface AlbHttpRouterRouteOptionsRbacPrincipalAndPrincipal {
    any?: pulumi.Input<boolean>;
    header?: pulumi.Input<inputs.AlbHttpRouterRouteOptionsRbacPrincipalAndPrincipalHeader>;
    remoteIp?: pulumi.Input<string>;
}

export interface AlbHttpRouterRouteOptionsRbacPrincipalAndPrincipalHeader {
    /**
     * Name of the HTTP Router. Provided by the client when the HTTP Router is created.
     */
    name: pulumi.Input<string>;
    value?: pulumi.Input<inputs.AlbHttpRouterRouteOptionsRbacPrincipalAndPrincipalHeaderValue>;
}

export interface AlbHttpRouterRouteOptionsRbacPrincipalAndPrincipalHeaderValue {
    exact?: pulumi.Input<string>;
    prefix?: pulumi.Input<string>;
    regex?: pulumi.Input<string>;
}

export interface AlbLoadBalancerAllocationPolicy {
    /**
     * Unique set of locations. The structure is documented below.
     */
    locations: pulumi.Input<pulumi.Input<inputs.AlbLoadBalancerAllocationPolicyLocation>[]>;
}

export interface AlbLoadBalancerAllocationPolicyLocation {
    /**
     * If set, will disable all L7 instances in the zone for request handling.
     */
    disableTraffic?: pulumi.Input<boolean>;
    /**
     * ID of the subnet that location is located at.
     */
    subnetId: pulumi.Input<string>;
    /**
     * ID of the zone that location is located at.
     */
    zoneId: pulumi.Input<string>;
}

export interface AlbLoadBalancerListener {
    /**
     * Network endpoints (addresses and ports) of the listener. The structure is documented below.
     */
    endpoints?: pulumi.Input<pulumi.Input<inputs.AlbLoadBalancerListenerEndpoint>[]>;
    /**
     * HTTP listener resource. The structure is documented below.
     */
    http?: pulumi.Input<inputs.AlbLoadBalancerListenerHttp>;
    /**
     * name of the listener.
     */
    name: pulumi.Input<string>;
    /**
     * Stream listener resource. The structure is documented below.
     */
    stream?: pulumi.Input<inputs.AlbLoadBalancerListenerStream>;
    /**
     * TLS listener resource. The structure is documented below.
     *
     * > **NOTE:** Exactly one listener type: `http` or `tls` or `stream` should be specified.
     */
    tls?: pulumi.Input<inputs.AlbLoadBalancerListenerTls>;
}

export interface AlbLoadBalancerListenerEndpoint {
    /**
     * One or more addresses to listen on. The structure is documented below.
     */
    addresses: pulumi.Input<pulumi.Input<inputs.AlbLoadBalancerListenerEndpointAddress>[]>;
    /**
     * One or more ports to listen on.
     */
    ports: pulumi.Input<pulumi.Input<number>[]>;
}

export interface AlbLoadBalancerListenerEndpointAddress {
    /**
     * External IPv4 address. The structure is documented below.
     */
    externalIpv4Address?: pulumi.Input<inputs.AlbLoadBalancerListenerEndpointAddressExternalIpv4Address>;
    /**
     * External IPv6 address. The structure is documented below.
     *
     * > **NOTE:** Exactly one type of addresses `externalIpv4Address` or `internalIpv4Address` or `externalIpv6Address`
     * should be specified.
     */
    externalIpv6Address?: pulumi.Input<inputs.AlbLoadBalancerListenerEndpointAddressExternalIpv6Address>;
    /**
     * Internal IPv4 address. The structure is documented below.
     */
    internalIpv4Address?: pulumi.Input<inputs.AlbLoadBalancerListenerEndpointAddressInternalIpv4Address>;
}

export interface AlbLoadBalancerListenerEndpointAddressExternalIpv4Address {
    /**
     * Provided by the client or computed automatically.
     */
    address?: pulumi.Input<string>;
}

export interface AlbLoadBalancerListenerEndpointAddressExternalIpv6Address {
    /**
     * Provided by the client or computed automatically.
     */
    address?: pulumi.Input<string>;
}

export interface AlbLoadBalancerListenerEndpointAddressInternalIpv4Address {
    /**
     * Provided by the client or computed automatically.
     */
    address?: pulumi.Input<string>;
    /**
     * Provided by the client or computed automatically.
     */
    subnetId?: pulumi.Input<string>;
}

export interface AlbLoadBalancerListenerHttp {
    /**
     * HTTP handler that sets plaintext HTTP router. The structure is documented below.
     */
    handler?: pulumi.Input<inputs.AlbLoadBalancerListenerHttpHandler>;
    /**
     * Shortcut for adding http > https redirects. The structure is documented below.
     *
     * > **NOTE:** Only one type of fields `handler` or `redirects` should be specified.
     */
    redirects?: pulumi.Input<inputs.AlbLoadBalancerListenerHttpRedirects>;
}

export interface AlbLoadBalancerListenerHttpHandler {
    /**
     * If set, will enable only HTTP1 protocol with HTTP1.0 support.
     *
     * > **NOTE:** Only one type of protocol settings `http2Options` or `allowHttp10` should be specified.
     */
    allowHttp10?: pulumi.Input<boolean>;
    /**
     * If set, will enable HTTP2 protocol for the handler. The structure is documented below.
     */
    http2Options?: pulumi.Input<inputs.AlbLoadBalancerListenerHttpHandlerHttp2Options>;
    /**
     * HTTP router id.
     */
    httpRouterId?: pulumi.Input<string>;
    /**
     * When unset, will preserve the incoming x-request-id header, otherwise would rewrite it with a new value.
     */
    rewriteRequestId?: pulumi.Input<boolean>;
}

export interface AlbLoadBalancerListenerHttpHandlerHttp2Options {
    /**
     * Maximum number of concurrent streams.
     */
    maxConcurrentStreams?: pulumi.Input<number>;
}

export interface AlbLoadBalancerListenerHttpRedirects {
    /**
     * If set redirects all unencrypted HTTP requests to the same URI with scheme changed to `https`.
     */
    httpToHttps?: pulumi.Input<boolean>;
}

export interface AlbLoadBalancerListenerStream {
    /**
     * Stream handler that sets plaintext Stream backend group. The structure is documented below.
     */
    handler?: pulumi.Input<inputs.AlbLoadBalancerListenerStreamHandler>;
}

export interface AlbLoadBalancerListenerStreamHandler {
    /**
     * Backend group id.
     */
    backendGroupId?: pulumi.Input<string>;
}

export interface AlbLoadBalancerListenerTls {
    /**
     * TLS handler resource. The structure is documented below.
     */
    defaultHandler: pulumi.Input<inputs.AlbLoadBalancerListenerTlsDefaultHandler>;
    /**
     * SNI match resource. The structure is documented below.
     */
    sniHandlers?: pulumi.Input<pulumi.Input<inputs.AlbLoadBalancerListenerTlsSniHandler>[]>;
}

export interface AlbLoadBalancerListenerTlsDefaultHandler {
    /**
     * Certificate IDs in the Certificate Manager. Multiple TLS certificates can be associated
     * with the same context to allow both RSA and ECDSA certificates. Only the first certificate of each type will be used.
     *
     * > **NOTE:** Exactly one handler type `httpHandler` or `streamHandler` should be specified.
     */
    certificateIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * HTTP handler resource. The structure is documented below.
     */
    httpHandler?: pulumi.Input<inputs.AlbLoadBalancerListenerTlsDefaultHandlerHttpHandler>;
    /**
     * Stream handler resource. The structure is documented below.
     */
    streamHandler?: pulumi.Input<inputs.AlbLoadBalancerListenerTlsDefaultHandlerStreamHandler>;
}

export interface AlbLoadBalancerListenerTlsDefaultHandlerHttpHandler {
    /**
     * If set, will enable only HTTP1 protocol with HTTP1.0 support.
     *
     * > **NOTE:** Only one type of protocol settings `http2Options` or `allowHttp10` should be specified.
     */
    allowHttp10?: pulumi.Input<boolean>;
    /**
     * If set, will enable HTTP2 protocol for the handler. The structure is documented below.
     */
    http2Options?: pulumi.Input<inputs.AlbLoadBalancerListenerTlsDefaultHandlerHttpHandlerHttp2Options>;
    /**
     * HTTP router id.
     */
    httpRouterId?: pulumi.Input<string>;
    /**
     * When unset, will preserve the incoming x-request-id header, otherwise would rewrite it with a new value.
     */
    rewriteRequestId?: pulumi.Input<boolean>;
}

export interface AlbLoadBalancerListenerTlsDefaultHandlerHttpHandlerHttp2Options {
    /**
     * Maximum number of concurrent streams.
     */
    maxConcurrentStreams?: pulumi.Input<number>;
}

export interface AlbLoadBalancerListenerTlsDefaultHandlerStreamHandler {
    /**
     * Backend group id.
     */
    backendGroupId?: pulumi.Input<string>;
}

export interface AlbLoadBalancerListenerTlsSniHandler {
    /**
     * TLS handler resource. The structure is documented below.
     */
    handler: pulumi.Input<inputs.AlbLoadBalancerListenerTlsSniHandlerHandler>;
    /**
     * name of SNI match.
     */
    name: pulumi.Input<string>;
    /**
     * A set of server names.
     */
    serverNames: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AlbLoadBalancerListenerTlsSniHandlerHandler {
    /**
     * Certificate IDs in the Certificate Manager. Multiple TLS certificates can be associated
     * with the same context to allow both RSA and ECDSA certificates. Only the first certificate of each type will be used.
     *
     * > **NOTE:** Exactly one handler type `httpHandler` or `streamHandler` should be specified.
     */
    certificateIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * HTTP handler resource. The structure is documented below.
     */
    httpHandler?: pulumi.Input<inputs.AlbLoadBalancerListenerTlsSniHandlerHandlerHttpHandler>;
    /**
     * Stream handler resource. The structure is documented below.
     */
    streamHandler?: pulumi.Input<inputs.AlbLoadBalancerListenerTlsSniHandlerHandlerStreamHandler>;
}

export interface AlbLoadBalancerListenerTlsSniHandlerHandlerHttpHandler {
    /**
     * If set, will enable only HTTP1 protocol with HTTP1.0 support.
     *
     * > **NOTE:** Only one type of protocol settings `http2Options` or `allowHttp10` should be specified.
     */
    allowHttp10?: pulumi.Input<boolean>;
    /**
     * If set, will enable HTTP2 protocol for the handler. The structure is documented below.
     */
    http2Options?: pulumi.Input<inputs.AlbLoadBalancerListenerTlsSniHandlerHandlerHttpHandlerHttp2Options>;
    /**
     * HTTP router id.
     */
    httpRouterId?: pulumi.Input<string>;
    /**
     * When unset, will preserve the incoming x-request-id header, otherwise would rewrite it with a new value.
     */
    rewriteRequestId?: pulumi.Input<boolean>;
}

export interface AlbLoadBalancerListenerTlsSniHandlerHandlerHttpHandlerHttp2Options {
    /**
     * Maximum number of concurrent streams.
     */
    maxConcurrentStreams?: pulumi.Input<number>;
}

export interface AlbLoadBalancerListenerTlsSniHandlerHandlerStreamHandler {
    /**
     * Backend group id.
     */
    backendGroupId?: pulumi.Input<string>;
}

export interface AlbLoadBalancerLogOptions {
    /**
     * Set to true to disable Cloud Logging for the balancer
     */
    disable?: pulumi.Input<boolean>;
    /**
     * List of rules to discard a fraction of logs. The structure is documented below.
     */
    discardRules?: pulumi.Input<pulumi.Input<inputs.AlbLoadBalancerLogOptionsDiscardRule>[]>;
    /**
     * Cloud Logging group ID to send logs to. Leave empty to use the balancer folder default log group.
     */
    logGroupId?: pulumi.Input<string>;
}

export interface AlbLoadBalancerLogOptionsDiscardRule {
    discardPercent?: pulumi.Input<number>;
    /**
     * list of grpc codes by name, e.g, _["NOT_FOUND", "RESOURCE_EXHAUSTED"]_
     */
    grpcCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * list of http code intervals _1XX_-_5XX_ or _ALL_
     */
    httpCodeIntervals?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * list of http codes _100_-_599_
     */
    httpCodes?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface AlbTargetGroupTarget {
    /**
     * IP address of the target.
     */
    ipAddress: pulumi.Input<string>;
    privateIpv4Address?: pulumi.Input<boolean>;
    /**
     * ID of the subnet that targets are connected to.
     * All targets in the target group must be connected to the same subnet within a single availability zone.
     */
    subnetId?: pulumi.Input<string>;
}

export interface AlbVirtualHostModifyRequestHeader {
    /**
     * Append string to the header value.
     */
    append?: pulumi.Input<string>;
    /**
     * name of the header to modify.
     */
    name: pulumi.Input<string>;
    /**
     * If set, remove the header.
     *
     * > **NOTE:** Only one type of actions `append` or `replace` or `remove` should be specified.
     */
    remove?: pulumi.Input<boolean>;
    /**
     * New value for a header. Header values support the following 
     * [formatters](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_conn_man/headers#custom-request-response-headers).
     */
    replace?: pulumi.Input<string>;
}

export interface AlbVirtualHostModifyResponseHeader {
    /**
     * Append string to the header value.
     */
    append?: pulumi.Input<string>;
    /**
     * name of the header to modify.
     */
    name: pulumi.Input<string>;
    /**
     * If set, remove the header.
     *
     * > **NOTE:** Only one type of actions `append` or `replace` or `remove` should be specified.
     */
    remove?: pulumi.Input<boolean>;
    /**
     * New value for a header. Header values support the following 
     * [formatters](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_conn_man/headers#custom-request-response-headers).
     */
    replace?: pulumi.Input<string>;
}

export interface AlbVirtualHostRoute {
    /**
     * GRPC route resource. The structure is documented below.
     *
     * > **NOTE:** Exactly one type of routes `httpRoute` or `grpcRoute` should be specified.
     */
    grpcRoute?: pulumi.Input<inputs.AlbVirtualHostRouteGrpcRoute>;
    /**
     * HTTP route resource. The structure is documented below.
     */
    httpRoute?: pulumi.Input<inputs.AlbVirtualHostRouteHttpRoute>;
    /**
     * name of the route.
     */
    name?: pulumi.Input<string>;
    /**
     * Route options for the virtual host. The structure is documented below.
     */
    routeOptions?: pulumi.Input<inputs.AlbVirtualHostRouteRouteOptions>;
}

export interface AlbVirtualHostRouteGrpcRoute {
    /**
     * Checks "/" prefix by default. The structure is documented below.
     */
    grpcMatches?: pulumi.Input<pulumi.Input<inputs.AlbVirtualHostRouteGrpcRouteGrpcMatch>[]>;
    /**
     * GRPC route action resource. The structure is documented below.
     */
    grpcRouteAction?: pulumi.Input<inputs.AlbVirtualHostRouteGrpcRouteGrpcRouteAction>;
    /**
     * GRPC status response action resource. The structure is documented below.
     *
     * > **NOTE:** Exactly one type of actions `grpcRouteAction` or `grpcStatusResponseAction` should be specified.
     */
    grpcStatusResponseAction?: pulumi.Input<inputs.AlbVirtualHostRouteGrpcRouteGrpcStatusResponseAction>;
}

export interface AlbVirtualHostRouteGrpcRouteGrpcMatch {
    /**
     * If not set, all services/methods are assumed. The structure is documented below.
     */
    fqmn?: pulumi.Input<inputs.AlbVirtualHostRouteGrpcRouteGrpcMatchFqmn>;
}

export interface AlbVirtualHostRouteGrpcRouteGrpcMatchFqmn {
    /**
     * Match exactly.
     */
    exact?: pulumi.Input<string>;
    /**
     * Match prefix.
     */
    prefix?: pulumi.Input<string>;
    /**
     * Match regex.
     *
     * > **NOTE:** Exactly one type of string matches `exact`, `prefix` or `regex` should be
     * specified.
     */
    regex?: pulumi.Input<string>;
}

export interface AlbVirtualHostRouteGrpcRouteGrpcRouteAction {
    /**
     * If set, will automatically rewrite host.
     *
     * > **NOTE:** Only one type of host rewrite specifiers `hostRewrite` or `autoHostRewrite` should be
     * specified.
     */
    autoHostRewrite?: pulumi.Input<boolean>;
    /**
     * Backend group to route requests.
     */
    backendGroupId: pulumi.Input<string>;
    /**
     * Host rewrite specifier.
     */
    hostRewrite?: pulumi.Input<string>;
    /**
     * Specifies the idle timeout (time without any data transfer for the active request) for the
     * route. It is useful for streaming scenarios - one should set idleTimeout to something meaningful and maxTimeout
     * to the maximum time the stream is allowed to be alive. If not specified, there is no
     * per-route idle timeout.
     */
    idleTimeout?: pulumi.Input<string>;
    /**
     * Lower timeout may be specified by the client (using grpc-timeout header). If not set, default is 
     * 60 seconds.
     */
    maxTimeout?: pulumi.Input<string>;
}

export interface AlbVirtualHostRouteGrpcRouteGrpcStatusResponseAction {
    /**
     * The status of the response. Supported values are: ok, invalid_argumet, not_found, 
     * permission_denied, unauthenticated, unimplemented, internal, unavailable.
     */
    status?: pulumi.Input<string>;
}

export interface AlbVirtualHostRouteHttpRoute {
    /**
     * Direct response action resource. The structure is documented below.
     *
     * > **NOTE:** Exactly one type of actions `httpRouteAction` or `redirectAction` or `directResponseAction` should be
     * specified.
     */
    directResponseAction?: pulumi.Input<inputs.AlbVirtualHostRouteHttpRouteDirectResponseAction>;
    /**
     * Checks "/" prefix by default. The structure is documented below.
     */
    httpMatches?: pulumi.Input<pulumi.Input<inputs.AlbVirtualHostRouteHttpRouteHttpMatch>[]>;
    /**
     * HTTP route action resource. The structure is documented below.
     */
    httpRouteAction?: pulumi.Input<inputs.AlbVirtualHostRouteHttpRouteHttpRouteAction>;
    /**
     * Redirect action resource. The structure is documented below.
     */
    redirectAction?: pulumi.Input<inputs.AlbVirtualHostRouteHttpRouteRedirectAction>;
}

export interface AlbVirtualHostRouteHttpRouteDirectResponseAction {
    /**
     * Response body text.
     */
    body?: pulumi.Input<string>;
    /**
     * HTTP response status. Should be between 100 and 599.
     */
    status?: pulumi.Input<number>;
}

export interface AlbVirtualHostRouteHttpRouteHttpMatch {
    /**
     * List of methods(strings).
     */
    httpMethods?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If not set, '/' is assumed. The structure is documented below.
     */
    path?: pulumi.Input<inputs.AlbVirtualHostRouteHttpRouteHttpMatchPath>;
}

export interface AlbVirtualHostRouteHttpRouteHttpMatchPath {
    /**
     * Match exactly.
     */
    exact?: pulumi.Input<string>;
    /**
     * Match prefix.
     */
    prefix?: pulumi.Input<string>;
    /**
     * Match regex.
     *
     * > **NOTE:** Exactly one type of string matches `exact`, `prefix` or `regex` should be
     * specified.
     */
    regex?: pulumi.Input<string>;
}

export interface AlbVirtualHostRouteHttpRouteHttpRouteAction {
    /**
     * If set, will automatically rewrite host.
     */
    autoHostRewrite?: pulumi.Input<boolean>;
    /**
     * Backend group to route requests.
     */
    backendGroupId: pulumi.Input<string>;
    /**
     * Host rewrite specifier.
     */
    hostRewrite?: pulumi.Input<string>;
    /**
     * Specifies the idle timeout (time without any data transfer for the active request) for the 
     * route. It is useful for streaming scenarios (i.e. long-polling, server-sent events) - one should set idleTimeout to
     * something meaningful and timeout to the maximum time the stream is allowed to be alive. If not specified, there is no
     * per-route idle timeout.
     */
    idleTimeout?: pulumi.Input<string>;
    /**
     * If not empty, matched path prefix will be replaced by this value.
     */
    prefixRewrite?: pulumi.Input<string>;
    /**
     * Specifies the request timeout (overall time request processing is allowed to take) for the 
     * route. If not set, default is 60 seconds.
     */
    timeout?: pulumi.Input<string>;
    /**
     * List of upgrade types. Only specified upgrade types will be allowed. For example, 
     * "websocket".
     *
     * > **NOTE:** Only one type of host rewrite specifiers `hostRewrite` or `autoHostRewrite` should be
     * specified.
     */
    upgradeTypes?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AlbVirtualHostRouteHttpRouteRedirectAction {
    removeQuery?: pulumi.Input<boolean>;
    /**
     * Replaces hostname.
     */
    replaceHost?: pulumi.Input<string>;
    /**
     * Replace path.
     */
    replacePath?: pulumi.Input<string>;
    /**
     * Replaces port.
     */
    replacePort?: pulumi.Input<number>;
    /**
     * Replace only matched prefix. Example:<br/> match:{ prefix_match: "/some" } <br/> 
     * redirect: { replace_prefix: "/other" } <br/> will redirect "/something" to "/otherthing".
     *
     * * `remove query` - (Optional) If set, remove query part.
     */
    replacePrefix?: pulumi.Input<string>;
    /**
     * Replaces scheme. If the original scheme is `http` or `https`, will also remove the 
     * 80 or 443 port, if present.
     */
    replaceScheme?: pulumi.Input<string>;
    /**
     * The HTTP status code to use in the redirect response. Supported values are: 
     * moved_permanently, found, see_other, temporary_redirect, permanent_redirect.
     *
     * > **NOTE:** Only one type of paths `replacePath` or `replacePrefix` should be specified.
     */
    responseCode?: pulumi.Input<string>;
}

export interface AlbVirtualHostRouteOptions {
    /**
     * RBAC configuration.
     */
    rbac?: pulumi.Input<inputs.AlbVirtualHostRouteOptionsRbac>;
    /**
     * SWS profile ID.
     */
    securityProfileId?: pulumi.Input<string>;
}

export interface AlbVirtualHostRouteOptionsRbac {
    action?: pulumi.Input<string>;
    principals: pulumi.Input<pulumi.Input<inputs.AlbVirtualHostRouteOptionsRbacPrincipal>[]>;
}

export interface AlbVirtualHostRouteOptionsRbacPrincipal {
    andPrincipals: pulumi.Input<pulumi.Input<inputs.AlbVirtualHostRouteOptionsRbacPrincipalAndPrincipal>[]>;
}

export interface AlbVirtualHostRouteOptionsRbacPrincipalAndPrincipal {
    any?: pulumi.Input<boolean>;
    header?: pulumi.Input<inputs.AlbVirtualHostRouteOptionsRbacPrincipalAndPrincipalHeader>;
    remoteIp?: pulumi.Input<string>;
}

export interface AlbVirtualHostRouteOptionsRbacPrincipalAndPrincipalHeader {
    /**
     * name of the header to modify.
     */
    name: pulumi.Input<string>;
    value?: pulumi.Input<inputs.AlbVirtualHostRouteOptionsRbacPrincipalAndPrincipalHeaderValue>;
}

export interface AlbVirtualHostRouteOptionsRbacPrincipalAndPrincipalHeaderValue {
    /**
     * Match exactly.
     */
    exact?: pulumi.Input<string>;
    /**
     * Match prefix.
     */
    prefix?: pulumi.Input<string>;
    /**
     * Match regex.
     *
     * > **NOTE:** Exactly one type of string matches `exact`, `prefix` or `regex` should be
     * specified.
     */
    regex?: pulumi.Input<string>;
}

export interface AlbVirtualHostRouteRouteOptions {
    /**
     * RBAC configuration.
     */
    rbac?: pulumi.Input<inputs.AlbVirtualHostRouteRouteOptionsRbac>;
    /**
     * SWS profile ID.
     */
    securityProfileId?: pulumi.Input<string>;
}

export interface AlbVirtualHostRouteRouteOptionsRbac {
    action?: pulumi.Input<string>;
    principals: pulumi.Input<pulumi.Input<inputs.AlbVirtualHostRouteRouteOptionsRbacPrincipal>[]>;
}

export interface AlbVirtualHostRouteRouteOptionsRbacPrincipal {
    andPrincipals: pulumi.Input<pulumi.Input<inputs.AlbVirtualHostRouteRouteOptionsRbacPrincipalAndPrincipal>[]>;
}

export interface AlbVirtualHostRouteRouteOptionsRbacPrincipalAndPrincipal {
    any?: pulumi.Input<boolean>;
    header?: pulumi.Input<inputs.AlbVirtualHostRouteRouteOptionsRbacPrincipalAndPrincipalHeader>;
    remoteIp?: pulumi.Input<string>;
}

export interface AlbVirtualHostRouteRouteOptionsRbacPrincipalAndPrincipalHeader {
    /**
     * name of the header to modify.
     */
    name: pulumi.Input<string>;
    value?: pulumi.Input<inputs.AlbVirtualHostRouteRouteOptionsRbacPrincipalAndPrincipalHeaderValue>;
}

export interface AlbVirtualHostRouteRouteOptionsRbacPrincipalAndPrincipalHeaderValue {
    /**
     * Match exactly.
     */
    exact?: pulumi.Input<string>;
    /**
     * Match prefix.
     */
    prefix?: pulumi.Input<string>;
    /**
     * Match regex.
     *
     * > **NOTE:** Exactly one type of string matches `exact`, `prefix` or `regex` should be
     * specified.
     */
    regex?: pulumi.Input<string>;
}

export interface ApiGatewayCanary {
    /**
     * A set of values for variables in gateway specification.
     */
    variables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    weight?: pulumi.Input<number>;
}

export interface ApiGatewayConnectivity {
    networkId: pulumi.Input<string>;
}

export interface ApiGatewayCustomDomain {
    certificateId: pulumi.Input<string>;
    domainId?: pulumi.Input<string>;
    fqdn: pulumi.Input<string>;
}

export interface ApiGatewayLogOptions {
    /**
     * Is logging from API Gateway disabled
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * Folder ID for the Yandex Cloud API Gateway. If it is not provided, the default provider folder is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * Log entries are written to specified log group
     */
    logGroupId?: pulumi.Input<string>;
    /**
     * Minimum log entry level
     */
    minLevel?: pulumi.Input<string>;
}

export interface AuditTrailsTrailDataStreamDestination {
    /**
     * ID of the [YDB](https://cloud.yandex.ru/ru/docs/ydb/concepts/resources) hosting the destination data stream.
     */
    databaseId: pulumi.Input<string>;
    /**
     * Name of the [YDS stream](https://cloud.yandex.ru/ru/docs/data-streams/concepts/glossary#stream-concepts) belonging to the specified YDB.
     */
    streamName: pulumi.Input<string>;
}

export interface AuditTrailsTrailFilter {
    /**
     * Structure describing filtering process for the service-specific data plane events
     */
    eventFilters?: pulumi.Input<pulumi.Input<inputs.AuditTrailsTrailFilterEventFilter>[]>;
    /**
     * Structure describing filtering process based on cloud resources for the described event set. Structurally equal to the `filter.path_filter`
     */
    pathFilter?: pulumi.Input<inputs.AuditTrailsTrailFilterPathFilter>;
}

export interface AuditTrailsTrailFilterEventFilter {
    /**
     * List of structures describing categories of gathered data plane events
     */
    categories: pulumi.Input<pulumi.Input<inputs.AuditTrailsTrailFilterEventFilterCategory>[]>;
    /**
     * Structure describing filtering process based on cloud resources for the described event set. Structurally equal to the `filter.path_filter`
     */
    pathFilter: pulumi.Input<inputs.AuditTrailsTrailFilterEventFilterPathFilter>;
    /**
     * ID of the service which events will be gathered
     */
    service: pulumi.Input<string>;
}

export interface AuditTrailsTrailFilterEventFilterCategory {
    /**
     * Type of the event by its relation to the cloud resource model. Possible values: `CONTROL_PLANE`/`DATA_PLANE`
     */
    plane: pulumi.Input<string>;
    /**
     * Type of the event by its operation effect on the resource. Possible values: `READ`/`WRITE`
     */
    type: pulumi.Input<string>;
}

export interface AuditTrailsTrailFilterEventFilterPathFilter {
    /**
     * Structure describing that events will be gathered from all cloud resources that belong to the parent resource. Mutually exclusive with `someFilter`.
     */
    anyFilter?: pulumi.Input<inputs.AuditTrailsTrailFilterEventFilterPathFilterAnyFilter>;
    /**
     * Structure describing that events will be gathered from some of the cloud resources that belong to the parent resource. Mutually exclusive with `anyFilter`.
     */
    someFilter?: pulumi.Input<inputs.AuditTrailsTrailFilterEventFilterPathFilterSomeFilter>;
}

export interface AuditTrailsTrailFilterEventFilterPathFilterAnyFilter {
    /**
     * ID of the child resource.
     */
    resourceId: pulumi.Input<string>;
    /**
     * Resource type of the child resource.
     */
    resourceType: pulumi.Input<string>;
}

export interface AuditTrailsTrailFilterEventFilterPathFilterSomeFilter {
    /**
     * List of child resources from which events will be gathered
     */
    anyFilters: pulumi.Input<pulumi.Input<inputs.AuditTrailsTrailFilterEventFilterPathFilterSomeFilterAnyFilter>[]>;
    /**
     * ID of the child resource.
     */
    resourceId: pulumi.Input<string>;
    /**
     * Resource type of the child resource.
     */
    resourceType: pulumi.Input<string>;
}

export interface AuditTrailsTrailFilterEventFilterPathFilterSomeFilterAnyFilter {
    /**
     * ID of the child resource.
     */
    resourceId: pulumi.Input<string>;
    /**
     * Resource type of the child resource.
     */
    resourceType: pulumi.Input<string>;
}

export interface AuditTrailsTrailFilterPathFilter {
    /**
     * Structure describing that events will be gathered from all cloud resources that belong to the parent resource. Mutually exclusive with `someFilter`.
     */
    anyFilter?: pulumi.Input<inputs.AuditTrailsTrailFilterPathFilterAnyFilter>;
    /**
     * Structure describing that events will be gathered from some of the cloud resources that belong to the parent resource. Mutually exclusive with `anyFilter`.
     */
    someFilter?: pulumi.Input<inputs.AuditTrailsTrailFilterPathFilterSomeFilter>;
}

export interface AuditTrailsTrailFilterPathFilterAnyFilter {
    /**
     * ID of the child resource.
     */
    resourceId: pulumi.Input<string>;
    /**
     * Resource type of the child resource.
     */
    resourceType: pulumi.Input<string>;
}

export interface AuditTrailsTrailFilterPathFilterSomeFilter {
    /**
     * List of child resources from which events will be gathered
     */
    anyFilters: pulumi.Input<pulumi.Input<inputs.AuditTrailsTrailFilterPathFilterSomeFilterAnyFilter>[]>;
    /**
     * ID of the child resource.
     */
    resourceId: pulumi.Input<string>;
    /**
     * Resource type of the child resource.
     */
    resourceType: pulumi.Input<string>;
}

export interface AuditTrailsTrailFilterPathFilterSomeFilterAnyFilter {
    /**
     * ID of the child resource.
     */
    resourceId: pulumi.Input<string>;
    /**
     * Resource type of the child resource.
     */
    resourceType: pulumi.Input<string>;
}

export interface AuditTrailsTrailLoggingDestination {
    /**
     * ID of the destination [Cloud Logging Group](https://cloud.yandex.ru/ru/docs/logging/concepts/log-group)
     */
    logGroupId: pulumi.Input<string>;
}

export interface AuditTrailsTrailStorageDestination {
    /**
     * Name of the [destination bucket](https://cloud.yandex.ru/en/docs/storage/concepts/bucket)
     */
    bucketName: pulumi.Input<string>;
    /**
     * Additional prefix of the uploaded objects. If not specified, objects will be uploaded with prefix equal to `trailId`
     */
    objectPrefix?: pulumi.Input<string>;
}

export interface BackupPolicyReattempts {
    /**
     * — enables or disables scheduling.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * — Retry interval. See `intervalType` for available values
     */
    interval?: pulumi.Input<string>;
    /**
     * — Maximum number of attempts before throwing an error
     */
    maxAttempts?: pulumi.Input<number>;
}

export interface BackupPolicyRetention {
    /**
     * — Defines whether retention rule applies after creating backup or before.
     */
    afterBackup?: pulumi.Input<boolean>;
    rules?: pulumi.Input<pulumi.Input<inputs.BackupPolicyRetentionRule>[]>;
}

export interface BackupPolicyRetentionRule {
    /**
     * — Deletes backups that older than `maxAge`. Exactly one of `maxCount` or `maxAge` should be set.
     */
    maxAge?: pulumi.Input<string>;
    /**
     * — Deletes backups if it's count exceeds `maxCount`. Exactly one of `maxCount` or `maxAge` should be set.
     */
    maxCount?: pulumi.Input<number>;
    repeatPeriods?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface BackupPolicyScheduling {
    /**
     * A list of schedules with backup sets that compose the whole scheme.
     */
    backupSets?: pulumi.Input<pulumi.Input<inputs.BackupPolicySchedulingBackupSet>[]>;
    /**
     * — enables or disables scheduling.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * — Perform backup by interval, since last backup of the host. Maximum value is: 9999 days.
     * See `intervalType` for available values. Exactly on of options should be set: `executeByInterval` or `executeByTime`.
     *
     * @deprecated The 'execute_by_interval' field has been deprecated. Please use 'backup_sets' instead.
     */
    executeByInterval?: pulumi.Input<number>;
    /**
     * — Perform backup periodically at specific time. Exactly on of options should be set: `executeByInterval` or `executeByTime`.
     *
     * @deprecated The 'execute_by_time' field has been deprecated. Please use 'backup_sets' instead.
     */
    executeByTimes?: pulumi.Input<pulumi.Input<inputs.BackupPolicySchedulingExecuteByTime>[]>;
    /**
     * — Maximum number of backup processes allowed to run in parallel. 0 for unlimited.
     */
    maxParallelBackups?: pulumi.Input<number>;
    /**
     * — Configuration of the random delay between the execution of parallel tasks.
     * See `intervalType` for available values.
     */
    randomMaxDelay?: pulumi.Input<string>;
    /**
     * — Scheme of the backups.
     * Available values are: `"ALWAYS_INCREMENTAL"`, `"ALWAYS_FULL"`, `"WEEKLY_FULL_DAILY_INCREMENTAL"`, `'WEEKLY_INCREMENTAL"`.
     */
    scheme?: pulumi.Input<string>;
    /**
     * — A day of week to start weekly backups.
     * See `dayType` for available values.
     */
    weeklyBackupDay?: pulumi.Input<string>;
}

export interface BackupPolicySchedulingBackupSet {
    /**
     * — Perform backup by interval, since last backup of the host. Maximum value is: 9999 days.
     * See `intervalType` for available values. Exactly on of options should be set: `executeByInterval` or `executeByTime`.
     */
    executeByInterval?: pulumi.Input<number>;
    /**
     * — Perform backup periodically at specific time. Exactly on of options should be set: `executeByInterval` or `executeByTime`.
     */
    executeByTimes?: pulumi.Input<pulumi.Input<inputs.BackupPolicySchedulingBackupSetExecuteByTime>[]>;
    /**
     * — Type of the scheduling. Available values are: `"HOURLY"`, `"DAILY"`, `"WEEKLY"`, `"MONTHLY"`.
     */
    type?: pulumi.Input<string>;
}

export interface BackupPolicySchedulingBackupSetExecuteByTime {
    /**
     * — If true, schedule will be applied on the last day of month.
     * See `dayType` for available values.
     */
    includeLastDayOfMonth?: pulumi.Input<boolean>;
    /**
     * — List of days when schedule applies. Used in `"MONTHLY"` type.
     */
    monthdays?: pulumi.Input<pulumi.Input<number>[]>;
    months?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * — List of time in format `"HH:MM" (24-hours format)`, when the schedule applies.
     */
    repeatAts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * — Frequency of backup repetition. See `intervalType` for available values.
     */
    repeatEvery?: pulumi.Input<string>;
    /**
     * — Type of the scheduling. Available values are: `"HOURLY"`, `"DAILY"`, `"WEEKLY"`, `"MONTHLY"`.
     */
    type: pulumi.Input<string>;
    /**
     * — List of weekdays when the backup will be applied. Used in `"WEEKLY"` type.
     */
    weekdays?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface BackupPolicySchedulingExecuteByTime {
    /**
     * — If true, schedule will be applied on the last day of month.
     * See `dayType` for available values.
     */
    includeLastDayOfMonth?: pulumi.Input<boolean>;
    /**
     * — List of days when schedule applies. Used in `"MONTHLY"` type.
     */
    monthdays?: pulumi.Input<pulumi.Input<number>[]>;
    months?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * — List of time in format `"HH:MM" (24-hours format)`, when the schedule applies.
     */
    repeatAts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * — Frequency of backup repetition. See `intervalType` for available values.
     */
    repeatEvery?: pulumi.Input<string>;
    /**
     * — Type of the scheduling. Available values are: `"HOURLY"`, `"DAILY"`, `"WEEKLY"`, `"MONTHLY"`.
     */
    type: pulumi.Input<string>;
    /**
     * — List of weekdays when the backup will be applied. Used in `"WEEKLY"` type.
     */
    weekdays?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface BackupPolicyVmSnapshotReattempts {
    /**
     * — enables or disables scheduling.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * — Retry interval. See `intervalType` for available values
     */
    interval?: pulumi.Input<string>;
    /**
     * — Maximum number of attempts before throwing an error
     */
    maxAttempts?: pulumi.Input<number>;
}

export interface CdnOriginGroupOrigin {
    backup?: pulumi.Input<boolean>;
    enabled?: pulumi.Input<boolean>;
    originGroupId?: pulumi.Input<number>;
    source: pulumi.Input<string>;
}

export interface CdnResourceOptions {
    /**
     * HTTP methods for your CDN content. By default the following methods are allowed: GET, HEAD, POST, PUT, PATCH, DELETE, OPTIONS. In case some methods are not allowed to the user, they will get the 405 (Method Not Allowed) response. If the method is not supported, the user gets the 501 (Not Implemented) response.
     */
    allowedHttpMethods?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * set up a cache period for the end-users browser. Content will be cached due to origin settings. If there are no cache settings on your origin, the content will not be cached. The list of HTTP response codes that can be cached in browsers: 200, 201, 204, 206, 301, 302, 303, 304, 307, 308. Other response codes will not be cached. The default value is 4 days.
     */
    browserCacheSettings?: pulumi.Input<number>;
    /**
     * list HTTP headers that must be included in responses to clients.
     */
    cacheHttpHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * parameter that lets browsers get access to selected resources from a domain different to a domain from which the request is received.
     */
    cors?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * custom value for the Host header. Your server must be able to process requests with the chosen header.
     */
    customHostHeader?: pulumi.Input<string>;
    /**
     * wildcard additional CNAME. If a resource has a wildcard additional CNAME, you can use your own certificate for content delivery via HTTPS. Read-only.
     */
    customServerName?: pulumi.Input<string>;
    /**
     * setup a cache status.
     */
    disableCache?: pulumi.Input<boolean>;
    /**
     * disabling proxy force ranges.
     */
    disableProxyForceRanges?: pulumi.Input<boolean>;
    /**
     * content will be cached according to origin cache settings. The value applies for a response with codes 200, 201, 204, 206, 301, 302, 303, 304, 307, 308 if an origin server does not have caching HTTP headers. Responses with other codes will not be cached.
     */
    edgeCacheSettings?: pulumi.Input<number>;
    /**
     * enable access limiting by IP addresses, option available only with setting secure_key.
     *
     * * `ip_address_acl.excepted_values` - the list of specified IP addresses to be allowed or denied depending on acl policy type.
     *
     * * `ip_address_acl.policy_type` - the policy type for ipAddressAcl option, one of "allow" or "deny" values.
     */
    enableIpUrlSigning?: pulumi.Input<boolean>;
    /**
     * option helps you to reduce the bandwidth between origin and CDN servers. Also, content delivery speed becomes higher because of reducing the time for compressing files in a CDN.
     */
    fetchedCompressed?: pulumi.Input<boolean>;
    /**
     * choose the Forward Host header option if is important to send in the request to the Origin the same Host header as was sent in the request to CDN server.
     */
    forwardHostHeader?: pulumi.Input<boolean>;
    /**
     * GZip compression at CDN servers reduces file size by 70% and can be as high as 90%.
     */
    gzipOn?: pulumi.Input<boolean>;
    /**
     * set for ignoring cookie.
     */
    ignoreCookie?: pulumi.Input<boolean>;
    /**
     * files with different query parameters are cached as objects with the same key regardless of the parameter value. selected by default.
     */
    ignoreQueryParams?: pulumi.Input<boolean>;
    ipAddressAcl?: pulumi.Input<inputs.CdnResourceOptionsIpAddressAcl>;
    /**
     * allows caching for GET, HEAD and POST requests.
     */
    proxyCacheMethodsSet?: pulumi.Input<boolean>;
    /**
     * files with the specified query parameters are cached as objects with the same key, files with other parameters are cached as objects with different keys.
     */
    queryParamsBlacklists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * files with the specified query parameters are cached as objects with different keys, files with other parameters are cached as objects with the same key.
     */
    queryParamsWhitelists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * set up a redirect from HTTP to HTTPS.
     */
    redirectHttpToHttps?: pulumi.Input<boolean>;
    /**
     * set up a redirect from HTTPS to HTTP.
     */
    redirectHttpsToHttp?: pulumi.Input<boolean>;
    /**
     * set secure key for url encoding to protect contect and limit access by IP addresses and time limits.
     */
    secureKey?: pulumi.Input<string>;
    /**
     * files larger than 10 MB will be requested and cached in parts (no larger than 10 MB each part). It reduces time to first byte. The origin must support HTTP Range requests.
     */
    slice?: pulumi.Input<boolean>;
    /**
     * set up custom headers that CDN servers will send in requests to origins.
     */
    staticRequestHeaders?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * set up custom headers that CDN servers will send in response to clients.
     */
    staticResponseHeaders?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface CdnResourceOptionsIpAddressAcl {
    exceptedValues?: pulumi.Input<pulumi.Input<string>[]>;
    policyType?: pulumi.Input<string>;
}

export interface CdnResourceSslCertificate {
    certificateManagerId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface CmCertificateChallenge {
    /**
     * Time the challenge was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * DNS record name (only for DNS challenge).
     */
    dnsName?: pulumi.Input<string>;
    /**
     * DNS record type: `"TXT"` or `"CNAME"` (only for DNS challenge).
     */
    dnsType?: pulumi.Input<string>;
    /**
     * DNS record value (only for DNS challenge).
     */
    dnsValue?: pulumi.Input<string>;
    /**
     * Validated domain.
     */
    domain?: pulumi.Input<string>;
    /**
     * The content that should be made accessible with the given `httpUrl` (only for HTTP challenge).
     */
    httpContent?: pulumi.Input<string>;
    /**
     * URL where the challenge content httpContent should be placed (only for HTTP challenge).
     */
    httpUrl?: pulumi.Input<string>;
    /**
     * Current status message.
     */
    message?: pulumi.Input<string>;
    /**
     * Challenge type `"DNS"` or `"HTTP"`.
     */
    type?: pulumi.Input<string>;
    /**
     * Last time the challenge was updated.
     */
    updatedAt?: pulumi.Input<string>;
}

export interface CmCertificateManaged {
    /**
     * . Expected number of challenge count needed to validate certificate. 
     * Resource creation will fail if the specified value does not match the actual number of challenges received from issue provider.
     * This argument is helpful for safe automatic resource creation for passing challenges for multi-domain certificates.
     *
     * > **NOTE:** Resource creation awaits getting challenges from issue provider.
     */
    challengeCount?: pulumi.Input<number>;
    /**
     * Domain owner-check method. Possible values:
     * - "DNS_CNAME" - you will need to create a CNAME dns record with the specified value. Recommended for fully automated certificate renewal;
     * - "DNS_TXT" - you will need to create a TXT dns record with specified value;
     * - "HTTP" - you will need to place specified value into specified url.
     */
    challengeType: pulumi.Input<string>;
}

export interface CmCertificateSelfManaged {
    /**
     * Certificate with chain.
     */
    certificate: pulumi.Input<string>;
    /**
     * Private key of certificate.
     */
    privateKey?: pulumi.Input<string>;
    /**
     * Lockbox secret specification for getting private key. Structure is documented below.
     *
     * > **NOTE:** Only one type `privateKey` or `privateKeyLockboxSecret` should be specified.
     */
    privateKeyLockboxSecret?: pulumi.Input<inputs.CmCertificateSelfManagedPrivateKeyLockboxSecret>;
}

export interface CmCertificateSelfManagedPrivateKeyLockboxSecret {
    /**
     * Lockbox secret Id.
     */
    id: pulumi.Input<string>;
    /**
     * Key of the Lockbox secret, the value of which contains the private key of the certificate.
     */
    key: pulumi.Input<string>;
}

export interface ComputeDiskDiskPlacementPolicy {
    /**
     * Specifies Disk Placement Group id.
     *
     * > **NOTE:** Only one of `imageId` or `snapshotId` can be specified.
     */
    diskPlacementGroupId: pulumi.Input<string>;
}

export interface ComputeInstanceBootDisk {
    /**
     * Defines whether the disk will be auto-deleted when the instance
     * is deleted. The default value is `True`.
     */
    autoDelete?: pulumi.Input<boolean>;
    /**
     * Name that can be used to access an attached disk.
     */
    deviceName?: pulumi.Input<string>;
    /**
     * The ID of the existing disk (such as those managed by
     * `yandex.ComputeDisk`) to attach as a boot disk.
     */
    diskId?: pulumi.Input<string>;
    /**
     * Parameters for a new disk that will be created
     * alongside the new instance. Either `initializeParams` or `diskId` must be set. The structure is documented below.
     *
     * > **NOTE:** Either `initializeParams` or `diskId` must be specified.
     */
    initializeParams?: pulumi.Input<inputs.ComputeInstanceBootDiskInitializeParams>;
    /**
     * Type of access to the disk resource. By default, a disk is attached in `READ_WRITE` mode.
     */
    mode?: pulumi.Input<string>;
}

export interface ComputeInstanceBootDiskInitializeParams {
    /**
     * Block size of the disk, specified in bytes.
     */
    blockSize?: pulumi.Input<number>;
    /**
     * Description of the boot disk.
     */
    description?: pulumi.Input<string>;
    /**
     * A disk image to initialize this disk from.
     */
    imageId?: pulumi.Input<string>;
    /**
     * Name of the boot disk.
     */
    name?: pulumi.Input<string>;
    /**
     * Size of the disk in GB.
     */
    size?: pulumi.Input<number>;
    /**
     * A snapshot to initialize this disk from.
     *
     * > **NOTE:** Either `imageId` or `snapshotId` must be specified.
     */
    snapshotId?: pulumi.Input<string>;
    /**
     * Disk type.
     */
    type?: pulumi.Input<string>;
}

export interface ComputeInstanceFilesystem {
    /**
     * Name of the device representing the filesystem on the instance.
     */
    deviceName?: pulumi.Input<string>;
    /**
     * ID of the filesystem that should be attached.
     */
    filesystemId: pulumi.Input<string>;
    /**
     * Mode of access to the filesystem that should be attached. By default, filesystem is attached 
     * in `READ_WRITE` mode.
     */
    mode?: pulumi.Input<string>;
}

export interface ComputeInstanceGroupAllocationPolicy {
    /**
     * Array of availability zone IDs with list of instance tags.
     */
    instanceTagsPools?: pulumi.Input<pulumi.Input<inputs.ComputeInstanceGroupAllocationPolicyInstanceTagsPool>[]>;
    /**
     * A list of availability zones.
     */
    zones: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ComputeInstanceGroupAllocationPolicyInstanceTagsPool {
    /**
     * List of tags for instances in zone.
     */
    tags: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Availability zone.
     */
    zone: pulumi.Input<string>;
}

export interface ComputeInstanceGroupApplicationLoadBalancer {
    /**
     * Do not wait load balancer health checks.
     */
    ignoreHealthChecks?: pulumi.Input<boolean>;
    /**
     * Timeout for waiting for the VM to be checked by the load balancer. If the timeout is exceeded, the VM will be turned off based on the deployment policy. Specified in seconds.
     */
    maxOpeningTrafficDuration?: pulumi.Input<number>;
    /**
     * The status message of the instance.
     */
    statusMessage?: pulumi.Input<string>;
    /**
     * A description of the target group.
     */
    targetGroupDescription?: pulumi.Input<string>;
    targetGroupId?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs.
     */
    targetGroupLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the target group.
     */
    targetGroupName?: pulumi.Input<string>;
}

export interface ComputeInstanceGroupDeployPolicy {
    /**
     * The maximum number of instances that can be created at the same time.
     */
    maxCreating?: pulumi.Input<number>;
    /**
     * The maximum number of instances that can be deleted at the same time.
     */
    maxDeleting?: pulumi.Input<number>;
    /**
     * The maximum number of instances that can be temporarily allocated above the group's target size
     * during the update process.
     *
     * - - -
     */
    maxExpansion: pulumi.Input<number>;
    /**
     * The maximum number of running instances that can be taken offline (stopped or deleted) at the same time
     * during the update process.
     */
    maxUnavailable: pulumi.Input<number>;
    /**
     * The amount of time in seconds to allow for an instance to start.
     * Instance will be considered up and running (and start receiving traffic) only after the startupDuration
     * has elapsed and all health checks are passed.
     */
    startupDuration?: pulumi.Input<number>;
    /**
     * Affects the lifecycle of the instance during deployment. If set to `proactive` (default), Instance Groups
     * can forcefully stop a running instance. If `opportunistic`, Instance Groups does not stop a running instance. Instead,
     * it will wait until the instance stops itself or becomes unhealthy.
     */
    strategy?: pulumi.Input<string>;
}

export interface ComputeInstanceGroupHealthCheck {
    /**
     * The number of successful health checks before the managed instance is declared healthy.
     */
    healthyThreshold?: pulumi.Input<number>;
    /**
     * HTTP check options. The structure is documented below.
     */
    httpOptions?: pulumi.Input<inputs.ComputeInstanceGroupHealthCheckHttpOptions>;
    /**
     * The interval to wait between health checks in seconds.
     */
    interval?: pulumi.Input<number>;
    /**
     * TCP check options. The structure is documented below.
     */
    tcpOptions?: pulumi.Input<inputs.ComputeInstanceGroupHealthCheckTcpOptions>;
    /**
     * The length of time to wait for a response before the health check times out in seconds.
     */
    timeout?: pulumi.Input<number>;
    /**
     * The number of failed health checks before the managed instance is declared unhealthy.
     */
    unhealthyThreshold?: pulumi.Input<number>;
}

export interface ComputeInstanceGroupHealthCheckHttpOptions {
    /**
     * The URL path used for health check requests.
     */
    path: pulumi.Input<string>;
    /**
     * The port used for HTTP health checks.
     */
    port: pulumi.Input<number>;
}

export interface ComputeInstanceGroupHealthCheckTcpOptions {
    /**
     * The port used for TCP health checks.
     */
    port: pulumi.Input<number>;
}

export interface ComputeInstanceGroupInstance {
    /**
     * DNS record fqdn (must have dot at the end).
     */
    fqdn?: pulumi.Input<string>;
    /**
     * The ID of the instance.
     */
    instanceId?: pulumi.Input<string>;
    instanceTag?: pulumi.Input<string>;
    /**
     * The name of the instance group.
     */
    name?: pulumi.Input<string>;
    /**
     * Network specifications for the instance. This can be used multiple times for adding multiple interfaces. The structure is documented below.
     */
    networkInterfaces?: pulumi.Input<pulumi.Input<inputs.ComputeInstanceGroupInstanceNetworkInterface>[]>;
    /**
     * The status of the instance.
     */
    status?: pulumi.Input<string>;
    statusChangedAt?: pulumi.Input<string>;
    /**
     * The status message of the instance.
     */
    statusMessage?: pulumi.Input<string>;
    /**
     * The ID of the availability zone where the instance resides.
     */
    zoneId?: pulumi.Input<string>;
}

export interface ComputeInstanceGroupInstanceNetworkInterface {
    /**
     * The index of the network interface as generated by the server.
     */
    index?: pulumi.Input<number>;
    /**
     * Manual set static IP address.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * True if IPv4 address allocated for the network interface.
     */
    ipv4?: pulumi.Input<boolean>;
    ipv6?: pulumi.Input<boolean>;
    /**
     * Manual set static IPv6 address.
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * The MAC address assigned to the network interface.
     */
    macAddress?: pulumi.Input<string>;
    /**
     * Flag for using NAT.
     */
    nat?: pulumi.Input<boolean>;
    /**
     * A public address that can be used to access the internet over NAT. Use `variables` to set.
     */
    natIpAddress?: pulumi.Input<string>;
    /**
     * The IP version for the public address.
     */
    natIpVersion?: pulumi.Input<string>;
    /**
     * The ID of the subnet to attach this interface to. The subnet must reside in the same zone where this instance was created.
     */
    subnetId?: pulumi.Input<string>;
}

export interface ComputeInstanceGroupInstanceTemplate {
    /**
     * Boot disk specifications for the instance. The structure is documented below.
     */
    bootDisk: pulumi.Input<inputs.ComputeInstanceGroupInstanceTemplateBootDisk>;
    /**
     * A description of the instance.
     */
    description?: pulumi.Input<string>;
    /**
     * List of filesystems to attach to the instance. The structure is documented below.
     */
    filesystems?: pulumi.Input<pulumi.Input<inputs.ComputeInstanceGroupInstanceTemplateFilesystem>[]>;
    /**
     * Hostname template for the instance.   
     * This field is used to generate the FQDN value of instance.
     * The hostname must be unique within the network and region.
     * If not specified, the hostname will be equal to id of the instance
     * and FQDN will be `<id>.auto.internal`. Otherwise FQDN will be `<hostname>.<region_id>.internal`.
     * In order to be unique it must contain at least on of instance unique placeholders:
     * {instance.short_id}
     * {instance.index}
     * combination of {instance.zone_id} and {instance.index_in_zone}
     * Example: my-instance-{instance.index}
     * If not set, `name` value will be used
     * It may also contain another placeholders, see metadata doc for full list.
     */
    hostname?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs to assign to the instance.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A set of metadata key/value pairs to make available from within the instance.
     */
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Options allow user to configure access to managed instances metadata
     */
    metadataOptions?: pulumi.Input<inputs.ComputeInstanceGroupInstanceTemplateMetadataOptions>;
    /**
     * Name template of the instance.  
     * In order to be unique it must contain at least one of instance unique placeholders:
     * {instance.short_id}
     * {instance.index}
     * combination of {instance.zone_id} and {instance.index_in_zone}
     * Example: my-instance-{instance.index}
     * If not set, default is used: {instance_group.id}-{instance.short_id}
     * It may also contain another placeholders, see metadata doc for full list.
     */
    name?: pulumi.Input<string>;
    /**
     * Network specifications for the instance. This can be used multiple times for adding multiple interfaces. The structure is documented below.
     */
    networkInterfaces: pulumi.Input<pulumi.Input<inputs.ComputeInstanceGroupInstanceTemplateNetworkInterface>[]>;
    /**
     * Network acceleration type for instance. The structure is documented below.
     */
    networkSettings?: pulumi.Input<pulumi.Input<inputs.ComputeInstanceGroupInstanceTemplateNetworkSetting>[]>;
    /**
     * The placement policy configuration. The structure is documented below.
     */
    placementPolicy?: pulumi.Input<inputs.ComputeInstanceGroupInstanceTemplatePlacementPolicy>;
    /**
     * The ID of the hardware platform configuration for the instance. The default is 'standard-v1'.
     */
    platformId?: pulumi.Input<string>;
    /**
     * Compute resource specifications for the instance. The structure is documented below.
     */
    resources: pulumi.Input<inputs.ComputeInstanceGroupInstanceTemplateResources>;
    /**
     * The scheduling policy configuration. The structure is documented below.
     */
    schedulingPolicy?: pulumi.Input<inputs.ComputeInstanceGroupInstanceTemplateSchedulingPolicy>;
    /**
     * A list of disks to attach to the instance. The structure is documented below.
     */
    secondaryDisks?: pulumi.Input<pulumi.Input<inputs.ComputeInstanceGroupInstanceTemplateSecondaryDisk>[]>;
    /**
     * The ID of the service account authorized for this instance.
     */
    serviceAccountId?: pulumi.Input<string>;
}

export interface ComputeInstanceGroupInstanceTemplateBootDisk {
    /**
     * This value can be used to reference the device under `/dev/disk/by-id/`.
     */
    deviceName?: pulumi.Input<string>;
    /**
     * ID of the existing disk. To set use variables.
     */
    diskId?: pulumi.Input<string>;
    /**
     * Parameters for creating a disk alongside the instance. The structure is documented below.
     */
    initializeParams?: pulumi.Input<inputs.ComputeInstanceGroupInstanceTemplateBootDiskInitializeParams>;
    /**
     * The access mode to the disk resource. By default a disk is attached in `READ_WRITE` mode.
     */
    mode?: pulumi.Input<string>;
    /**
     * When set can be later used to change DiskSpec of actual disk.
     */
    name?: pulumi.Input<string>;
}

export interface ComputeInstanceGroupInstanceTemplateBootDiskInitializeParams {
    /**
     * A description of the boot disk.
     */
    description?: pulumi.Input<string>;
    /**
     * The disk image to initialize this disk from.
     */
    imageId?: pulumi.Input<string>;
    /**
     * The size of the disk in GB.
     */
    size?: pulumi.Input<number>;
    /**
     * The snapshot to initialize this disk from.
     *
     * > **NOTE:** `imageId` or `snapshotId` must be specified.
     */
    snapshotId?: pulumi.Input<string>;
    /**
     * The disk type.
     */
    type?: pulumi.Input<string>;
}

export interface ComputeInstanceGroupInstanceTemplateFilesystem {
    /**
     * This value can be used to reference the device under `/dev/disk/by-id/`.
     */
    deviceName?: pulumi.Input<string>;
    /**
     * (Required) ID of the filesystem that should be attached.
     */
    filesystemId: pulumi.Input<string>;
    /**
     * The access mode to the disk resource. By default a disk is attached in `READ_WRITE` mode.
     */
    mode?: pulumi.Input<string>;
}

export interface ComputeInstanceGroupInstanceTemplateMetadataOptions {
    awsV1HttpEndpoint?: pulumi.Input<number>;
    awsV1HttpToken?: pulumi.Input<number>;
    gceHttpEndpoint?: pulumi.Input<number>;
    gceHttpToken?: pulumi.Input<number>;
}

export interface ComputeInstanceGroupInstanceTemplateNetworkInterface {
    /**
     * List of dns records.  The structure is documented below.
     */
    dnsRecords?: pulumi.Input<pulumi.Input<inputs.ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord>[]>;
    /**
     * Manual set static IP address.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * True if IPv4 address allocated for the network interface.
     */
    ipv4?: pulumi.Input<boolean>;
    ipv6?: pulumi.Input<boolean>;
    /**
     * Manual set static IPv6 address.
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * List of ipv6 dns records.  The structure is documented below.
     */
    ipv6DnsRecords?: pulumi.Input<pulumi.Input<inputs.ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord>[]>;
    /**
     * Flag for using NAT.
     */
    nat?: pulumi.Input<boolean>;
    /**
     * List of nat dns records.  The structure is documented below.
     */
    natDnsRecords?: pulumi.Input<pulumi.Input<inputs.ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord>[]>;
    /**
     * A public address that can be used to access the internet over NAT. Use `variables` to set.
     */
    natIpAddress?: pulumi.Input<string>;
    /**
     * The ID of the network.
     */
    networkId?: pulumi.Input<string>;
    /**
     * Security group ids for network interface.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the subnets to attach this interface to.
     */
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ComputeInstanceGroupInstanceTemplateNetworkInterfaceDnsRecord {
    /**
     * DNS zone id (if not set, private zone used).
     */
    dnsZoneId?: pulumi.Input<string>;
    /**
     * DNS record fqdn (must have dot at the end).
     */
    fqdn: pulumi.Input<string>;
    /**
     * When set to true, also create PTR DNS record.
     */
    ptr?: pulumi.Input<boolean>;
    /**
     * DNS record TTL.
     */
    ttl?: pulumi.Input<number>;
}

export interface ComputeInstanceGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord {
    /**
     * DNS zone id (if not set, private zone used).
     */
    dnsZoneId?: pulumi.Input<string>;
    /**
     * DNS record fqdn (must have dot at the end).
     */
    fqdn: pulumi.Input<string>;
    /**
     * When set to true, also create PTR DNS record.
     */
    ptr?: pulumi.Input<boolean>;
    /**
     * DNS record TTL.
     */
    ttl?: pulumi.Input<number>;
}

export interface ComputeInstanceGroupInstanceTemplateNetworkInterfaceNatDnsRecord {
    /**
     * DNS zone id (if not set, private zone used).
     */
    dnsZoneId?: pulumi.Input<string>;
    /**
     * DNS record fqdn (must have dot at the end).
     */
    fqdn: pulumi.Input<string>;
    /**
     * When set to true, also create PTR DNS record.
     */
    ptr?: pulumi.Input<boolean>;
    /**
     * DNS record TTL.
     */
    ttl?: pulumi.Input<number>;
}

export interface ComputeInstanceGroupInstanceTemplateNetworkSetting {
    /**
     * Network acceleration type. By default a network is in `STANDARD` mode.
     */
    type?: pulumi.Input<string>;
}

export interface ComputeInstanceGroupInstanceTemplatePlacementPolicy {
    /**
     * Specifies the id of the Placement Group to assign to the instances.
     */
    placementGroupId: pulumi.Input<string>;
}

export interface ComputeInstanceGroupInstanceTemplateResources {
    /**
     * If provided, specifies baseline core performance as a percent.
     */
    coreFraction?: pulumi.Input<number>;
    /**
     * The number of CPU cores for the instance.
     *
     * - - -
     */
    cores: pulumi.Input<number>;
    gpus?: pulumi.Input<number>;
    /**
     * The memory size in GB.
     */
    memory: pulumi.Input<number>;
}

export interface ComputeInstanceGroupInstanceTemplateSchedulingPolicy {
    /**
     * Specifies if the instance is preemptible. Defaults to false.
     */
    preemptible?: pulumi.Input<boolean>;
}

export interface ComputeInstanceGroupInstanceTemplateSecondaryDisk {
    /**
     * This value can be used to reference the device under `/dev/disk/by-id/`.
     */
    deviceName?: pulumi.Input<string>;
    /**
     * ID of the existing disk. To set use variables.
     */
    diskId?: pulumi.Input<string>;
    /**
     * Parameters used for creating a disk alongside the instance. The structure is documented below.
     */
    initializeParams?: pulumi.Input<inputs.ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParams>;
    /**
     * The access mode to the disk resource. By default a disk is attached in `READ_WRITE` mode.
     */
    mode?: pulumi.Input<string>;
    /**
     * When set can be later used to change DiskSpec of actual disk.
     */
    name?: pulumi.Input<string>;
}

export interface ComputeInstanceGroupInstanceTemplateSecondaryDiskInitializeParams {
    /**
     * A description of the boot disk.
     */
    description?: pulumi.Input<string>;
    /**
     * The disk image to initialize this disk from.
     */
    imageId?: pulumi.Input<string>;
    /**
     * The size of the disk in GB.
     */
    size?: pulumi.Input<number>;
    /**
     * The snapshot to initialize this disk from.
     *
     * > **NOTE:** `imageId` or `snapshotId` must be specified.
     */
    snapshotId?: pulumi.Input<string>;
    /**
     * The disk type.
     */
    type?: pulumi.Input<string>;
}

export interface ComputeInstanceGroupLoadBalancer {
    /**
     * Do not wait load balancer health checks.
     */
    ignoreHealthChecks?: pulumi.Input<boolean>;
    /**
     * Timeout for waiting for the VM to be checked by the load balancer. If the timeout is exceeded, the VM will be turned off based on the deployment policy. Specified in seconds.
     */
    maxOpeningTrafficDuration?: pulumi.Input<number>;
    /**
     * The status message of the target group.
     */
    statusMessage?: pulumi.Input<string>;
    /**
     * A description of the target group.
     */
    targetGroupDescription?: pulumi.Input<string>;
    /**
     * The ID of the target group.
     */
    targetGroupId?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs.
     */
    targetGroupLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the target group.
     */
    targetGroupName?: pulumi.Input<string>;
}

export interface ComputeInstanceGroupScalePolicy {
    /**
     * The auto scaling policy of the instance group. The structure is documented below.
     *
     * > **NOTE:** Either `fixedScale` or `autoScale` must be specified.
     */
    autoScale?: pulumi.Input<inputs.ComputeInstanceGroupScalePolicyAutoScale>;
    /**
     * The fixed scaling policy of the instance group. The structure is documented below.
     */
    fixedScale?: pulumi.Input<inputs.ComputeInstanceGroupScalePolicyFixedScale>;
    /**
     * The test auto scaling policy of the instance group. Use it to test how the auto scale works. The structure is documented below.
     */
    testAutoScale?: pulumi.Input<inputs.ComputeInstanceGroupScalePolicyTestAutoScale>;
}

export interface ComputeInstanceGroupScalePolicyAutoScale {
    /**
     * . Autoscale type, can be `ZONAL` or `REGIONAL`. By default `ZONAL` type is used.
     */
    autoScaleType?: pulumi.Input<string>;
    /**
     * Target CPU load level.
     */
    cpuUtilizationTarget?: pulumi.Input<number>;
    /**
     * A list of custom rules. The structure is documented below.
     */
    customRules?: pulumi.Input<pulumi.Input<inputs.ComputeInstanceGroupScalePolicyAutoScaleCustomRule>[]>;
    /**
     * The initial number of instances in the instance group.
     */
    initialSize: pulumi.Input<number>;
    /**
     * The maximum number of virtual machines in the group.
     */
    maxSize?: pulumi.Input<number>;
    /**
     * The amount of time, in seconds, that metrics are averaged for.
     * If the average value at the end of the interval is higher than the `cpuUtilizationTarget`,
     * the instance group will increase the number of virtual machines in the group.
     */
    measurementDuration: pulumi.Input<number>;
    /**
     * The minimum number of virtual machines in a single availability zone.
     */
    minZoneSize?: pulumi.Input<number>;
    /**
     * The minimum time interval, in seconds, to monitor the load before
     * an instance group can reduce the number of virtual machines in the group. During this time, the group
     * will not decrease even if the average load falls below the value of `cpuUtilizationTarget`.
     */
    stabilizationDuration?: pulumi.Input<number>;
    /**
     * The warm-up time of the virtual machine, in seconds. During this time,
     * traffic is fed to the virtual machine, but load metrics are not taken into account.
     */
    warmupDuration?: pulumi.Input<number>;
}

export interface ComputeInstanceGroupScalePolicyAutoScaleCustomRule {
    /**
     * Folder ID of custom metric in Yandex Monitoring that should be used for scaling.
     */
    folderId?: pulumi.Input<string>;
    /**
     * A map of labels of metric.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of metric.
     */
    metricName: pulumi.Input<string>;
    /**
     * Metric type, `GAUGE` or `COUNTER`.
     */
    metricType: pulumi.Input<string>;
    /**
     * Rule type: `UTILIZATION` - This type means that the metric applies to one instance.
     * First, Instance Groups calculates the average metric value for each instance,
     * then averages the values for instances in one availability zone.
     * This type of metric must have the `instanceId` label. `WORKLOAD` - This type means that the metric applies to instances in one availability zone.
     * This type of metric must have the `zoneId` label.
     */
    ruleType: pulumi.Input<string>;
    /**
     * Service of custom metric in Yandex Monitoring that should be used for scaling.
     */
    service?: pulumi.Input<string>;
    /**
     * Target metric value level.
     */
    target: pulumi.Input<number>;
}

export interface ComputeInstanceGroupScalePolicyFixedScale {
    /**
     * The number of instances in the instance group.
     */
    size: pulumi.Input<number>;
}

export interface ComputeInstanceGroupScalePolicyTestAutoScale {
    /**
     * . Autoscale type, can be `ZONAL` or `REGIONAL`. By default `ZONAL` type is used.
     */
    autoScaleType?: pulumi.Input<string>;
    /**
     * Target CPU load level.
     */
    cpuUtilizationTarget?: pulumi.Input<number>;
    /**
     * A list of custom rules. The structure is documented below.
     */
    customRules?: pulumi.Input<pulumi.Input<inputs.ComputeInstanceGroupScalePolicyTestAutoScaleCustomRule>[]>;
    /**
     * The initial number of instances in the instance group.
     */
    initialSize: pulumi.Input<number>;
    /**
     * The maximum number of virtual machines in the group.
     */
    maxSize?: pulumi.Input<number>;
    /**
     * The amount of time, in seconds, that metrics are averaged for.
     * If the average value at the end of the interval is higher than the `cpuUtilizationTarget`,
     * the instance group will increase the number of virtual machines in the group.
     */
    measurementDuration: pulumi.Input<number>;
    /**
     * The minimum number of virtual machines in a single availability zone.
     */
    minZoneSize?: pulumi.Input<number>;
    /**
     * The minimum time interval, in seconds, to monitor the load before
     * an instance group can reduce the number of virtual machines in the group. During this time, the group
     * will not decrease even if the average load falls below the value of `cpuUtilizationTarget`.
     */
    stabilizationDuration?: pulumi.Input<number>;
    /**
     * The warm-up time of the virtual machine, in seconds. During this time,
     * traffic is fed to the virtual machine, but load metrics are not taken into account.
     */
    warmupDuration?: pulumi.Input<number>;
}

export interface ComputeInstanceGroupScalePolicyTestAutoScaleCustomRule {
    /**
     * Folder ID of custom metric in Yandex Monitoring that should be used for scaling.
     */
    folderId?: pulumi.Input<string>;
    /**
     * A map of labels of metric.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of metric.
     */
    metricName: pulumi.Input<string>;
    /**
     * Metric type, `GAUGE` or `COUNTER`.
     */
    metricType: pulumi.Input<string>;
    /**
     * Rule type: `UTILIZATION` - This type means that the metric applies to one instance.
     * First, Instance Groups calculates the average metric value for each instance,
     * then averages the values for instances in one availability zone.
     * This type of metric must have the `instanceId` label. `WORKLOAD` - This type means that the metric applies to instances in one availability zone.
     * This type of metric must have the `zoneId` label.
     */
    ruleType: pulumi.Input<string>;
    /**
     * Service of custom metric in Yandex Monitoring that should be used for scaling.
     */
    service?: pulumi.Input<string>;
    /**
     * Target metric value level.
     */
    target: pulumi.Input<number>;
}

export interface ComputeInstanceLocalDisk {
    /**
     * Name that can be used to access an attached disk.
     */
    deviceName?: pulumi.Input<string>;
    /**
     * Size of the disk, specified in bytes.
     *
     * > **NOTE:** Local disks are not available for all users by default.
     */
    sizeBytes: pulumi.Input<number>;
}

export interface ComputeInstanceMetadataOptions {
    awsV1HttpEndpoint?: pulumi.Input<number>;
    awsV1HttpToken?: pulumi.Input<number>;
    gceHttpEndpoint?: pulumi.Input<number>;
    gceHttpToken?: pulumi.Input<number>;
}

export interface ComputeInstanceNetworkInterface {
    /**
     * List of configurations for creating ipv4 DNS records. The structure is documented below.
     */
    dnsRecords?: pulumi.Input<pulumi.Input<inputs.ComputeInstanceNetworkInterfaceDnsRecord>[]>;
    /**
     * Index of network interface, will be calculated automatically for instance create or update operations
     * if not specified. Required for attach/detach operations.
     */
    index?: pulumi.Input<number>;
    /**
     * The private IP address to assign to the instance. If
     * empty, the address will be automatically assigned from the specified subnet.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * Allocate an IPv4 address for the interface. The default value is `true`.
     */
    ipv4?: pulumi.Input<boolean>;
    /**
     * If true, allocate an IPv6 address for the interface.
     * The address will be automatically assigned from the specified subnet.
     */
    ipv6?: pulumi.Input<boolean>;
    /**
     * The private IPv6 address to assign to the instance.
     */
    ipv6Address?: pulumi.Input<string>;
    /**
     * List of configurations for creating ipv6 DNS records. The structure is documented below.
     */
    ipv6DnsRecords?: pulumi.Input<pulumi.Input<inputs.ComputeInstanceNetworkInterfaceIpv6DnsRecord>[]>;
    macAddress?: pulumi.Input<string>;
    /**
     * Provide a public address, for instance, to access the internet over NAT.
     */
    nat?: pulumi.Input<boolean>;
    /**
     * List of configurations for creating ipv4 NAT DNS records. The structure is documented below.
     */
    natDnsRecords?: pulumi.Input<pulumi.Input<inputs.ComputeInstanceNetworkInterfaceNatDnsRecord>[]>;
    /**
     * Provide a public address, for instance, to access the internet over NAT. Address should be already reserved in web UI.
     */
    natIpAddress?: pulumi.Input<string>;
    natIpVersion?: pulumi.Input<string>;
    /**
     * Security group ids for network interface.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * ID of the subnet to attach this
     * interface to. The subnet must exist in the same zone where this instance will be
     * created.
     */
    subnetId: pulumi.Input<string>;
}

export interface ComputeInstanceNetworkInterfaceDnsRecord {
    /**
     * DNS zone ID (if not set, private zone used).
     */
    dnsZoneId?: pulumi.Input<string>;
    /**
     * DNS record FQDN (must have a dot at the end).
     */
    fqdn: pulumi.Input<string>;
    /**
     * When set to true, also create a PTR DNS record.
     */
    ptr?: pulumi.Input<boolean>;
    /**
     * DNS record TTL. in seconds
     */
    ttl?: pulumi.Input<number>;
}

export interface ComputeInstanceNetworkInterfaceIpv6DnsRecord {
    /**
     * DNS zone ID (if not set, private zone used).
     */
    dnsZoneId?: pulumi.Input<string>;
    /**
     * DNS record FQDN (must have a dot at the end).
     */
    fqdn: pulumi.Input<string>;
    /**
     * When set to true, also create a PTR DNS record.
     */
    ptr?: pulumi.Input<boolean>;
    /**
     * DNS record TTL. in seconds
     */
    ttl?: pulumi.Input<number>;
}

export interface ComputeInstanceNetworkInterfaceNatDnsRecord {
    /**
     * DNS zone ID (if not set, private zone used).
     */
    dnsZoneId?: pulumi.Input<string>;
    /**
     * DNS record FQDN (must have a dot at the end).
     */
    fqdn: pulumi.Input<string>;
    /**
     * When set to true, also create a PTR DNS record.
     */
    ptr?: pulumi.Input<boolean>;
    /**
     * DNS record TTL. in seconds
     */
    ttl?: pulumi.Input<number>;
}

export interface ComputeInstancePlacementPolicy {
    hostAffinityRules?: pulumi.Input<pulumi.Input<inputs.ComputeInstancePlacementPolicyHostAffinityRule>[]>;
    /**
     * Specifies the id of the Placement Group to assign to the instance.
     */
    placementGroupId?: pulumi.Input<string>;
    placementGroupPartition?: pulumi.Input<number>;
}

export interface ComputeInstancePlacementPolicyHostAffinityRule {
    /**
     * Affinity label or one of reserved values - `yc.hostId`, `yc.hostGroupId`.
     */
    key: pulumi.Input<string>;
    /**
     * Affinity action. The only value supported is `IN`.
     */
    op: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ComputeInstanceResources {
    /**
     * If provided, specifies baseline performance for a core as a percent.
     */
    coreFraction?: pulumi.Input<number>;
    /**
     * CPU cores for the instance.
     */
    cores: pulumi.Input<number>;
    /**
     * If provided, specifies the number of GPU devices for the instance
     */
    gpus?: pulumi.Input<number>;
    /**
     * Memory size in GB.
     */
    memory: pulumi.Input<number>;
}

export interface ComputeInstanceSchedulingPolicy {
    /**
     * Specifies if the instance is preemptible. Defaults to false.
     */
    preemptible?: pulumi.Input<boolean>;
}

export interface ComputeInstanceSecondaryDisk {
    /**
     * Whether the disk is auto-deleted when the instance
     * is deleted. The default value is false.
     */
    autoDelete?: pulumi.Input<boolean>;
    /**
     * Name that can be used to access an attached disk
     * under `/dev/disk/by-id/`.
     */
    deviceName?: pulumi.Input<string>;
    /**
     * ID of the disk that is attached to the instance.
     */
    diskId: pulumi.Input<string>;
    /**
     * Type of access to the disk resource. By default, a disk is attached in `READ_WRITE` mode.
     */
    mode?: pulumi.Input<string>;
}

export interface ComputeSnapshotScheduleSchedulePolicy {
    /**
     * Cron expression to schedule snapshots (in cron format "* * * * *").
     */
    expression?: pulumi.Input<string>;
    /**
     * Time to start the snapshot schedule (in format RFC3339 "2006-01-02T15:04:05Z07:00"). If empty current time will be used. Unlike an `expression` that specifies regularity rules, the `startAt` parameter determines from what point these rules will be applied.
     */
    startAt?: pulumi.Input<string>;
}

export interface ComputeSnapshotScheduleSnapshotSpec {
    /**
     * Description to assign to snapshots created by this snapshot schedule.
     */
    description?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs to assign to snapshots created by this snapshot schedule.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ContainerRepositoryLifecyclePolicyRule {
    /**
     * Description of the lifecycle policy.
     */
    description?: pulumi.Input<string>;
    /**
     * The period of time that must pass after creating a image for it to suit the automatic deletion criteria. It must be a multiple of 24 hours.
     */
    expirePeriod?: pulumi.Input<string>;
    /**
     * The number of images to be retained even if the expirePeriod already expired.
     */
    retainedTop?: pulumi.Input<number>;
    /**
     * Tag to specify a filter as a regular expression. For example `.*` - all images with tags.
     */
    tagRegexp?: pulumi.Input<string>;
    /**
     * If enabled, rules apply to untagged Docker images.
     */
    untagged?: pulumi.Input<boolean>;
}

export interface DataprocClusterClusterConfig {
    /**
     * Data Proc specific options. The structure is documented below.
     */
    hadoop?: pulumi.Input<inputs.DataprocClusterClusterConfigHadoop>;
    /**
     * Configuration of the Data Proc subcluster. The structure is documented below.
     */
    subclusterSpecs: pulumi.Input<pulumi.Input<inputs.DataprocClusterClusterConfigSubclusterSpec>[]>;
    /**
     * Version of Data Proc image.
     */
    versionId?: pulumi.Input<string>;
}

export interface DataprocClusterClusterConfigHadoop {
    /**
     * List of initialization scripts. The structure is documented below.
     */
    initializationActions?: pulumi.Input<pulumi.Input<inputs.DataprocClusterClusterConfigHadoopInitializationAction>[]>;
    /**
     * A set of key/value pairs that are used to configure cluster services.
     */
    properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of services to run on Data Proc cluster.
     */
    services?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of SSH public keys to put to the hosts of the cluster. For information on how to connect to the cluster, see [the official documentation](https://cloud.yandex.com/docs/data-proc/operations/connect).
     */
    sshPublicKeys?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DataprocClusterClusterConfigHadoopInitializationAction {
    /**
     * List of arguments of the initialization script.
     */
    args?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Script execution timeout, in seconds.
     */
    timeout?: pulumi.Input<string>;
    /**
     * Script URI.
     */
    uri: pulumi.Input<string>;
}

export interface DataprocClusterClusterConfigSubclusterSpec {
    /**
     * If true then assign public IP addresses to the hosts of the subclusters.
     */
    assignPublicIp?: pulumi.Input<boolean>;
    /**
     * Autoscaling configuration for compute subclusters.
     */
    autoscalingConfig?: pulumi.Input<inputs.DataprocClusterClusterConfigSubclusterSpecAutoscalingConfig>;
    /**
     * Number of hosts within Data Proc subcluster.
     */
    hostsCount: pulumi.Input<number>;
    /**
     * (Computed) ID of a new Data Proc cluster.
     */
    id?: pulumi.Input<string>;
    /**
     * Name of the Data Proc subcluster.
     */
    name: pulumi.Input<string>;
    /**
     * Resources allocated to each host of the Data Proc subcluster. The structure is documented below.
     */
    resources: pulumi.Input<inputs.DataprocClusterClusterConfigSubclusterSpecResources>;
    /**
     * Role of the subcluster in the Data Proc cluster.
     */
    role: pulumi.Input<string>;
    /**
     * The ID of the subnet, to which hosts of the subcluster belong. Subnets of all the subclusters must belong to the same VPC network.
     */
    subnetId: pulumi.Input<string>;
}

export interface DataprocClusterClusterConfigSubclusterSpecAutoscalingConfig {
    /**
     * Defines an autoscaling rule based on the average CPU utilization of the instance group. If not set default autoscaling metric will be used.
     */
    cpuUtilizationTarget?: pulumi.Input<string>;
    /**
     * Timeout to gracefully decommission nodes during downscaling. In seconds.
     */
    decommissionTimeout?: pulumi.Input<string>;
    /**
     * Maximum number of nodes in autoscaling subclusters.
     */
    maxHostsCount: pulumi.Input<number>;
    /**
     * Time in seconds allotted for averaging metrics.
     */
    measurementDuration?: pulumi.Input<string>;
    /**
     * Bool flag -- whether to use preemptible compute instances. Preemptible instances are stopped at least once every 24 hours, and can be stopped at any time if their resources are needed by Compute. For more information, see [Preemptible Virtual Machines](https://cloud.yandex.com/docs/compute/concepts/preemptible-vm).
     */
    preemptible?: pulumi.Input<boolean>;
    /**
     * Minimum amount of time in seconds allotted for monitoring before Instance Groups can reduce the number of instances in the group. During this time, the group size doesn't decrease, even if the new metric values indicate that it should.
     */
    stabilizationDuration?: pulumi.Input<string>;
    /**
     * The warmup time of the instance in seconds. During this time, traffic is sent to the instance, but instance metrics are not collected.
     */
    warmupDuration?: pulumi.Input<string>;
}

export interface DataprocClusterClusterConfigSubclusterSpecResources {
    /**
     * Volume of the storage available to a host, in gigabytes.
     */
    diskSize: pulumi.Input<number>;
    /**
     * Type of the storage of a host. One of `network-hdd` (default) or `network-ssd`.
     */
    diskTypeId?: pulumi.Input<string>;
    /**
     * The ID of the preset for computational resources available to a host. All available presets are listed in the [documentation](https://cloud.yandex.com/docs/data-proc/concepts/instance-types).
     */
    resourcePresetId: pulumi.Input<string>;
}

export interface DatatransferEndpointSettings {
    /**
     * Settings specific to the ClickHouse source endpoint.
     */
    clickhouseSource?: pulumi.Input<inputs.DatatransferEndpointSettingsClickhouseSource>;
    /**
     * Settings specific to the ClickHouse target endpoint.
     */
    clickhouseTarget?: pulumi.Input<inputs.DatatransferEndpointSettingsClickhouseTarget>;
    /**
     * Settings specific to the Kafka source endpoint.
     */
    kafkaSource?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaSource>;
    /**
     * Settings specific to the Kafka target endpoint.
     */
    kafkaTarget?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaTarget>;
    metrikaSource?: pulumi.Input<inputs.DatatransferEndpointSettingsMetrikaSource>;
    /**
     * Settings specific to the MongoDB source endpoint.
     */
    mongoSource?: pulumi.Input<inputs.DatatransferEndpointSettingsMongoSource>;
    /**
     * Settings specific to the MongoDB target endpoint.
     */
    mongoTarget?: pulumi.Input<inputs.DatatransferEndpointSettingsMongoTarget>;
    /**
     * Settings specific to the MySQL source endpoint.
     */
    mysqlSource?: pulumi.Input<inputs.DatatransferEndpointSettingsMysqlSource>;
    /**
     * Settings specific to the MySQL target endpoint.
     */
    mysqlTarget?: pulumi.Input<inputs.DatatransferEndpointSettingsMysqlTarget>;
    /**
     * Settings specific to the PostgreSQL source endpoint.
     */
    postgresSource?: pulumi.Input<inputs.DatatransferEndpointSettingsPostgresSource>;
    /**
     * Settings specific to the PostgreSQL target endpoint.
     */
    postgresTarget?: pulumi.Input<inputs.DatatransferEndpointSettingsPostgresTarget>;
    /**
     * Settings specific to the YDB source endpoint.
     */
    ydbSource?: pulumi.Input<inputs.DatatransferEndpointSettingsYdbSource>;
    /**
     * Settings specific to the YDB target endpoint.
     */
    ydbTarget?: pulumi.Input<inputs.DatatransferEndpointSettingsYdbTarget>;
    /**
     * Settings specific to the YDS source endpoint.
     */
    ydsSource?: pulumi.Input<inputs.DatatransferEndpointSettingsYdsSource>;
    /**
     * Settings specific to the YDS target endpoint.
     *
     * For the documentation of the specific endpoint settings see below.
     */
    ydsTarget?: pulumi.Input<inputs.DatatransferEndpointSettingsYdsTarget>;
}

export interface DatatransferEndpointSettingsClickhouseSource {
    /**
     * Name of the ClickHouse cluster. For managed ClickHouse clusters defaults to managed cluster ID.
     */
    clickhouseClusterName?: pulumi.Input<string>;
    /**
     * Connection settings. The structure is documented below.
     */
    connection?: pulumi.Input<inputs.DatatransferEndpointSettingsClickhouseSourceConnection>;
    /**
     * The list of tables that should not be transferred.
     */
    excludeTables?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of tables that should be transferred. Leave empty if all tables should be transferred.
     */
    includeTables?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of security groups that the transfer associated with this endpoint should use.
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.
     */
    subnetId?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsClickhouseSourceConnection {
    /**
     * Connection options. The structure is documented below.
     */
    connectionOptions?: pulumi.Input<inputs.DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptions>;
}

export interface DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptions {
    /**
     * Database name.
     */
    database?: pulumi.Input<string>;
    /**
     * Identifier of the Managed ClickHouse cluster.
     */
    mdbClusterId?: pulumi.Input<string>;
    /**
     * Connection settings of the on-premise ClickHouse server.
     */
    onPremise?: pulumi.Input<inputs.DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremise>;
    /**
     * Password for the database access. This is a block with a single field named `raw` which should contain the password.
     */
    password?: pulumi.Input<inputs.DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsPassword>;
    /**
     * User for database access.
     */
    user?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremise {
    /**
     * TCP port number for the HTTP interface of the ClickHouse server.
     */
    httpPort?: pulumi.Input<number>;
    /**
     * TCP port number for the native interface of the ClickHouse server.
     */
    nativePort?: pulumi.Input<number>;
    /**
     * The list of ClickHouse shards. The structure is documented below.
     */
    shards?: pulumi.Input<pulumi.Input<inputs.DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremiseShard>[]>;
    /**
     * TLS settings for the server connection. Empty implies plaintext connection. The structure is documented below.
     */
    tlsMode?: pulumi.Input<inputs.DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremiseTlsMode>;
}

export interface DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremiseShard {
    /**
     * List of ClickHouse server host names.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Arbitrary shard name. This name may be used in `sharding` block to specify custom sharding rules.
     */
    name?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremiseTlsMode {
    /**
     * Empty block designating that the connection is not secured, i.e. plaintext connection.
     */
    disabled?: pulumi.Input<inputs.DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremiseTlsModeDisabled>;
    /**
     * If this attribute is not an empty block, then TLS is used for the server connection. The structure is documented below.
     */
    enabled?: pulumi.Input<inputs.DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremiseTlsModeEnabled>;
}

export interface DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremiseTlsModeDisabled {
}

export interface DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsOnPremiseTlsModeEnabled {
    /**
     * X.509 certificate of the certificate authority which issued the server's certificate, in PEM format. If empty, the server's certificate must be signed by a well-known CA.
     */
    caCertificate?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsClickhouseSourceConnectionConnectionOptionsPassword {
    raw?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsClickhouseTarget {
    /**
     * Table renaming rules. The structure is documented below.
     */
    altNames?: pulumi.Input<pulumi.Input<inputs.DatatransferEndpointSettingsClickhouseTargetAltName>[]>;
    /**
     * How to clean collections when activating the transfer. One of "CLICKHOUSE_CLEANUP_POLICY_DISABLED" or "CLICKHOUSE_CLEANUP_POLICY_DROP".
     */
    cleanupPolicy?: pulumi.Input<string>;
    /**
     * Name of the ClickHouse cluster. For managed ClickHouse clusters defaults to managed cluster ID.
     */
    clickhouseClusterName?: pulumi.Input<string>;
    /**
     * Connection settings. The structure is documented below.
     */
    connection?: pulumi.Input<inputs.DatatransferEndpointSettingsClickhouseTargetConnection>;
    /**
     * List of security groups that the transfer associated with this endpoint should use.
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Shard selection rules for the data being transferred. The structure is documented below.
     */
    sharding?: pulumi.Input<inputs.DatatransferEndpointSettingsClickhouseTargetSharding>;
    /**
     * Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.
     */
    subnetId?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsClickhouseTargetAltName {
    fromName?: pulumi.Input<string>;
    toName?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsClickhouseTargetConnection {
    /**
     * Connection options. The structure is documented below.
     */
    connectionOptions?: pulumi.Input<inputs.DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptions>;
}

export interface DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptions {
    /**
     * Database name.
     */
    database?: pulumi.Input<string>;
    /**
     * Identifier of the Managed ClickHouse cluster.
     */
    mdbClusterId?: pulumi.Input<string>;
    /**
     * Connection settings of the on-premise ClickHouse server.
     */
    onPremise?: pulumi.Input<inputs.DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremise>;
    /**
     * Password for the database access. This is a block with a single field named `raw` which should contain the password.
     */
    password?: pulumi.Input<inputs.DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsPassword>;
    /**
     * User for database access.
     */
    user?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremise {
    /**
     * TCP port number for the HTTP interface of the ClickHouse server.
     */
    httpPort?: pulumi.Input<number>;
    /**
     * TCP port number for the native interface of the ClickHouse server.
     */
    nativePort?: pulumi.Input<number>;
    /**
     * The list of ClickHouse shards. The structure is documented below.
     */
    shards?: pulumi.Input<pulumi.Input<inputs.DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremiseShard>[]>;
    /**
     * TLS settings for the server connection. Empty implies plaintext connection. The structure is documented below.
     */
    tlsMode?: pulumi.Input<inputs.DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremiseTlsMode>;
}

export interface DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremiseShard {
    /**
     * List of ClickHouse server host names.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Arbitrary shard name. This name may be used in `sharding` block to specify custom sharding rules.
     */
    name?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremiseTlsMode {
    /**
     * Empty block designating that the connection is not secured, i.e. plaintext connection.
     */
    disabled?: pulumi.Input<inputs.DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremiseTlsModeDisabled>;
    /**
     * If this attribute is not an empty block, then TLS is used for the server connection. The structure is documented below.
     */
    enabled?: pulumi.Input<inputs.DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremiseTlsModeEnabled>;
}

export interface DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremiseTlsModeDisabled {
}

export interface DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsOnPremiseTlsModeEnabled {
    /**
     * X.509 certificate of the certificate authority which issued the server's certificate, in PEM format. If empty, the server's certificate must be signed by a well-known CA.
     */
    caCertificate?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsClickhouseTargetConnectionConnectionOptionsPassword {
    raw?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsClickhouseTargetSharding {
    /**
     * Shard data by the hash value of the specified column. The structure is documented below.
     */
    columnValueHash?: pulumi.Input<inputs.DatatransferEndpointSettingsClickhouseTargetShardingColumnValueHash>;
    /**
     * A custom shard mapping by the value of the specified column. The structure is documented below.
     */
    customMapping?: pulumi.Input<inputs.DatatransferEndpointSettingsClickhouseTargetShardingCustomMapping>;
    /**
     * Distribute incoming rows between ClickHouse shards in a round-robin manner. Specify as an empty block to enable.
     */
    roundRobin?: pulumi.Input<inputs.DatatransferEndpointSettingsClickhouseTargetShardingRoundRobin>;
    /**
     * Shard data by ID of the transfer.
     */
    transferId?: pulumi.Input<inputs.DatatransferEndpointSettingsClickhouseTargetShardingTransferId>;
}

export interface DatatransferEndpointSettingsClickhouseTargetShardingColumnValueHash {
    /**
     * The name of the column to calculate hash from.
     */
    columnName?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsClickhouseTargetShardingCustomMapping {
    /**
     * The name of the column to inspect when deciding the shard to chose for an incoming row.
     */
    columnName?: pulumi.Input<string>;
    /**
     * The mapping of the specified column values to the shard names. The structure is documented below.
     */
    mappings?: pulumi.Input<pulumi.Input<inputs.DatatransferEndpointSettingsClickhouseTargetShardingCustomMappingMapping>[]>;
}

export interface DatatransferEndpointSettingsClickhouseTargetShardingCustomMappingMapping {
    /**
     * The value of the column. Currently only the string columns are supported. The structure is documented below.
     */
    columnValue?: pulumi.Input<inputs.DatatransferEndpointSettingsClickhouseTargetShardingCustomMappingMappingColumnValue>;
    /**
     * The name of the shard into which all the rows with the specified `columnValue` will be written.
     */
    shardName?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsClickhouseTargetShardingCustomMappingMappingColumnValue {
    /**
     * The string value of the column.
     */
    stringValue?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsClickhouseTargetShardingRoundRobin {
}

export interface DatatransferEndpointSettingsClickhouseTargetShardingTransferId {
}

export interface DatatransferEndpointSettingsKafkaSource {
    /**
     * Authentication data.
     */
    auth?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaSourceAuth>;
    /**
     * Connection settings.
     */
    connection?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaSourceConnection>;
    /**
     * Data parsing parameters. If not set, the source messages are read in raw.
     */
    parser?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaSourceParser>;
    /**
     * List of security groups that the transfer associated with this endpoint should use.
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Deprecated. Please use `topicNames` instead.
     */
    topicName?: pulumi.Input<string>;
    /**
     * The list of full source topic names.
     */
    topicNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Transform data with a custom Cloud Function.
     */
    transformer?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaSourceTransformer>;
}

export interface DatatransferEndpointSettingsKafkaSourceAuth {
    /**
     * Connection without authentication data.
     */
    noAuth?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaSourceAuthNoAuth>;
    /**
     * Authentication using sasl.
     */
    sasl?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaSourceAuthSasl>;
}

export interface DatatransferEndpointSettingsKafkaSourceAuthNoAuth {
}

export interface DatatransferEndpointSettingsKafkaSourceAuthSasl {
    mechanism?: pulumi.Input<string>;
    /**
     * Password for the database access. This is a block with a single field named `raw` which should contain the password.
     */
    password?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaSourceAuthSaslPassword>;
    /**
     * User for database access.
     */
    user?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsKafkaSourceAuthSaslPassword {
    raw?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsKafkaSourceConnection {
    /**
     * Identifier of the Managed Kafka cluster.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Connection settings of the on-premise Kafka server.
     */
    onPremise?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaSourceConnectionOnPremise>;
}

export interface DatatransferEndpointSettingsKafkaSourceConnectionOnPremise {
    /**
     * List of Kafka broker URLs.
     */
    brokerUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * TLS settings for the server connection. Empty implies plaintext connection. The structure is documented below.
     */
    tlsMode?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaSourceConnectionOnPremiseTlsMode>;
}

export interface DatatransferEndpointSettingsKafkaSourceConnectionOnPremiseTlsMode {
    /**
     * Empty block designating that the connection is not secured, i.e. plaintext connection.
     */
    disabled?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaSourceConnectionOnPremiseTlsModeDisabled>;
    /**
     * If this attribute is not an empty block, then TLS is used for the server connection. The structure is documented below.
     */
    enabled?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaSourceConnectionOnPremiseTlsModeEnabled>;
}

export interface DatatransferEndpointSettingsKafkaSourceConnectionOnPremiseTlsModeDisabled {
}

export interface DatatransferEndpointSettingsKafkaSourceConnectionOnPremiseTlsModeEnabled {
    /**
     * X.509 certificate of the certificate authority which issued the server's certificate, in PEM format. If empty, the server's certificate must be signed by a well-known CA.
     */
    caCertificate?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsKafkaSourceParser {
    /**
     * Parse Audit Trails data. Empty struct.
     */
    auditTrailsV1Parser?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaSourceParserAuditTrailsV1Parser>;
    /**
     * Parse Cloud Logging data. Empty struct.
     */
    cloudLoggingParser?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaSourceParserCloudLoggingParser>;
    /**
     * Parse data in json format.
     */
    jsonParser?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaSourceParserJsonParser>;
    /**
     * Parse data if tskv format.
     */
    tskvParser?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaSourceParserTskvParser>;
}

export interface DatatransferEndpointSettingsKafkaSourceParserAuditTrailsV1Parser {
}

export interface DatatransferEndpointSettingsKafkaSourceParserCloudLoggingParser {
}

export interface DatatransferEndpointSettingsKafkaSourceParserJsonParser {
    /**
     * Add fields, that are not in the schema, into the _rest column.
     */
    addRestColumn?: pulumi.Input<boolean>;
    /**
     * Data parsing scheme.The structure is documented below.
     */
    dataSchema?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaSourceParserJsonParserDataSchema>;
    /**
     * Allow null keys. If `false` - null keys will be putted to unparsed data
     */
    nullKeysAllowed?: pulumi.Input<boolean>;
    /**
     * Allow unescape string values.
     */
    unescapeStringValues?: pulumi.Input<boolean>;
}

export interface DatatransferEndpointSettingsKafkaSourceParserJsonParserDataSchema {
    /**
     * Description of the data schema in the array of `fields` structure (documented below).
     */
    fields?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaSourceParserJsonParserDataSchemaFields>;
    /**
     * Description of the data schema as JSON specification.
     */
    jsonFields?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsKafkaSourceParserJsonParserDataSchemaFields {
    /**
     * Description of the data schema in the array of `fields` structure (documented below).
     */
    fields?: pulumi.Input<pulumi.Input<inputs.DatatransferEndpointSettingsKafkaSourceParserJsonParserDataSchemaFieldsField>[]>;
}

export interface DatatransferEndpointSettingsKafkaSourceParserJsonParserDataSchemaFieldsField {
    /**
     * Mark field as Primary Key.
     */
    key?: pulumi.Input<boolean>;
    /**
     * Field name.
     */
    name?: pulumi.Input<string>;
    /**
     * Path to the field.
     */
    path?: pulumi.Input<string>;
    /**
     * Mark field as required.
     */
    required?: pulumi.Input<boolean>;
    /**
     * Field type, one of: `INT64`, `INT32`, `INT16`, `INT8`, `UINT64`, `UINT32`, `UINT16`, `UINT8`, `DOUBLE`, `BOOLEAN`, `STRING`, `UTF8`, `ANY`, `DATETIME`.
     */
    type?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsKafkaSourceParserTskvParser {
    /**
     * Add fields, that are not in the schema, into the _rest column.
     */
    addRestColumn?: pulumi.Input<boolean>;
    /**
     * Data parsing scheme.The structure is documented below.
     */
    dataSchema?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaSourceParserTskvParserDataSchema>;
    /**
     * Allow null keys. If `false` - null keys will be putted to unparsed data
     */
    nullKeysAllowed?: pulumi.Input<boolean>;
    /**
     * Allow unescape string values.
     */
    unescapeStringValues?: pulumi.Input<boolean>;
}

export interface DatatransferEndpointSettingsKafkaSourceParserTskvParserDataSchema {
    /**
     * Description of the data schema in the array of `fields` structure (documented below).
     */
    fields?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaSourceParserTskvParserDataSchemaFields>;
    /**
     * Description of the data schema as JSON specification.
     */
    jsonFields?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsKafkaSourceParserTskvParserDataSchemaFields {
    /**
     * Description of the data schema in the array of `fields` structure (documented below).
     */
    fields?: pulumi.Input<pulumi.Input<inputs.DatatransferEndpointSettingsKafkaSourceParserTskvParserDataSchemaFieldsField>[]>;
}

export interface DatatransferEndpointSettingsKafkaSourceParserTskvParserDataSchemaFieldsField {
    /**
     * Mark field as Primary Key.
     */
    key?: pulumi.Input<boolean>;
    /**
     * Field name.
     */
    name?: pulumi.Input<string>;
    /**
     * Path to the field.
     */
    path?: pulumi.Input<string>;
    /**
     * Mark field as required.
     */
    required?: pulumi.Input<boolean>;
    /**
     * Field type, one of: `INT64`, `INT32`, `INT16`, `INT8`, `UINT64`, `UINT32`, `UINT16`, `UINT8`, `DOUBLE`, `BOOLEAN`, `STRING`, `UTF8`, `ANY`, `DATETIME`.
     */
    type?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsKafkaSourceTransformer {
    bufferFlushInterval?: pulumi.Input<string>;
    bufferSize?: pulumi.Input<string>;
    cloudFunction?: pulumi.Input<string>;
    invocationTimeout?: pulumi.Input<string>;
    numberOfRetries?: pulumi.Input<number>;
    /**
     * - (Required) Service account ID for interaction with database.
     */
    serviceAccountId?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsKafkaTarget {
    /**
     * Authentication data.
     */
    auth?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaTargetAuth>;
    /**
     * Connection settings.
     */
    connection?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaTargetConnection>;
    /**
     * List of security groups that the transfer associated with this endpoint should use.
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Data serialization settings.
     */
    serializer?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaTargetSerializer>;
    /**
     * Target topic settings.
     */
    topicSettings?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaTargetTopicSettings>;
}

export interface DatatransferEndpointSettingsKafkaTargetAuth {
    /**
     * Connection without authentication data.
     */
    noAuth?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaTargetAuthNoAuth>;
    /**
     * Authentication using sasl.
     */
    sasl?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaTargetAuthSasl>;
}

export interface DatatransferEndpointSettingsKafkaTargetAuthNoAuth {
}

export interface DatatransferEndpointSettingsKafkaTargetAuthSasl {
    mechanism?: pulumi.Input<string>;
    /**
     * Password for the database access. This is a block with a single field named `raw` which should contain the password.
     */
    password?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaTargetAuthSaslPassword>;
    /**
     * User for database access.
     */
    user?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsKafkaTargetAuthSaslPassword {
    raw?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsKafkaTargetConnection {
    /**
     * Identifier of the Managed Kafka cluster.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Connection settings of the on-premise Kafka server.
     */
    onPremise?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaTargetConnectionOnPremise>;
}

export interface DatatransferEndpointSettingsKafkaTargetConnectionOnPremise {
    /**
     * List of Kafka broker URLs.
     */
    brokerUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * TLS settings for the server connection. Empty implies plaintext connection. The structure is documented below.
     */
    tlsMode?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaTargetConnectionOnPremiseTlsMode>;
}

export interface DatatransferEndpointSettingsKafkaTargetConnectionOnPremiseTlsMode {
    /**
     * Empty block designating that the connection is not secured, i.e. plaintext connection.
     */
    disabled?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaTargetConnectionOnPremiseTlsModeDisabled>;
    /**
     * If this attribute is not an empty block, then TLS is used for the server connection. The structure is documented below.
     */
    enabled?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaTargetConnectionOnPremiseTlsModeEnabled>;
}

export interface DatatransferEndpointSettingsKafkaTargetConnectionOnPremiseTlsModeDisabled {
}

export interface DatatransferEndpointSettingsKafkaTargetConnectionOnPremiseTlsModeEnabled {
    /**
     * X.509 certificate of the certificate authority which issued the server's certificate, in PEM format. If empty, the server's certificate must be signed by a well-known CA.
     */
    caCertificate?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsKafkaTargetSerializer {
    /**
     * Empty block. Select data serialization format automatically.
     */
    serializerAuto?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaTargetSerializerSerializerAuto>;
    /**
     * Serialize data in json format. The structure is documented below.
     */
    serializerDebezium?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaTargetSerializerSerializerDebezium>;
    /**
     * Empty block. Serialize data in json format.
     */
    serializerJson?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaTargetSerializerSerializerJson>;
}

export interface DatatransferEndpointSettingsKafkaTargetSerializerSerializerAuto {
}

export interface DatatransferEndpointSettingsKafkaTargetSerializerSerializerDebezium {
    /**
     * A list of debezium parameters set by the structure of the `key` and `value` string fields.
     */
    serializerParameters?: pulumi.Input<pulumi.Input<inputs.DatatransferEndpointSettingsKafkaTargetSerializerSerializerDebeziumSerializerParameter>[]>;
}

export interface DatatransferEndpointSettingsKafkaTargetSerializerSerializerDebeziumSerializerParameter {
    /**
     * Mark field as Primary Key.
     */
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsKafkaTargetSerializerSerializerJson {
}

export interface DatatransferEndpointSettingsKafkaTargetTopicSettings {
    /**
     * All messages will be sent to one topic. The structure is documented below.
     */
    topic?: pulumi.Input<inputs.DatatransferEndpointSettingsKafkaTargetTopicSettingsTopic>;
    /**
     * Topic name prefix. Messages will be sent to topic with name <topic_prefix>.<schema>.<table_name>.
     */
    topicPrefix?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsKafkaTargetTopicSettingsTopic {
    /**
     * Not to split events queue into separate per-table queues.
     */
    saveTxOrder?: pulumi.Input<boolean>;
    /**
     * Full topic name
     */
    topicName?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsMetrikaSource {
    counterIds?: pulumi.Input<pulumi.Input<number>[]>;
    streams?: pulumi.Input<pulumi.Input<inputs.DatatransferEndpointSettingsMetrikaSourceStream>[]>;
    token?: pulumi.Input<inputs.DatatransferEndpointSettingsMetrikaSourceToken>;
}

export interface DatatransferEndpointSettingsMetrikaSourceStream {
    columns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Field type, one of: `INT64`, `INT32`, `INT16`, `INT8`, `UINT64`, `UINT32`, `UINT16`, `UINT8`, `DOUBLE`, `BOOLEAN`, `STRING`, `UTF8`, `ANY`, `DATETIME`.
     */
    type?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsMetrikaSourceToken {
    raw?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsMongoSource {
    /**
     * The list of the MongoDB collections that should be transferred. If omitted, all available collections will be transferred. The structure of the list item is documented below.
     */
    collections?: pulumi.Input<pulumi.Input<inputs.DatatransferEndpointSettingsMongoSourceCollection>[]>;
    /**
     * Connection settings. The structure is documented below.
     */
    connection?: pulumi.Input<inputs.DatatransferEndpointSettingsMongoSourceConnection>;
    /**
     * The list of the MongoDB collections that should not be transferred.
     */
    excludedCollections?: pulumi.Input<pulumi.Input<inputs.DatatransferEndpointSettingsMongoSourceExcludedCollection>[]>;
    /**
     * whether the secondary server should be preferred to the primary when copying data.
     */
    secondaryPreferredMode?: pulumi.Input<boolean>;
    /**
     * List of security groups that the transfer associated with this endpoint should use.
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.
     */
    subnetId?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsMongoSourceCollection {
    /**
     * Collection name.
     */
    collectionName?: pulumi.Input<string>;
    /**
     * Database name.
     */
    databaseName?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsMongoSourceConnection {
    /**
     * Connection options. The structure is documented below.
     */
    connectionOptions?: pulumi.Input<inputs.DatatransferEndpointSettingsMongoSourceConnectionConnectionOptions>;
}

export interface DatatransferEndpointSettingsMongoSourceConnectionConnectionOptions {
    /**
     * Name of the database associated with the credentials.
     */
    authSource?: pulumi.Input<string>;
    /**
     * Identifier of the Managed ClickHouse cluster.
     */
    mdbClusterId?: pulumi.Input<string>;
    /**
     * Connection settings of the on-premise ClickHouse server.
     */
    onPremise?: pulumi.Input<inputs.DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsOnPremise>;
    /**
     * Password for the database access. This is a block with a single field named `raw` which should contain the password.
     */
    password?: pulumi.Input<inputs.DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsPassword>;
    /**
     * User for database access.
     */
    user?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsOnPremise {
    /**
     * Host names of the replica set.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * TCP Port number.
     */
    port?: pulumi.Input<number>;
    /**
     * Replica set name.
     */
    replicaSet?: pulumi.Input<string>;
    /**
     * TLS settings for the server connection. Empty implies plaintext connection. The structure is documented below.
     */
    tlsMode?: pulumi.Input<inputs.DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsOnPremiseTlsMode>;
}

export interface DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsOnPremiseTlsMode {
    /**
     * Empty block designating that the connection is not secured, i.e. plaintext connection.
     */
    disabled?: pulumi.Input<inputs.DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsOnPremiseTlsModeDisabled>;
    /**
     * If this attribute is not an empty block, then TLS is used for the server connection. The structure is documented below.
     */
    enabled?: pulumi.Input<inputs.DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsOnPremiseTlsModeEnabled>;
}

export interface DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsOnPremiseTlsModeDisabled {
}

export interface DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsOnPremiseTlsModeEnabled {
    /**
     * X.509 certificate of the certificate authority which issued the server's certificate, in PEM format. If empty, the server's certificate must be signed by a well-known CA.
     */
    caCertificate?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsMongoSourceConnectionConnectionOptionsPassword {
    raw?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsMongoSourceExcludedCollection {
    /**
     * Collection name.
     */
    collectionName?: pulumi.Input<string>;
    /**
     * Database name.
     */
    databaseName?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsMongoTarget {
    /**
     * How to clean collections when activating the transfer. One of "DISABLED", "DROP" or "TRUNCATE".
     */
    cleanupPolicy?: pulumi.Input<string>;
    /**
     * Connection settings. The structure is documented below.
     */
    connection?: pulumi.Input<inputs.DatatransferEndpointSettingsMongoTargetConnection>;
    /**
     * If not empty, then all the data will be written to the database with the specified name; otherwise the database name is the same as in the source endpoint.
     */
    database?: pulumi.Input<string>;
    /**
     * List of security groups that the transfer associated with this endpoint should use.
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.
     */
    subnetId?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsMongoTargetConnection {
    /**
     * Connection options. The structure is documented below.
     */
    connectionOptions?: pulumi.Input<inputs.DatatransferEndpointSettingsMongoTargetConnectionConnectionOptions>;
}

export interface DatatransferEndpointSettingsMongoTargetConnectionConnectionOptions {
    /**
     * Name of the database associated with the credentials.
     */
    authSource?: pulumi.Input<string>;
    /**
     * Identifier of the Managed ClickHouse cluster.
     */
    mdbClusterId?: pulumi.Input<string>;
    /**
     * Connection settings of the on-premise ClickHouse server.
     */
    onPremise?: pulumi.Input<inputs.DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsOnPremise>;
    /**
     * Password for the database access. This is a block with a single field named `raw` which should contain the password.
     */
    password?: pulumi.Input<inputs.DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsPassword>;
    /**
     * User for database access.
     */
    user?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsOnPremise {
    /**
     * Host names of the replica set.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * TCP Port number.
     */
    port?: pulumi.Input<number>;
    /**
     * Replica set name.
     */
    replicaSet?: pulumi.Input<string>;
    /**
     * TLS settings for the server connection. Empty implies plaintext connection. The structure is documented below.
     */
    tlsMode?: pulumi.Input<inputs.DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsOnPremiseTlsMode>;
}

export interface DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsOnPremiseTlsMode {
    /**
     * Empty block designating that the connection is not secured, i.e. plaintext connection.
     */
    disabled?: pulumi.Input<inputs.DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsOnPremiseTlsModeDisabled>;
    /**
     * If this attribute is not an empty block, then TLS is used for the server connection. The structure is documented below.
     */
    enabled?: pulumi.Input<inputs.DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsOnPremiseTlsModeEnabled>;
}

export interface DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsOnPremiseTlsModeDisabled {
}

export interface DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsOnPremiseTlsModeEnabled {
    /**
     * X.509 certificate of the certificate authority which issued the server's certificate, in PEM format. If empty, the server's certificate must be signed by a well-known CA.
     */
    caCertificate?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsMongoTargetConnectionConnectionOptionsPassword {
    raw?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsMysqlSource {
    /**
     * Connection settings. The structure is documented below.
     */
    connection?: pulumi.Input<inputs.DatatransferEndpointSettingsMysqlSourceConnection>;
    /**
     * Name of the database to transfer.
     */
    database?: pulumi.Input<string>;
    /**
     * Opposite of `includeTableRegex`. The tables matching the specified regular expressions will not be transferred.
     */
    excludeTablesRegexes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of regular expressions of table names which should be transferred. A table name is formatted as schemaname.tablename. For example, a single regular expression may look like `^mydb.employees$`.
     */
    includeTablesRegexes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Defines which database schema objects should be transferred, e.g. views, routines, etc.
     */
    objectTransferSettings?: pulumi.Input<inputs.DatatransferEndpointSettingsMysqlSourceObjectTransferSettings>;
    /**
     * Password for the database access. This is a block with a single field named `raw` which should contain the password.
     */
    password?: pulumi.Input<inputs.DatatransferEndpointSettingsMysqlSourcePassword>;
    /**
     * List of security groups that the transfer associated with this endpoint should use.
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the database where technical tables (`__tm_keeper`, `__tm_gtid_keeper`) will be created. Default is the value of the attribute `database`.
     */
    serviceDatabase?: pulumi.Input<string>;
    /**
     * Timezone to use for parsing timestamps for saving source timezones. Accepts values from IANA timezone database. Default: local timezone.
     */
    timezone?: pulumi.Input<string>;
    /**
     * User for the database access.
     */
    user?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsMysqlSourceConnection {
    /**
     * Identifier of the Managed MySQL cluster.
     */
    mdbClusterId?: pulumi.Input<string>;
    /**
     * Connection settings of the on-premise Kafka server.
     */
    onPremise?: pulumi.Input<inputs.DatatransferEndpointSettingsMysqlSourceConnectionOnPremise>;
}

export interface DatatransferEndpointSettingsMysqlSourceConnectionOnPremise {
    /**
     * Host names of the replica set.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * TCP Port number.
     */
    port?: pulumi.Input<number>;
    /**
     * Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * TLS settings for the server connection. Empty implies plaintext connection. The structure is documented below.
     */
    tlsMode?: pulumi.Input<inputs.DatatransferEndpointSettingsMysqlSourceConnectionOnPremiseTlsMode>;
}

export interface DatatransferEndpointSettingsMysqlSourceConnectionOnPremiseTlsMode {
    /**
     * Empty block designating that the connection is not secured, i.e. plaintext connection.
     */
    disabled?: pulumi.Input<inputs.DatatransferEndpointSettingsMysqlSourceConnectionOnPremiseTlsModeDisabled>;
    /**
     * If this attribute is not an empty block, then TLS is used for the server connection. The structure is documented below.
     */
    enabled?: pulumi.Input<inputs.DatatransferEndpointSettingsMysqlSourceConnectionOnPremiseTlsModeEnabled>;
}

export interface DatatransferEndpointSettingsMysqlSourceConnectionOnPremiseTlsModeDisabled {
}

export interface DatatransferEndpointSettingsMysqlSourceConnectionOnPremiseTlsModeEnabled {
    /**
     * X.509 certificate of the certificate authority which issued the server's certificate, in PEM format. If empty, the server's certificate must be signed by a well-known CA.
     */
    caCertificate?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsMysqlSourceObjectTransferSettings {
    routine?: pulumi.Input<string>;
    tables?: pulumi.Input<string>;
    /**
     * All of the attrubutes are optional and should be either "BEFORE_DATA", "AFTER_DATA" or "NEVER".
     */
    trigger?: pulumi.Input<string>;
    view?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsMysqlSourcePassword {
    raw?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsMysqlTarget {
    /**
     * How to clean tables when activating the transfer. One of "DISABLED", "DROP" or "TRUNCATE".
     */
    cleanupPolicy?: pulumi.Input<string>;
    /**
     * Connection settings. The structure is documented below.
     */
    connection?: pulumi.Input<inputs.DatatransferEndpointSettingsMysqlTargetConnection>;
    /**
     * Name of the database to transfer.
     */
    database?: pulumi.Input<string>;
    /**
     * Password for the database access. This is a block with a single field named `raw` which should contain the password.
     */
    password?: pulumi.Input<inputs.DatatransferEndpointSettingsMysqlTargetPassword>;
    /**
     * List of security groups that the transfer associated with this endpoint should use.
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the database where technical tables (`__tm_keeper`, `__tm_gtid_keeper`) will be created. Default is the value of the attribute `database`.
     */
    serviceDatabase?: pulumi.Input<string>;
    /**
     * When true, disables foreign key checks. See [foreignKeyChecks](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_foreign_key_checks). False by default.
     */
    skipConstraintChecks?: pulumi.Input<boolean>;
    /**
     * [sqlMode](https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html) to use when interacting with the server. Defaults to "NO_AUTO_VALUE_ON_ZERO,NO_DIR_IN_CREATE,NO_ENGINE_SUBSTITUTION".
     */
    sqlMode?: pulumi.Input<string>;
    /**
     * Timezone to use for parsing timestamps for saving source timezones. Accepts values from IANA timezone database. Default: local timezone.
     */
    timezone?: pulumi.Input<string>;
    /**
     * User for the database access.
     */
    user?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsMysqlTargetConnection {
    /**
     * Identifier of the Managed MySQL cluster.
     */
    mdbClusterId?: pulumi.Input<string>;
    /**
     * Connection settings of the on-premise Kafka server.
     */
    onPremise?: pulumi.Input<inputs.DatatransferEndpointSettingsMysqlTargetConnectionOnPremise>;
}

export interface DatatransferEndpointSettingsMysqlTargetConnectionOnPremise {
    /**
     * Host names of the replica set.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * TCP Port number.
     */
    port?: pulumi.Input<number>;
    /**
     * Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * TLS settings for the server connection. Empty implies plaintext connection. The structure is documented below.
     */
    tlsMode?: pulumi.Input<inputs.DatatransferEndpointSettingsMysqlTargetConnectionOnPremiseTlsMode>;
}

export interface DatatransferEndpointSettingsMysqlTargetConnectionOnPremiseTlsMode {
    /**
     * Empty block designating that the connection is not secured, i.e. plaintext connection.
     */
    disabled?: pulumi.Input<inputs.DatatransferEndpointSettingsMysqlTargetConnectionOnPremiseTlsModeDisabled>;
    /**
     * If this attribute is not an empty block, then TLS is used for the server connection. The structure is documented below.
     */
    enabled?: pulumi.Input<inputs.DatatransferEndpointSettingsMysqlTargetConnectionOnPremiseTlsModeEnabled>;
}

export interface DatatransferEndpointSettingsMysqlTargetConnectionOnPremiseTlsModeDisabled {
}

export interface DatatransferEndpointSettingsMysqlTargetConnectionOnPremiseTlsModeEnabled {
    /**
     * X.509 certificate of the certificate authority which issued the server's certificate, in PEM format. If empty, the server's certificate must be signed by a well-known CA.
     */
    caCertificate?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsMysqlTargetPassword {
    raw?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsPostgresSource {
    /**
     * Connection settings. The structure is documented below.
     */
    connection?: pulumi.Input<inputs.DatatransferEndpointSettingsPostgresSourceConnection>;
    /**
     * Name of the database to transfer.
     */
    database?: pulumi.Input<string>;
    /**
     * List of tables which will not be transfered, formatted as `schemaname.tablename`.
     */
    excludeTables?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of tables to transfer, formatted as `schemaname.tablename`. If omitted or an empty list is specified, all tables will be transferred.
     */
    includeTables?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Defines which database schema objects should be transferred, e.g. views, functions, etc.
     */
    objectTransferSettings?: pulumi.Input<inputs.DatatransferEndpointSettingsPostgresSourceObjectTransferSettings>;
    /**
     * Password for the database access. This is a block with a single field named `raw` which should contain the password.
     */
    password?: pulumi.Input<inputs.DatatransferEndpointSettingsPostgresSourcePassword>;
    /**
     * List of security groups that the transfer associated with this endpoint should use.
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the database schema in which auxiliary tables needed for the transfer will be created. Empty `serviceSchema` implies schema "public".
     */
    serviceSchema?: pulumi.Input<string>;
    /**
     * Maximum WAL size held by the replication slot, in gigabytes. Exceeding this limit will result in a replication failure and deletion of the replication slot. Unlimited by default.
     */
    slotGigabyteLagLimit?: pulumi.Input<number>;
    /**
     * User for the database access.
     */
    user?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsPostgresSourceConnection {
    /**
     * Identifier of the Managed MySQL cluster.
     */
    mdbClusterId?: pulumi.Input<string>;
    /**
     * Connection settings of the on-premise Kafka server.
     */
    onPremise?: pulumi.Input<inputs.DatatransferEndpointSettingsPostgresSourceConnectionOnPremise>;
}

export interface DatatransferEndpointSettingsPostgresSourceConnectionOnPremise {
    /**
     * Host names of the replica set.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * TCP Port number.
     */
    port?: pulumi.Input<number>;
    /**
     * Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * TLS settings for the server connection. Empty implies plaintext connection. The structure is documented below.
     */
    tlsMode?: pulumi.Input<inputs.DatatransferEndpointSettingsPostgresSourceConnectionOnPremiseTlsMode>;
}

export interface DatatransferEndpointSettingsPostgresSourceConnectionOnPremiseTlsMode {
    /**
     * Empty block designating that the connection is not secured, i.e. plaintext connection.
     */
    disabled?: pulumi.Input<inputs.DatatransferEndpointSettingsPostgresSourceConnectionOnPremiseTlsModeDisabled>;
    /**
     * If this attribute is not an empty block, then TLS is used for the server connection. The structure is documented below.
     */
    enabled?: pulumi.Input<inputs.DatatransferEndpointSettingsPostgresSourceConnectionOnPremiseTlsModeEnabled>;
}

export interface DatatransferEndpointSettingsPostgresSourceConnectionOnPremiseTlsModeDisabled {
}

export interface DatatransferEndpointSettingsPostgresSourceConnectionOnPremiseTlsModeEnabled {
    /**
     * X.509 certificate of the certificate authority which issued the server's certificate, in PEM format. If empty, the server's certificate must be signed by a well-known CA.
     */
    caCertificate?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsPostgresSourceObjectTransferSettings {
    /**
     * All of the attrubutes are optional and should be either "BEFORE_DATA", "AFTER_DATA" or "NEVER".
     */
    cast?: pulumi.Input<string>;
    collation?: pulumi.Input<string>;
    constraint?: pulumi.Input<string>;
    defaultValues?: pulumi.Input<string>;
    fkConstraint?: pulumi.Input<string>;
    function?: pulumi.Input<string>;
    index?: pulumi.Input<string>;
    materializedView?: pulumi.Input<string>;
    policy?: pulumi.Input<string>;
    primaryKey?: pulumi.Input<string>;
    rule?: pulumi.Input<string>;
    sequence?: pulumi.Input<string>;
    sequenceOwnedBy?: pulumi.Input<string>;
    sequenceSet?: pulumi.Input<string>;
    table?: pulumi.Input<string>;
    /**
     * All of the attrubutes are optional and should be either "BEFORE_DATA", "AFTER_DATA" or "NEVER".
     */
    trigger?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    view?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsPostgresSourcePassword {
    raw?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsPostgresTarget {
    /**
     * How to clean collections when activating the transfer. One of "CLICKHOUSE_CLEANUP_POLICY_DISABLED" or "CLICKHOUSE_CLEANUP_POLICY_DROP".
     */
    cleanupPolicy?: pulumi.Input<string>;
    /**
     * Connection settings. The structure is documented below.
     */
    connection?: pulumi.Input<inputs.DatatransferEndpointSettingsPostgresTargetConnection>;
    /**
     * Name of the database to transfer.
     */
    database?: pulumi.Input<string>;
    /**
     * Password for the database access. This is a block with a single field named `raw` which should contain the password.
     */
    password?: pulumi.Input<inputs.DatatransferEndpointSettingsPostgresTargetPassword>;
    /**
     * List of security groups that the transfer associated with this endpoint should use.
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * User for the database access.
     */
    user?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsPostgresTargetConnection {
    /**
     * Identifier of the Managed MySQL cluster.
     */
    mdbClusterId?: pulumi.Input<string>;
    /**
     * Connection settings of the on-premise Kafka server.
     */
    onPremise?: pulumi.Input<inputs.DatatransferEndpointSettingsPostgresTargetConnectionOnPremise>;
}

export interface DatatransferEndpointSettingsPostgresTargetConnectionOnPremise {
    /**
     * Host names of the replica set.
     */
    hosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * TCP Port number.
     */
    port?: pulumi.Input<number>;
    /**
     * Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * TLS settings for the server connection. Empty implies plaintext connection. The structure is documented below.
     */
    tlsMode?: pulumi.Input<inputs.DatatransferEndpointSettingsPostgresTargetConnectionOnPremiseTlsMode>;
}

export interface DatatransferEndpointSettingsPostgresTargetConnectionOnPremiseTlsMode {
    /**
     * Empty block designating that the connection is not secured, i.e. plaintext connection.
     */
    disabled?: pulumi.Input<inputs.DatatransferEndpointSettingsPostgresTargetConnectionOnPremiseTlsModeDisabled>;
    /**
     * If this attribute is not an empty block, then TLS is used for the server connection. The structure is documented below.
     */
    enabled?: pulumi.Input<inputs.DatatransferEndpointSettingsPostgresTargetConnectionOnPremiseTlsModeEnabled>;
}

export interface DatatransferEndpointSettingsPostgresTargetConnectionOnPremiseTlsModeDisabled {
}

export interface DatatransferEndpointSettingsPostgresTargetConnectionOnPremiseTlsModeEnabled {
    /**
     * X.509 certificate of the certificate authority which issued the server's certificate, in PEM format. If empty, the server's certificate must be signed by a well-known CA.
     */
    caCertificate?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsPostgresTargetPassword {
    raw?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsYdbSource {
    /**
     * - (Optional) Custom name for changefeed.
     */
    changefeedCustomName?: pulumi.Input<string>;
    /**
     * Database name.
     */
    database?: pulumi.Input<string>;
    /**
     * - (Optional) Instance of YDB. Example: "my-cute-ydb.cloud.yandex.ru:2135".
     */
    instance?: pulumi.Input<string>;
    /**
     * - (Optional) A list of paths which should be uploaded. When not specified, all available tables are uploaded.
     */
    paths?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - (Optional, Sensitive) Authentication key.
     */
    saKeyContent?: pulumi.Input<string>;
    /**
     * List of security groups that the transfer associated with this endpoint should use.
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - (Required) Service account ID for interaction with database.
     */
    serviceAccountId?: pulumi.Input<string>;
    /**
     * Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.
     */
    subnetId?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsYdbTarget {
    /**
     * How to clean collections when activating the transfer. One of "CLICKHOUSE_CLEANUP_POLICY_DISABLED" or "CLICKHOUSE_CLEANUP_POLICY_DROP".
     */
    cleanupPolicy?: pulumi.Input<string>;
    /**
     * Database name.
     */
    database?: pulumi.Input<string>;
    /**
     * - (Optional) Compression that will be used for default columns family on YDB table creation One of "YDB_DEFAULT_COMPRESSION_UNSPECIFIED", "YDB_DEFAULT_COMPRESSION_DISABLED", "YDB_DEFAULT_COMPRESSION_LZ4".
     */
    defaultCompression?: pulumi.Input<string>;
    /**
     * - (Optional) Instance of YDB. Example: "my-cute-ydb.cloud.yandex.ru:2135".
     */
    instance?: pulumi.Input<string>;
    /**
     * - (Optional) Whether a column-oriented (i.e. OLAP) tables should be created. Default is `false` (create row-oriented OLTP tables).
     */
    isTableColumnOriented?: pulumi.Input<boolean>;
    /**
     * Path to the field.
     */
    path?: pulumi.Input<string>;
    /**
     * - (Optional, Sensitive) Authentication key.
     */
    saKeyContent?: pulumi.Input<string>;
    /**
     * List of security groups that the transfer associated with this endpoint should use.
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - (Required) Service account ID for interaction with database.
     */
    serviceAccountId?: pulumi.Input<string>;
    /**
     * Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.
     */
    subnetId?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsYdsSource {
    /**
     * - (Optional) Should continue working, if consumer read lag exceed TTL of topic.
     */
    allowTtlRewind?: pulumi.Input<boolean>;
    /**
     * - (Optional) Consumer.
     */
    consumer?: pulumi.Input<string>;
    /**
     * Database name.
     */
    database?: pulumi.Input<string>;
    /**
     * - (Optional) YDS Endpoint.
     */
    endpoint?: pulumi.Input<string>;
    /**
     * Data parsing parameters. If not set, the source messages are read in raw.
     */
    parser?: pulumi.Input<inputs.DatatransferEndpointSettingsYdsSourceParser>;
    /**
     * List of security groups that the transfer associated with this endpoint should use.
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * - (Required) Service account ID for interaction with database.
     */
    serviceAccountId?: pulumi.Input<string>;
    /**
     * - (Optional) Stream.
     */
    stream?: pulumi.Input<string>;
    /**
     * Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * - (Optional) List of supported compression codec.
     */
    supportedCodecs?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DatatransferEndpointSettingsYdsSourceParser {
    /**
     * Parse Audit Trails data. Empty struct.
     */
    auditTrailsV1Parser?: pulumi.Input<inputs.DatatransferEndpointSettingsYdsSourceParserAuditTrailsV1Parser>;
    /**
     * Parse Cloud Logging data. Empty struct.
     */
    cloudLoggingParser?: pulumi.Input<inputs.DatatransferEndpointSettingsYdsSourceParserCloudLoggingParser>;
    /**
     * Parse data in json format.
     */
    jsonParser?: pulumi.Input<inputs.DatatransferEndpointSettingsYdsSourceParserJsonParser>;
    /**
     * Parse data if tskv format.
     */
    tskvParser?: pulumi.Input<inputs.DatatransferEndpointSettingsYdsSourceParserTskvParser>;
}

export interface DatatransferEndpointSettingsYdsSourceParserAuditTrailsV1Parser {
}

export interface DatatransferEndpointSettingsYdsSourceParserCloudLoggingParser {
}

export interface DatatransferEndpointSettingsYdsSourceParserJsonParser {
    /**
     * Add fields, that are not in the schema, into the _rest column.
     */
    addRestColumn?: pulumi.Input<boolean>;
    /**
     * Data parsing scheme.The structure is documented below.
     */
    dataSchema?: pulumi.Input<inputs.DatatransferEndpointSettingsYdsSourceParserJsonParserDataSchema>;
    /**
     * Allow null keys. If `false` - null keys will be putted to unparsed data
     */
    nullKeysAllowed?: pulumi.Input<boolean>;
    /**
     * Allow unescape string values.
     */
    unescapeStringValues?: pulumi.Input<boolean>;
}

export interface DatatransferEndpointSettingsYdsSourceParserJsonParserDataSchema {
    /**
     * Description of the data schema in the array of `fields` structure (documented below).
     */
    fields?: pulumi.Input<inputs.DatatransferEndpointSettingsYdsSourceParserJsonParserDataSchemaFields>;
    /**
     * Description of the data schema as JSON specification.
     */
    jsonFields?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsYdsSourceParserJsonParserDataSchemaFields {
    /**
     * Description of the data schema in the array of `fields` structure (documented below).
     */
    fields?: pulumi.Input<pulumi.Input<inputs.DatatransferEndpointSettingsYdsSourceParserJsonParserDataSchemaFieldsField>[]>;
}

export interface DatatransferEndpointSettingsYdsSourceParserJsonParserDataSchemaFieldsField {
    /**
     * Mark field as Primary Key.
     */
    key?: pulumi.Input<boolean>;
    /**
     * Field name.
     */
    name?: pulumi.Input<string>;
    /**
     * Path to the field.
     */
    path?: pulumi.Input<string>;
    /**
     * Mark field as required.
     */
    required?: pulumi.Input<boolean>;
    /**
     * Field type, one of: `INT64`, `INT32`, `INT16`, `INT8`, `UINT64`, `UINT32`, `UINT16`, `UINT8`, `DOUBLE`, `BOOLEAN`, `STRING`, `UTF8`, `ANY`, `DATETIME`.
     */
    type?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsYdsSourceParserTskvParser {
    /**
     * Add fields, that are not in the schema, into the _rest column.
     */
    addRestColumn?: pulumi.Input<boolean>;
    /**
     * Data parsing scheme.The structure is documented below.
     */
    dataSchema?: pulumi.Input<inputs.DatatransferEndpointSettingsYdsSourceParserTskvParserDataSchema>;
    /**
     * Allow null keys. If `false` - null keys will be putted to unparsed data
     */
    nullKeysAllowed?: pulumi.Input<boolean>;
    /**
     * Allow unescape string values.
     */
    unescapeStringValues?: pulumi.Input<boolean>;
}

export interface DatatransferEndpointSettingsYdsSourceParserTskvParserDataSchema {
    /**
     * Description of the data schema in the array of `fields` structure (documented below).
     */
    fields?: pulumi.Input<inputs.DatatransferEndpointSettingsYdsSourceParserTskvParserDataSchemaFields>;
    /**
     * Description of the data schema as JSON specification.
     */
    jsonFields?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsYdsSourceParserTskvParserDataSchemaFields {
    /**
     * Description of the data schema in the array of `fields` structure (documented below).
     */
    fields?: pulumi.Input<pulumi.Input<inputs.DatatransferEndpointSettingsYdsSourceParserTskvParserDataSchemaFieldsField>[]>;
}

export interface DatatransferEndpointSettingsYdsSourceParserTskvParserDataSchemaFieldsField {
    /**
     * Mark field as Primary Key.
     */
    key?: pulumi.Input<boolean>;
    /**
     * Field name.
     */
    name?: pulumi.Input<string>;
    /**
     * Path to the field.
     */
    path?: pulumi.Input<string>;
    /**
     * Mark field as required.
     */
    required?: pulumi.Input<boolean>;
    /**
     * Field type, one of: `INT64`, `INT32`, `INT16`, `INT8`, `UINT64`, `UINT32`, `UINT16`, `UINT8`, `DOUBLE`, `BOOLEAN`, `STRING`, `UTF8`, `ANY`, `DATETIME`.
     */
    type?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsYdsTarget {
    /**
     * Database name.
     */
    database?: pulumi.Input<string>;
    /**
     * - (Optional) YDS Endpoint.
     */
    endpoint?: pulumi.Input<string>;
    /**
     * Not to split events queue into separate per-table queues.
     */
    saveTxOrder?: pulumi.Input<boolean>;
    /**
     * List of security groups that the transfer associated with this endpoint should use.
     */
    securityGroups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Data serialization settings.
     */
    serializer?: pulumi.Input<inputs.DatatransferEndpointSettingsYdsTargetSerializer>;
    /**
     * - (Required) Service account ID for interaction with database.
     */
    serviceAccountId?: pulumi.Input<string>;
    /**
     * - (Optional) Stream.
     */
    stream?: pulumi.Input<string>;
    /**
     * Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.
     */
    subnetId?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsYdsTargetSerializer {
    /**
     * Empty block. Select data serialization format automatically.
     */
    serializerAuto?: pulumi.Input<inputs.DatatransferEndpointSettingsYdsTargetSerializerSerializerAuto>;
    /**
     * Serialize data in json format. The structure is documented below.
     */
    serializerDebezium?: pulumi.Input<inputs.DatatransferEndpointSettingsYdsTargetSerializerSerializerDebezium>;
    /**
     * Empty block. Serialize data in json format.
     */
    serializerJson?: pulumi.Input<inputs.DatatransferEndpointSettingsYdsTargetSerializerSerializerJson>;
}

export interface DatatransferEndpointSettingsYdsTargetSerializerSerializerAuto {
}

export interface DatatransferEndpointSettingsYdsTargetSerializerSerializerDebezium {
    /**
     * A list of debezium parameters set by the structure of the `key` and `value` string fields.
     */
    serializerParameters?: pulumi.Input<pulumi.Input<inputs.DatatransferEndpointSettingsYdsTargetSerializerSerializerDebeziumSerializerParameter>[]>;
}

export interface DatatransferEndpointSettingsYdsTargetSerializerSerializerDebeziumSerializerParameter {
    /**
     * Mark field as Primary Key.
     */
    key?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface DatatransferEndpointSettingsYdsTargetSerializerSerializerJson {
}

export interface DatatransferTransferRuntime {
    /**
     * YC Runtime parameters for the transfer.
     */
    ycRuntime?: pulumi.Input<inputs.DatatransferTransferRuntimeYcRuntime>;
}

export interface DatatransferTransferRuntimeYcRuntime {
    /**
     * Number of workers in parallel replication.
     */
    jobCount?: pulumi.Input<number>;
    /**
     * Parallel snapshot parameters.
     */
    uploadShardParams?: pulumi.Input<inputs.DatatransferTransferRuntimeYcRuntimeUploadShardParams>;
}

export interface DatatransferTransferRuntimeYcRuntimeUploadShardParams {
    /**
     * Number of workers.
     */
    jobCount?: pulumi.Input<number>;
    /**
     * Number of threads.
     */
    processCount?: pulumi.Input<number>;
}

export interface DatatransferTransferTransformation {
    /**
     * A list of transformers. You can specify exactly 1 transformer in each element of list.
     */
    transformers?: pulumi.Input<pulumi.Input<inputs.DatatransferTransferTransformationTransformer>[]>;
}

export interface DatatransferTransferTransformationTransformer {
    /**
     * Convert column values to strings.
     */
    convertToString?: pulumi.Input<inputs.DatatransferTransferTransformationTransformerConvertToString>;
    /**
     * Set up a list of table columns to transfer.
     */
    filterColumns?: pulumi.Input<inputs.DatatransferTransferTransformationTransformerFilterColumns>;
    /**
     * This filter only applies to transfers with queues (Apache Kafka®) as a data source. When running a transfer, only the strings meeting the specified criteria remain in a changefeed.
     */
    filterRows?: pulumi.Input<inputs.DatatransferTransferTransformationTransformerFilterRows>;
    /**
     * Mask field transformer allows you to hash data.
     */
    maskField?: pulumi.Input<inputs.DatatransferTransferTransformationTransformerMaskField>;
    /**
     * Set rules for renaming tables by specifying the current names of the tables in the source and new names for these tables in the target.
     */
    renameTables?: pulumi.Input<inputs.DatatransferTransferTransformationTransformerRenameTables>;
    /**
     * Override primary keys.
     */
    replacePrimaryKey?: pulumi.Input<inputs.DatatransferTransferTransformationTransformerReplacePrimaryKey>;
    /**
     * Set the number of shards for particular tables and a list of columns whose values will be used for calculating a hash to determine a shard.
     */
    sharderTransformer?: pulumi.Input<inputs.DatatransferTransferTransformationTransformerSharderTransformer>;
    /**
     * Splits the X table into multiple tables (X_1, X_2, ..., X_n) based on data.
     */
    tableSplitterTransformer?: pulumi.Input<inputs.DatatransferTransferTransformationTransformerTableSplitterTransformer>;
}

export interface DatatransferTransferTransformationTransformerConvertToString {
    /**
     * List of the columns to transfer to the target tables using lists of included and excluded columns (see block documentation below).
     */
    columns?: pulumi.Input<inputs.DatatransferTransferTransformationTransformerConvertToStringColumns>;
    /**
     * Table filter (see block documentation below).
     */
    tables?: pulumi.Input<inputs.DatatransferTransferTransformationTransformerConvertToStringTables>;
}

export interface DatatransferTransferTransformationTransformerConvertToStringColumns {
    /**
     * List of columns that will be excluded to transfer.
     */
    excludeColumns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of columns that will be included to transfer.
     */
    includeColumns?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DatatransferTransferTransformationTransformerConvertToStringTables {
    /**
     * List of tables that will be excluded to transfer.
     */
    excludeTables?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of tables that will be included to transfer.
     */
    includeTables?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DatatransferTransferTransformationTransformerFilterColumns {
    /**
     * List of the columns to transfer to the target tables using lists of included and excluded columns (see block documentation below).
     */
    columns?: pulumi.Input<inputs.DatatransferTransferTransformationTransformerFilterColumnsColumns>;
    /**
     * Table filter (see block documentation below).
     */
    tables?: pulumi.Input<inputs.DatatransferTransferTransformationTransformerFilterColumnsTables>;
}

export interface DatatransferTransferTransformationTransformerFilterColumnsColumns {
    /**
     * List of columns that will be excluded to transfer.
     */
    excludeColumns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of columns that will be included to transfer.
     */
    includeColumns?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DatatransferTransferTransformationTransformerFilterColumnsTables {
    /**
     * List of tables that will be excluded to transfer.
     */
    excludeTables?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of tables that will be included to transfer.
     */
    includeTables?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DatatransferTransferTransformationTransformerFilterRows {
    /**
     * Filtering criterion. This can be comparison operators for numeric, string, and Boolean values, comparison to NULL, and checking whether a substring is part of a string. Details here: https://cloud.yandex.com/en/docs/data-transfer/concepts/data-transformation#append-only-sources
     */
    filter?: pulumi.Input<string>;
    /**
     * Table filter (see block documentation below).
     */
    tables?: pulumi.Input<inputs.DatatransferTransferTransformationTransformerFilterRowsTables>;
}

export interface DatatransferTransferTransformationTransformerFilterRowsTables {
    /**
     * List of tables that will be excluded to transfer.
     */
    excludeTables?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of tables that will be included to transfer.
     */
    includeTables?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DatatransferTransferTransformationTransformerMaskField {
    /**
     * List of strings that specify the name of the column for data masking (a regular expression).
     */
    columns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Mask function.
     */
    function?: pulumi.Input<inputs.DatatransferTransferTransformationTransformerMaskFieldFunction>;
    /**
     * Table filter.
     */
    tables?: pulumi.Input<inputs.DatatransferTransferTransformationTransformerMaskFieldTables>;
}

export interface DatatransferTransferTransformationTransformerMaskFieldFunction {
    /**
     * Hash mask function.
     */
    maskFunctionHash?: pulumi.Input<inputs.DatatransferTransferTransformationTransformerMaskFieldFunctionMaskFunctionHash>;
}

export interface DatatransferTransferTransformationTransformerMaskFieldFunctionMaskFunctionHash {
    /**
     * This string will be used in the HMAC(sha256, salt) function applied to the column data.
     */
    userDefinedSalt?: pulumi.Input<string>;
}

export interface DatatransferTransferTransformationTransformerMaskFieldTables {
    /**
     * List of tables that will be excluded to transfer.
     */
    excludeTables?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of tables that will be included to transfer.
     */
    includeTables?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DatatransferTransferTransformationTransformerRenameTables {
    /**
     * List of renaming rules.
     */
    renameTables?: pulumi.Input<pulumi.Input<inputs.DatatransferTransferTransformationTransformerRenameTablesRenameTable>[]>;
}

export interface DatatransferTransferTransformationTransformerRenameTablesRenameTable {
    /**
     * Specify the new names for this table in the target.
     */
    newName?: pulumi.Input<inputs.DatatransferTransferTransformationTransformerRenameTablesRenameTableNewName>;
    /**
     * Specify the current names of the table in the source.
     */
    originalName?: pulumi.Input<inputs.DatatransferTransferTransformationTransformerRenameTablesRenameTableOriginalName>;
}

export interface DatatransferTransferTransformationTransformerRenameTablesRenameTableNewName {
    /**
     * Name of the transfer.
     */
    name?: pulumi.Input<string>;
    nameSpace?: pulumi.Input<string>;
}

export interface DatatransferTransferTransformationTransformerRenameTablesRenameTableOriginalName {
    /**
     * Name of the transfer.
     */
    name?: pulumi.Input<string>;
    nameSpace?: pulumi.Input<string>;
}

export interface DatatransferTransferTransformationTransformerReplacePrimaryKey {
    /**
     * List of columns to be used as primary keys.
     */
    keys?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Table filter (see block documentation below).
     */
    tables?: pulumi.Input<inputs.DatatransferTransferTransformationTransformerReplacePrimaryKeyTables>;
}

export interface DatatransferTransferTransformationTransformerReplacePrimaryKeyTables {
    /**
     * List of tables that will be excluded to transfer.
     */
    excludeTables?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of tables that will be included to transfer.
     */
    includeTables?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DatatransferTransferTransformationTransformerSharderTransformer {
    /**
     * List of the columns to transfer to the target tables using lists of included and excluded columns (see block documentation below).
     */
    columns?: pulumi.Input<inputs.DatatransferTransferTransformationTransformerSharderTransformerColumns>;
    /**
     * Number of shards.
     */
    shardsCount?: pulumi.Input<number>;
    /**
     * Table filter (see block documentation below).
     */
    tables?: pulumi.Input<inputs.DatatransferTransferTransformationTransformerSharderTransformerTables>;
}

export interface DatatransferTransferTransformationTransformerSharderTransformerColumns {
    /**
     * List of columns that will be excluded to transfer.
     */
    excludeColumns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of columns that will be included to transfer.
     */
    includeColumns?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DatatransferTransferTransformationTransformerSharderTransformerTables {
    /**
     * List of tables that will be excluded to transfer.
     */
    excludeTables?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of tables that will be included to transfer.
     */
    includeTables?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DatatransferTransferTransformationTransformerTableSplitterTransformer {
    /**
     * List of strings that specify the columns in the tables to be partitioned.
     */
    columns?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specify the split string to be used for merging components in a new table name.
     */
    splitter?: pulumi.Input<string>;
    /**
     * Table filter (see block documentation below).
     */
    tables?: pulumi.Input<inputs.DatatransferTransferTransformationTransformerTableSplitterTransformerTables>;
}

export interface DatatransferTransferTransformationTransformerTableSplitterTransformerTables {
    /**
     * List of tables that will be excluded to transfer.
     */
    excludeTables?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of tables that will be included to transfer.
     */
    includeTables?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FunctionAsyncInvocation {
    /**
     * Maximum number of retries for async invocation
     */
    retriesCount?: pulumi.Input<number>;
    /**
     * Service account ID for Yandex Cloud Function
     */
    serviceAccountId?: pulumi.Input<string>;
    /**
     * Target for unsuccessful async invocation
     */
    ymqFailureTarget?: pulumi.Input<inputs.FunctionAsyncInvocationYmqFailureTarget>;
    /**
     * Target for successful async invocation
     */
    ymqSuccessTarget?: pulumi.Input<inputs.FunctionAsyncInvocationYmqSuccessTarget>;
}

export interface FunctionAsyncInvocationYmqFailureTarget {
    /**
     * YMQ ARN
     */
    arn: pulumi.Input<string>;
    /**
     * Service account ID for Yandex Cloud Function
     */
    serviceAccountId: pulumi.Input<string>;
}

export interface FunctionAsyncInvocationYmqSuccessTarget {
    /**
     * YMQ ARN
     */
    arn: pulumi.Input<string>;
    /**
     * Service account ID for Yandex Cloud Function
     */
    serviceAccountId: pulumi.Input<string>;
}

export interface FunctionConnectivity {
    networkId: pulumi.Input<string>;
}

export interface FunctionContent {
    zipFilename: pulumi.Input<string>;
}

export interface FunctionLogOptions {
    /**
     * Is logging from function disabled
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * Folder ID for the Yandex Cloud Function
     */
    folderId?: pulumi.Input<string>;
    /**
     * Log entries are written to specified log group
     */
    logGroupId?: pulumi.Input<string>;
    /**
     * Minimum log entry level
     */
    minLevel?: pulumi.Input<string>;
}

export interface FunctionPackage {
    bucketName: pulumi.Input<string>;
    objectName: pulumi.Input<string>;
    sha256?: pulumi.Input<string>;
}

export interface FunctionScalingPolicyPolicy {
    tag: pulumi.Input<string>;
    zoneInstancesLimit?: pulumi.Input<number>;
    zoneRequestsLimit?: pulumi.Input<number>;
}

export interface FunctionSecret {
    /**
     * (Required) Function's environment variable in which secret's value will be stored.
     */
    environmentVariable: pulumi.Input<string>;
    /**
     * (Required) Secret's id.
     */
    id: pulumi.Input<string>;
    /**
     * (Required) Secret's entries key which value will be stored in environment variable.
     */
    key: pulumi.Input<string>;
    /**
     * (Required) Secret's version id.
     */
    versionId: pulumi.Input<string>;
}

export interface FunctionStorageMount {
    /**
     * (Required) Name of the mounting bucket.
     */
    bucket: pulumi.Input<string>;
    /**
     * (Required) Name of the mount point. The directory where the bucket is mounted will be accessible at the `/function/storage/<mount_point>` path.
     */
    mountPointName: pulumi.Input<string>;
    /**
     * Prefix within the bucket. If you leave this field empty, the entire bucket will be mounted.
     */
    prefix?: pulumi.Input<string>;
    /**
     * Mount the bucket in read-only mode.
     */
    readOnly?: pulumi.Input<boolean>;
}

export interface FunctionTriggerContainer {
    id: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    retryAttempts?: pulumi.Input<string>;
    retryInterval?: pulumi.Input<string>;
    serviceAccountId?: pulumi.Input<string>;
}

export interface FunctionTriggerContainerRegistry {
    batchCutoff: pulumi.Input<string>;
    batchSize?: pulumi.Input<string>;
    createImage?: pulumi.Input<boolean>;
    createImageTag?: pulumi.Input<boolean>;
    deleteImage?: pulumi.Input<boolean>;
    deleteImageTag?: pulumi.Input<boolean>;
    imageName?: pulumi.Input<string>;
    registryId: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
}

export interface FunctionTriggerDataStreams {
    batchCutoff: pulumi.Input<string>;
    batchSize?: pulumi.Input<string>;
    database: pulumi.Input<string>;
    serviceAccountId: pulumi.Input<string>;
    streamName: pulumi.Input<string>;
}

export interface FunctionTriggerDlq {
    queueId: pulumi.Input<string>;
    serviceAccountId: pulumi.Input<string>;
}

export interface FunctionTriggerFunction {
    id: pulumi.Input<string>;
    retryAttempts?: pulumi.Input<string>;
    retryInterval?: pulumi.Input<string>;
    serviceAccountId?: pulumi.Input<string>;
    tag?: pulumi.Input<string>;
}

export interface FunctionTriggerIot {
    batchCutoff: pulumi.Input<string>;
    batchSize?: pulumi.Input<string>;
    deviceId?: pulumi.Input<string>;
    registryId: pulumi.Input<string>;
    topic?: pulumi.Input<string>;
}

export interface FunctionTriggerLogGroup {
    batchCutoff: pulumi.Input<string>;
    batchSize?: pulumi.Input<string>;
    logGroupIds: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FunctionTriggerLogging {
    batchCutoff: pulumi.Input<string>;
    batchSize?: pulumi.Input<string>;
    groupId: pulumi.Input<string>;
    levels?: pulumi.Input<pulumi.Input<string>[]>;
    resourceIds?: pulumi.Input<pulumi.Input<string>[]>;
    resourceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    streamNames?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FunctionTriggerMail {
    attachmentsBucketId?: pulumi.Input<string>;
    batchCutoff: pulumi.Input<string>;
    batchSize?: pulumi.Input<string>;
    serviceAccountId?: pulumi.Input<string>;
}

export interface FunctionTriggerMessageQueue {
    batchCutoff: pulumi.Input<string>;
    batchSize?: pulumi.Input<string>;
    queueId: pulumi.Input<string>;
    serviceAccountId: pulumi.Input<string>;
    visibilityTimeout?: pulumi.Input<string>;
}

export interface FunctionTriggerObjectStorage {
    batchCutoff: pulumi.Input<string>;
    batchSize?: pulumi.Input<string>;
    bucketId: pulumi.Input<string>;
    create?: pulumi.Input<boolean>;
    delete?: pulumi.Input<boolean>;
    prefix?: pulumi.Input<string>;
    suffix?: pulumi.Input<string>;
    update?: pulumi.Input<boolean>;
}

export interface FunctionTriggerTimer {
    cronExpression: pulumi.Input<string>;
    payload?: pulumi.Input<string>;
}

export interface GetAlbBackendGroupGrpcBackend {
    healthcheck?: inputs.GetAlbBackendGroupGrpcBackendHealthcheck;
    loadBalancingConfig?: inputs.GetAlbBackendGroupGrpcBackendLoadBalancingConfig;
    name?: string;
    port?: number;
    targetGroupIds?: string[];
    tls?: inputs.GetAlbBackendGroupGrpcBackendTls;
    weight?: number;
}

export interface GetAlbBackendGroupGrpcBackendArgs {
    healthcheck?: pulumi.Input<inputs.GetAlbBackendGroupGrpcBackendHealthcheckArgs>;
    loadBalancingConfig?: pulumi.Input<inputs.GetAlbBackendGroupGrpcBackendLoadBalancingConfigArgs>;
    name?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    targetGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    tls?: pulumi.Input<inputs.GetAlbBackendGroupGrpcBackendTlsArgs>;
    weight?: pulumi.Input<number>;
}

export interface GetAlbBackendGroupGrpcBackendHealthcheck {
    grpcHealthcheck?: inputs.GetAlbBackendGroupGrpcBackendHealthcheckGrpcHealthcheck;
    healthcheckPort?: number;
    healthyThreshold?: number;
    httpHealthcheck?: inputs.GetAlbBackendGroupGrpcBackendHealthcheckHttpHealthcheck;
    interval?: string;
    intervalJitterPercent?: number;
    streamHealthcheck?: inputs.GetAlbBackendGroupGrpcBackendHealthcheckStreamHealthcheck;
    timeout?: string;
    unhealthyThreshold?: number;
}

export interface GetAlbBackendGroupGrpcBackendHealthcheckArgs {
    grpcHealthcheck?: pulumi.Input<inputs.GetAlbBackendGroupGrpcBackendHealthcheckGrpcHealthcheckArgs>;
    healthcheckPort?: pulumi.Input<number>;
    healthyThreshold?: pulumi.Input<number>;
    httpHealthcheck?: pulumi.Input<inputs.GetAlbBackendGroupGrpcBackendHealthcheckHttpHealthcheckArgs>;
    interval?: pulumi.Input<string>;
    intervalJitterPercent?: pulumi.Input<number>;
    streamHealthcheck?: pulumi.Input<inputs.GetAlbBackendGroupGrpcBackendHealthcheckStreamHealthcheckArgs>;
    timeout?: pulumi.Input<string>;
    unhealthyThreshold?: pulumi.Input<number>;
}

export interface GetAlbBackendGroupGrpcBackendHealthcheckGrpcHealthcheck {
    serviceName?: string;
}

export interface GetAlbBackendGroupGrpcBackendHealthcheckGrpcHealthcheckArgs {
    serviceName?: pulumi.Input<string>;
}

export interface GetAlbBackendGroupGrpcBackendHealthcheckHttpHealthcheck {
    host?: string;
    http2?: boolean;
    path?: string;
}

export interface GetAlbBackendGroupGrpcBackendHealthcheckHttpHealthcheckArgs {
    host?: pulumi.Input<string>;
    http2?: pulumi.Input<boolean>;
    path?: pulumi.Input<string>;
}

export interface GetAlbBackendGroupGrpcBackendHealthcheckStreamHealthcheck {
    receive?: string;
    send?: string;
}

export interface GetAlbBackendGroupGrpcBackendHealthcheckStreamHealthcheckArgs {
    receive?: pulumi.Input<string>;
    send?: pulumi.Input<string>;
}

export interface GetAlbBackendGroupGrpcBackendLoadBalancingConfig {
    localityAwareRoutingPercent?: number;
    mode?: string;
    panicThreshold?: number;
    strictLocality?: boolean;
}

export interface GetAlbBackendGroupGrpcBackendLoadBalancingConfigArgs {
    localityAwareRoutingPercent?: pulumi.Input<number>;
    mode?: pulumi.Input<string>;
    panicThreshold?: pulumi.Input<number>;
    strictLocality?: pulumi.Input<boolean>;
}

export interface GetAlbBackendGroupGrpcBackendTls {
    sni?: string;
    validationContext?: inputs.GetAlbBackendGroupGrpcBackendTlsValidationContext;
}

export interface GetAlbBackendGroupGrpcBackendTlsArgs {
    sni?: pulumi.Input<string>;
    validationContext?: pulumi.Input<inputs.GetAlbBackendGroupGrpcBackendTlsValidationContextArgs>;
}

export interface GetAlbBackendGroupGrpcBackendTlsValidationContext {
    trustedCaBytes?: string;
    trustedCaId?: string;
}

export interface GetAlbBackendGroupGrpcBackendTlsValidationContextArgs {
    trustedCaBytes?: pulumi.Input<string>;
    trustedCaId?: pulumi.Input<string>;
}

export interface GetAlbBackendGroupHttpBackend {
    healthcheck?: inputs.GetAlbBackendGroupHttpBackendHealthcheck;
    http2?: boolean;
    loadBalancingConfig?: inputs.GetAlbBackendGroupHttpBackendLoadBalancingConfig;
    name?: string;
    port?: number;
    storageBucket?: string;
    targetGroupIds?: string[];
    tls?: inputs.GetAlbBackendGroupHttpBackendTls;
    weight?: number;
}

export interface GetAlbBackendGroupHttpBackendArgs {
    healthcheck?: pulumi.Input<inputs.GetAlbBackendGroupHttpBackendHealthcheckArgs>;
    http2?: pulumi.Input<boolean>;
    loadBalancingConfig?: pulumi.Input<inputs.GetAlbBackendGroupHttpBackendLoadBalancingConfigArgs>;
    name?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    storageBucket?: pulumi.Input<string>;
    targetGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    tls?: pulumi.Input<inputs.GetAlbBackendGroupHttpBackendTlsArgs>;
    weight?: pulumi.Input<number>;
}

export interface GetAlbBackendGroupHttpBackendHealthcheck {
    grpcHealthcheck?: inputs.GetAlbBackendGroupHttpBackendHealthcheckGrpcHealthcheck;
    healthcheckPort?: number;
    healthyThreshold?: number;
    httpHealthcheck?: inputs.GetAlbBackendGroupHttpBackendHealthcheckHttpHealthcheck;
    interval?: string;
    intervalJitterPercent?: number;
    streamHealthcheck?: inputs.GetAlbBackendGroupHttpBackendHealthcheckStreamHealthcheck;
    timeout?: string;
    unhealthyThreshold?: number;
}

export interface GetAlbBackendGroupHttpBackendHealthcheckArgs {
    grpcHealthcheck?: pulumi.Input<inputs.GetAlbBackendGroupHttpBackendHealthcheckGrpcHealthcheckArgs>;
    healthcheckPort?: pulumi.Input<number>;
    healthyThreshold?: pulumi.Input<number>;
    httpHealthcheck?: pulumi.Input<inputs.GetAlbBackendGroupHttpBackendHealthcheckHttpHealthcheckArgs>;
    interval?: pulumi.Input<string>;
    intervalJitterPercent?: pulumi.Input<number>;
    streamHealthcheck?: pulumi.Input<inputs.GetAlbBackendGroupHttpBackendHealthcheckStreamHealthcheckArgs>;
    timeout?: pulumi.Input<string>;
    unhealthyThreshold?: pulumi.Input<number>;
}

export interface GetAlbBackendGroupHttpBackendHealthcheckGrpcHealthcheck {
    serviceName?: string;
}

export interface GetAlbBackendGroupHttpBackendHealthcheckGrpcHealthcheckArgs {
    serviceName?: pulumi.Input<string>;
}

export interface GetAlbBackendGroupHttpBackendHealthcheckHttpHealthcheck {
    host?: string;
    http2?: boolean;
    path?: string;
}

export interface GetAlbBackendGroupHttpBackendHealthcheckHttpHealthcheckArgs {
    host?: pulumi.Input<string>;
    http2?: pulumi.Input<boolean>;
    path?: pulumi.Input<string>;
}

export interface GetAlbBackendGroupHttpBackendHealthcheckStreamHealthcheck {
    receive?: string;
    send?: string;
}

export interface GetAlbBackendGroupHttpBackendHealthcheckStreamHealthcheckArgs {
    receive?: pulumi.Input<string>;
    send?: pulumi.Input<string>;
}

export interface GetAlbBackendGroupHttpBackendLoadBalancingConfig {
    localityAwareRoutingPercent?: number;
    mode?: string;
    panicThreshold?: number;
    strictLocality?: boolean;
}

export interface GetAlbBackendGroupHttpBackendLoadBalancingConfigArgs {
    localityAwareRoutingPercent?: pulumi.Input<number>;
    mode?: pulumi.Input<string>;
    panicThreshold?: pulumi.Input<number>;
    strictLocality?: pulumi.Input<boolean>;
}

export interface GetAlbBackendGroupHttpBackendTls {
    sni?: string;
    validationContext?: inputs.GetAlbBackendGroupHttpBackendTlsValidationContext;
}

export interface GetAlbBackendGroupHttpBackendTlsArgs {
    sni?: pulumi.Input<string>;
    validationContext?: pulumi.Input<inputs.GetAlbBackendGroupHttpBackendTlsValidationContextArgs>;
}

export interface GetAlbBackendGroupHttpBackendTlsValidationContext {
    trustedCaBytes?: string;
    trustedCaId?: string;
}

export interface GetAlbBackendGroupHttpBackendTlsValidationContextArgs {
    trustedCaBytes?: pulumi.Input<string>;
    trustedCaId?: pulumi.Input<string>;
}

export interface GetAlbBackendGroupSessionAffinity {
    /**
     * IP address affinity
     */
    connection?: inputs.GetAlbBackendGroupSessionAffinityConnection;
    /**
     * Cookie affinity
     */
    cookie?: inputs.GetAlbBackendGroupSessionAffinityCookie;
    /**
     * Request header affinity
     */
    header?: inputs.GetAlbBackendGroupSessionAffinityHeader;
}

export interface GetAlbBackendGroupSessionAffinityArgs {
    /**
     * IP address affinity
     */
    connection?: pulumi.Input<inputs.GetAlbBackendGroupSessionAffinityConnectionArgs>;
    /**
     * Cookie affinity
     */
    cookie?: pulumi.Input<inputs.GetAlbBackendGroupSessionAffinityCookieArgs>;
    /**
     * Request header affinity
     */
    header?: pulumi.Input<inputs.GetAlbBackendGroupSessionAffinityHeaderArgs>;
}

export interface GetAlbBackendGroupSessionAffinityConnection {
    /**
     * Use source IP address
     */
    sourceIp?: boolean;
}

export interface GetAlbBackendGroupSessionAffinityConnectionArgs {
    /**
     * Use source IP address
     */
    sourceIp?: pulumi.Input<boolean>;
}

export interface GetAlbBackendGroupSessionAffinityCookie {
    /**
     * Name of the HTTP cookie
     */
    name?: string;
    /**
     * TTL for the cookie (if not set, session cookie will be used)
     */
    ttl?: string;
}

export interface GetAlbBackendGroupSessionAffinityCookieArgs {
    /**
     * Name of the HTTP cookie
     */
    name?: pulumi.Input<string>;
    /**
     * TTL for the cookie (if not set, session cookie will be used)
     */
    ttl?: pulumi.Input<string>;
}

export interface GetAlbBackendGroupSessionAffinityHeader {
    /**
     * The name of the request header that will be used
     */
    headerName?: string;
}

export interface GetAlbBackendGroupSessionAffinityHeaderArgs {
    /**
     * The name of the request header that will be used
     */
    headerName?: pulumi.Input<string>;
}

export interface GetAlbBackendGroupStreamBackend {
    enableProxyProtocol?: boolean;
    healthcheck?: inputs.GetAlbBackendGroupStreamBackendHealthcheck;
    loadBalancingConfig?: inputs.GetAlbBackendGroupStreamBackendLoadBalancingConfig;
    name?: string;
    port?: number;
    targetGroupIds?: string[];
    tls?: inputs.GetAlbBackendGroupStreamBackendTls;
    weight?: number;
}

export interface GetAlbBackendGroupStreamBackendArgs {
    enableProxyProtocol?: pulumi.Input<boolean>;
    healthcheck?: pulumi.Input<inputs.GetAlbBackendGroupStreamBackendHealthcheckArgs>;
    loadBalancingConfig?: pulumi.Input<inputs.GetAlbBackendGroupStreamBackendLoadBalancingConfigArgs>;
    name?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    targetGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    tls?: pulumi.Input<inputs.GetAlbBackendGroupStreamBackendTlsArgs>;
    weight?: pulumi.Input<number>;
}

export interface GetAlbBackendGroupStreamBackendHealthcheck {
    grpcHealthcheck?: inputs.GetAlbBackendGroupStreamBackendHealthcheckGrpcHealthcheck;
    healthcheckPort?: number;
    healthyThreshold?: number;
    httpHealthcheck?: inputs.GetAlbBackendGroupStreamBackendHealthcheckHttpHealthcheck;
    interval?: string;
    intervalJitterPercent?: number;
    streamHealthcheck?: inputs.GetAlbBackendGroupStreamBackendHealthcheckStreamHealthcheck;
    timeout?: string;
    unhealthyThreshold?: number;
}

export interface GetAlbBackendGroupStreamBackendHealthcheckArgs {
    grpcHealthcheck?: pulumi.Input<inputs.GetAlbBackendGroupStreamBackendHealthcheckGrpcHealthcheckArgs>;
    healthcheckPort?: pulumi.Input<number>;
    healthyThreshold?: pulumi.Input<number>;
    httpHealthcheck?: pulumi.Input<inputs.GetAlbBackendGroupStreamBackendHealthcheckHttpHealthcheckArgs>;
    interval?: pulumi.Input<string>;
    intervalJitterPercent?: pulumi.Input<number>;
    streamHealthcheck?: pulumi.Input<inputs.GetAlbBackendGroupStreamBackendHealthcheckStreamHealthcheckArgs>;
    timeout?: pulumi.Input<string>;
    unhealthyThreshold?: pulumi.Input<number>;
}

export interface GetAlbBackendGroupStreamBackendHealthcheckGrpcHealthcheck {
    serviceName?: string;
}

export interface GetAlbBackendGroupStreamBackendHealthcheckGrpcHealthcheckArgs {
    serviceName?: pulumi.Input<string>;
}

export interface GetAlbBackendGroupStreamBackendHealthcheckHttpHealthcheck {
    host?: string;
    http2?: boolean;
    path?: string;
}

export interface GetAlbBackendGroupStreamBackendHealthcheckHttpHealthcheckArgs {
    host?: pulumi.Input<string>;
    http2?: pulumi.Input<boolean>;
    path?: pulumi.Input<string>;
}

export interface GetAlbBackendGroupStreamBackendHealthcheckStreamHealthcheck {
    receive?: string;
    send?: string;
}

export interface GetAlbBackendGroupStreamBackendHealthcheckStreamHealthcheckArgs {
    receive?: pulumi.Input<string>;
    send?: pulumi.Input<string>;
}

export interface GetAlbBackendGroupStreamBackendLoadBalancingConfig {
    localityAwareRoutingPercent?: number;
    mode?: string;
    panicThreshold?: number;
    strictLocality?: boolean;
}

export interface GetAlbBackendGroupStreamBackendLoadBalancingConfigArgs {
    localityAwareRoutingPercent?: pulumi.Input<number>;
    mode?: pulumi.Input<string>;
    panicThreshold?: pulumi.Input<number>;
    strictLocality?: pulumi.Input<boolean>;
}

export interface GetAlbBackendGroupStreamBackendTls {
    sni?: string;
    validationContext?: inputs.GetAlbBackendGroupStreamBackendTlsValidationContext;
}

export interface GetAlbBackendGroupStreamBackendTlsArgs {
    sni?: pulumi.Input<string>;
    validationContext?: pulumi.Input<inputs.GetAlbBackendGroupStreamBackendTlsValidationContextArgs>;
}

export interface GetAlbBackendGroupStreamBackendTlsValidationContext {
    trustedCaBytes?: string;
    trustedCaId?: string;
}

export interface GetAlbBackendGroupStreamBackendTlsValidationContextArgs {
    trustedCaBytes?: pulumi.Input<string>;
    trustedCaId?: pulumi.Input<string>;
}

export interface GetApiGatewayCanary {
    variables?: {[key: string]: string};
    weight?: number;
}

export interface GetApiGatewayCanaryArgs {
    variables?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    weight?: pulumi.Input<number>;
}

export interface GetApiGatewayConnectivity {
    networkId: string;
}

export interface GetApiGatewayConnectivityArgs {
    networkId: pulumi.Input<string>;
}

export interface GetApiGatewayCustomDomain {
    certificateId: string;
    domainId?: string;
    fqdn: string;
}

export interface GetApiGatewayCustomDomainArgs {
    certificateId: pulumi.Input<string>;
    domainId?: pulumi.Input<string>;
    fqdn: pulumi.Input<string>;
}

export interface GetCdnResourceOptions {
    allowedHttpMethods?: string[];
    browserCacheSettings?: number;
    cacheHttpHeaders?: string[];
    cors?: string[];
    customHostHeader?: string;
    customServerName?: string;
    disableCache?: boolean;
    disableProxyForceRanges?: boolean;
    edgeCacheSettings?: number;
    enableIpUrlSigning?: boolean;
    fetchedCompressed?: boolean;
    forwardHostHeader?: boolean;
    gzipOn?: boolean;
    ignoreCookie?: boolean;
    ignoreQueryParams?: boolean;
    ipAddressAcl?: inputs.GetCdnResourceOptionsIpAddressAcl;
    proxyCacheMethodsSet?: boolean;
    queryParamsBlacklists?: string[];
    queryParamsWhitelists?: string[];
    redirectHttpToHttps?: boolean;
    redirectHttpsToHttp?: boolean;
    secureKey?: string;
    slice?: boolean;
    staticRequestHeaders?: {[key: string]: string};
    staticResponseHeaders?: {[key: string]: string};
}

export interface GetCdnResourceOptionsArgs {
    allowedHttpMethods?: pulumi.Input<pulumi.Input<string>[]>;
    browserCacheSettings?: pulumi.Input<number>;
    cacheHttpHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    cors?: pulumi.Input<pulumi.Input<string>[]>;
    customHostHeader?: pulumi.Input<string>;
    customServerName?: pulumi.Input<string>;
    disableCache?: pulumi.Input<boolean>;
    disableProxyForceRanges?: pulumi.Input<boolean>;
    edgeCacheSettings?: pulumi.Input<number>;
    enableIpUrlSigning?: pulumi.Input<boolean>;
    fetchedCompressed?: pulumi.Input<boolean>;
    forwardHostHeader?: pulumi.Input<boolean>;
    gzipOn?: pulumi.Input<boolean>;
    ignoreCookie?: pulumi.Input<boolean>;
    ignoreQueryParams?: pulumi.Input<boolean>;
    ipAddressAcl?: pulumi.Input<inputs.GetCdnResourceOptionsIpAddressAclArgs>;
    proxyCacheMethodsSet?: pulumi.Input<boolean>;
    queryParamsBlacklists?: pulumi.Input<pulumi.Input<string>[]>;
    queryParamsWhitelists?: pulumi.Input<pulumi.Input<string>[]>;
    redirectHttpToHttps?: pulumi.Input<boolean>;
    redirectHttpsToHttp?: pulumi.Input<boolean>;
    secureKey?: pulumi.Input<string>;
    slice?: pulumi.Input<boolean>;
    staticRequestHeaders?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    staticResponseHeaders?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface GetCdnResourceOptionsIpAddressAcl {
    exceptedValues?: string[];
    policyType?: string;
}

export interface GetCdnResourceOptionsIpAddressAclArgs {
    exceptedValues?: pulumi.Input<pulumi.Input<string>[]>;
    policyType?: pulumi.Input<string>;
}

export interface GetCdnResourceSslCertificate {
    certificateManagerId?: string;
    status?: string;
    type: string;
}

export interface GetCdnResourceSslCertificateArgs {
    certificateManagerId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    type: pulumi.Input<string>;
}

export interface GetComputeDiskDiskPlacementPolicy {
    diskPlacementGroupId: string;
}

export interface GetComputeDiskDiskPlacementPolicyArgs {
    diskPlacementGroupId: pulumi.Input<string>;
}

export interface GetComputeInstanceFilesystem {
    deviceName?: string;
    filesystemId?: string;
    mode?: string;
}

export interface GetComputeInstanceFilesystemArgs {
    deviceName?: pulumi.Input<string>;
    filesystemId?: pulumi.Input<string>;
    mode?: pulumi.Input<string>;
}

export interface GetComputeInstanceLocalDisk {
    deviceName?: string;
    sizeBytes: number;
}

export interface GetComputeInstanceLocalDiskArgs {
    deviceName?: pulumi.Input<string>;
    sizeBytes: pulumi.Input<number>;
}

export interface GetComputeInstanceMetadataOptions {
    awsV1HttpEndpoint?: number;
    awsV1HttpToken?: number;
    gceHttpEndpoint?: number;
    gceHttpToken?: number;
}

export interface GetComputeInstanceMetadataOptionsArgs {
    awsV1HttpEndpoint?: pulumi.Input<number>;
    awsV1HttpToken?: pulumi.Input<number>;
    gceHttpEndpoint?: pulumi.Input<number>;
    gceHttpToken?: pulumi.Input<number>;
}

export interface GetComputeInstancePlacementPolicy {
    hostAffinityRules?: inputs.GetComputeInstancePlacementPolicyHostAffinityRule[];
    placementGroupId?: string;
    placementGroupPartition?: number;
}

export interface GetComputeInstancePlacementPolicyArgs {
    hostAffinityRules?: pulumi.Input<pulumi.Input<inputs.GetComputeInstancePlacementPolicyHostAffinityRuleArgs>[]>;
    placementGroupId?: pulumi.Input<string>;
    placementGroupPartition?: pulumi.Input<number>;
}

export interface GetComputeInstancePlacementPolicyHostAffinityRule {
    key: string;
    op: string;
    values: string[];
}

export interface GetComputeInstancePlacementPolicyHostAffinityRuleArgs {
    key: pulumi.Input<string>;
    op: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetComputeSnapshotScheduleSchedulePolicy {
    expression?: string;
    startAt?: string;
}

export interface GetComputeSnapshotScheduleSchedulePolicyArgs {
    expression?: pulumi.Input<string>;
    startAt?: pulumi.Input<string>;
}

export interface GetComputeSnapshotScheduleSnapshotSpec {
    description?: string;
    labels?: {[key: string]: string};
}

export interface GetComputeSnapshotScheduleSnapshotSpecArgs {
    description?: pulumi.Input<string>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface GetFunctionConnectivity {
    networkId: string;
}

export interface GetFunctionConnectivityArgs {
    networkId: pulumi.Input<string>;
}

export interface GetFunctionScalingPolicyPolicy {
    tag?: string;
    zoneInstancesLimit?: number;
    zoneRequestsLimit?: number;
}

export interface GetFunctionScalingPolicyPolicyArgs {
    tag?: pulumi.Input<string>;
    zoneInstancesLimit?: pulumi.Input<number>;
    zoneRequestsLimit?: pulumi.Input<number>;
}

export interface GetFunctionSecret {
    environmentVariable: string;
    id: string;
    key: string;
    versionId: string;
}

export interface GetFunctionSecretArgs {
    environmentVariable: pulumi.Input<string>;
    id: pulumi.Input<string>;
    key: pulumi.Input<string>;
    versionId: pulumi.Input<string>;
}

export interface GetFunctionStorageMount {
    bucket: string;
    mountPointName: string;
    prefix?: string;
    readOnly?: boolean;
}

export interface GetFunctionStorageMountArgs {
    bucket: pulumi.Input<string>;
    mountPointName: pulumi.Input<string>;
    prefix?: pulumi.Input<string>;
    readOnly?: pulumi.Input<boolean>;
}

export interface GetIamPolicyBinding {
    members: string[];
    role: string;
}

export interface GetIamPolicyBindingArgs {
    members: pulumi.Input<pulumi.Input<string>[]>;
    role: pulumi.Input<string>;
}

export interface GetMdbClickhouseClusterAccess {
    dataLens?: boolean;
    dataTransfer?: boolean;
    metrika?: boolean;
    serverless?: boolean;
    webSql?: boolean;
    yandexQuery?: boolean;
}

export interface GetMdbClickhouseClusterAccessArgs {
    dataLens?: pulumi.Input<boolean>;
    dataTransfer?: pulumi.Input<boolean>;
    metrika?: pulumi.Input<boolean>;
    serverless?: pulumi.Input<boolean>;
    webSql?: pulumi.Input<boolean>;
    yandexQuery?: pulumi.Input<boolean>;
}

export interface GetMdbClickhouseClusterBackupWindowStart {
    hours?: number;
    minutes?: number;
}

export interface GetMdbClickhouseClusterBackupWindowStartArgs {
    hours?: pulumi.Input<number>;
    minutes?: pulumi.Input<number>;
}

export interface GetMdbClickhouseClusterClickhouse {
    config?: inputs.GetMdbClickhouseClusterClickhouseConfig;
    resources?: inputs.GetMdbClickhouseClusterClickhouseResources;
}

export interface GetMdbClickhouseClusterClickhouseArgs {
    config?: pulumi.Input<inputs.GetMdbClickhouseClusterClickhouseConfigArgs>;
    resources?: pulumi.Input<inputs.GetMdbClickhouseClusterClickhouseResourcesArgs>;
}

export interface GetMdbClickhouseClusterClickhouseConfig {
    backgroundFetchesPoolSize?: number;
    backgroundMergesMutationsConcurrencyRatio?: number;
    backgroundMessageBrokerSchedulePoolSize?: number;
    backgroundPoolSize?: number;
    backgroundSchedulePoolSize?: number;
    compressions?: inputs.GetMdbClickhouseClusterClickhouseConfigCompression[];
    defaultDatabase?: string;
    dictionariesLazyLoad?: boolean;
    geobaseEnabled?: boolean;
    geobaseUri?: string;
    graphiteRollups?: inputs.GetMdbClickhouseClusterClickhouseConfigGraphiteRollup[];
    kafka?: inputs.GetMdbClickhouseClusterClickhouseConfigKafka;
    kafkaTopics?: inputs.GetMdbClickhouseClusterClickhouseConfigKafkaTopic[];
    keepAliveTimeout?: number;
    logLevel?: string;
    markCacheSize?: number;
    maxConcurrentQueries?: number;
    maxConnections?: number;
    maxPartitionSizeToDrop?: number;
    maxTableSizeToDrop?: number;
    mergeTree?: inputs.GetMdbClickhouseClusterClickhouseConfigMergeTree;
    metricLogEnabled?: boolean;
    metricLogRetentionSize?: number;
    metricLogRetentionTime?: number;
    partLogRetentionSize?: number;
    partLogRetentionTime?: number;
    queryCache?: inputs.GetMdbClickhouseClusterClickhouseConfigQueryCache;
    queryLogRetentionSize?: number;
    queryLogRetentionTime?: number;
    queryMaskingRules?: inputs.GetMdbClickhouseClusterClickhouseConfigQueryMaskingRule[];
    queryThreadLogEnabled?: boolean;
    queryThreadLogRetentionSize?: number;
    queryThreadLogRetentionTime?: number;
    rabbitmq?: inputs.GetMdbClickhouseClusterClickhouseConfigRabbitmq;
    textLogEnabled?: boolean;
    textLogLevel?: string;
    textLogRetentionSize?: number;
    textLogRetentionTime?: number;
    timezone?: string;
    totalMemoryProfilerStep?: number;
    traceLogEnabled?: boolean;
    traceLogRetentionSize?: number;
    traceLogRetentionTime?: number;
    uncompressedCacheSize?: number;
}

export interface GetMdbClickhouseClusterClickhouseConfigArgs {
    backgroundFetchesPoolSize?: pulumi.Input<number>;
    backgroundMergesMutationsConcurrencyRatio?: pulumi.Input<number>;
    backgroundMessageBrokerSchedulePoolSize?: pulumi.Input<number>;
    backgroundPoolSize?: pulumi.Input<number>;
    backgroundSchedulePoolSize?: pulumi.Input<number>;
    compressions?: pulumi.Input<pulumi.Input<inputs.GetMdbClickhouseClusterClickhouseConfigCompressionArgs>[]>;
    defaultDatabase?: pulumi.Input<string>;
    dictionariesLazyLoad?: pulumi.Input<boolean>;
    geobaseEnabled?: pulumi.Input<boolean>;
    geobaseUri?: pulumi.Input<string>;
    graphiteRollups?: pulumi.Input<pulumi.Input<inputs.GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArgs>[]>;
    kafka?: pulumi.Input<inputs.GetMdbClickhouseClusterClickhouseConfigKafkaArgs>;
    kafkaTopics?: pulumi.Input<pulumi.Input<inputs.GetMdbClickhouseClusterClickhouseConfigKafkaTopicArgs>[]>;
    keepAliveTimeout?: pulumi.Input<number>;
    logLevel?: pulumi.Input<string>;
    markCacheSize?: pulumi.Input<number>;
    maxConcurrentQueries?: pulumi.Input<number>;
    maxConnections?: pulumi.Input<number>;
    maxPartitionSizeToDrop?: pulumi.Input<number>;
    maxTableSizeToDrop?: pulumi.Input<number>;
    mergeTree?: pulumi.Input<inputs.GetMdbClickhouseClusterClickhouseConfigMergeTreeArgs>;
    metricLogEnabled?: pulumi.Input<boolean>;
    metricLogRetentionSize?: pulumi.Input<number>;
    metricLogRetentionTime?: pulumi.Input<number>;
    partLogRetentionSize?: pulumi.Input<number>;
    partLogRetentionTime?: pulumi.Input<number>;
    queryCache?: pulumi.Input<inputs.GetMdbClickhouseClusterClickhouseConfigQueryCacheArgs>;
    queryLogRetentionSize?: pulumi.Input<number>;
    queryLogRetentionTime?: pulumi.Input<number>;
    queryMaskingRules?: pulumi.Input<pulumi.Input<inputs.GetMdbClickhouseClusterClickhouseConfigQueryMaskingRuleArgs>[]>;
    queryThreadLogEnabled?: pulumi.Input<boolean>;
    queryThreadLogRetentionSize?: pulumi.Input<number>;
    queryThreadLogRetentionTime?: pulumi.Input<number>;
    rabbitmq?: pulumi.Input<inputs.GetMdbClickhouseClusterClickhouseConfigRabbitmqArgs>;
    textLogEnabled?: pulumi.Input<boolean>;
    textLogLevel?: pulumi.Input<string>;
    textLogRetentionSize?: pulumi.Input<number>;
    textLogRetentionTime?: pulumi.Input<number>;
    timezone?: pulumi.Input<string>;
    totalMemoryProfilerStep?: pulumi.Input<number>;
    traceLogEnabled?: pulumi.Input<boolean>;
    traceLogRetentionSize?: pulumi.Input<number>;
    traceLogRetentionTime?: pulumi.Input<number>;
    uncompressedCacheSize?: pulumi.Input<number>;
}

export interface GetMdbClickhouseClusterClickhouseConfigCompression {
    level?: number;
    method?: string;
    minPartSize?: number;
    minPartSizeRatio?: number;
}

export interface GetMdbClickhouseClusterClickhouseConfigCompressionArgs {
    level?: pulumi.Input<number>;
    method?: pulumi.Input<string>;
    minPartSize?: pulumi.Input<number>;
    minPartSizeRatio?: pulumi.Input<number>;
}

export interface GetMdbClickhouseClusterClickhouseConfigGraphiteRollup {
    name?: string;
    pathColumnName?: string;
    patterns?: inputs.GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPattern[];
    timeColumnName?: string;
    valueColumnName?: string;
    versionColumnName?: string;
}

export interface GetMdbClickhouseClusterClickhouseConfigGraphiteRollupArgs {
    name?: pulumi.Input<string>;
    pathColumnName?: pulumi.Input<string>;
    patterns?: pulumi.Input<pulumi.Input<inputs.GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArgs>[]>;
    timeColumnName?: pulumi.Input<string>;
    valueColumnName?: pulumi.Input<string>;
    versionColumnName?: pulumi.Input<string>;
}

export interface GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPattern {
    function?: string;
    regexp?: string;
    retentions?: inputs.GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention[];
}

export interface GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternArgs {
    function?: pulumi.Input<string>;
    regexp?: pulumi.Input<string>;
    retentions?: pulumi.Input<pulumi.Input<inputs.GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArgs>[]>;
}

export interface GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention {
    age?: number;
    precision?: number;
}

export interface GetMdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetentionArgs {
    age?: pulumi.Input<number>;
    precision?: pulumi.Input<number>;
}

export interface GetMdbClickhouseClusterClickhouseConfigKafka {
    autoOffsetReset?: string;
    debug?: string;
    enableSslCertificateVerification?: boolean;
    maxPollIntervalMs?: number;
    saslMechanism?: string;
    saslPassword?: string;
    saslUsername?: string;
    securityProtocol?: string;
    sessionTimeoutMs?: number;
}

export interface GetMdbClickhouseClusterClickhouseConfigKafkaArgs {
    autoOffsetReset?: pulumi.Input<string>;
    debug?: pulumi.Input<string>;
    enableSslCertificateVerification?: pulumi.Input<boolean>;
    maxPollIntervalMs?: pulumi.Input<number>;
    saslMechanism?: pulumi.Input<string>;
    saslPassword?: pulumi.Input<string>;
    saslUsername?: pulumi.Input<string>;
    securityProtocol?: pulumi.Input<string>;
    sessionTimeoutMs?: pulumi.Input<number>;
}

export interface GetMdbClickhouseClusterClickhouseConfigKafkaTopic {
    name?: string;
    settings?: inputs.GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettings;
}

export interface GetMdbClickhouseClusterClickhouseConfigKafkaTopicArgs {
    name?: pulumi.Input<string>;
    settings?: pulumi.Input<inputs.GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsArgs>;
}

export interface GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettings {
    autoOffsetReset?: string;
    debug?: string;
    enableSslCertificateVerification?: boolean;
    maxPollIntervalMs?: number;
    saslMechanism?: string;
    saslPassword?: string;
    saslUsername?: string;
    securityProtocol?: string;
    sessionTimeoutMs?: number;
}

export interface GetMdbClickhouseClusterClickhouseConfigKafkaTopicSettingsArgs {
    autoOffsetReset?: pulumi.Input<string>;
    debug?: pulumi.Input<string>;
    enableSslCertificateVerification?: pulumi.Input<boolean>;
    maxPollIntervalMs?: pulumi.Input<number>;
    saslMechanism?: pulumi.Input<string>;
    saslPassword?: pulumi.Input<string>;
    saslUsername?: pulumi.Input<string>;
    securityProtocol?: pulumi.Input<string>;
    sessionTimeoutMs?: pulumi.Input<number>;
}

export interface GetMdbClickhouseClusterClickhouseConfigMergeTree {
    checkSampleColumnIsCorrect?: boolean;
    cleanupDelayPeriod?: number;
    maxAvgPartSizeForTooManyParts?: number;
    maxBytesToMergeAtMinSpaceInPool?: number;
    maxCleanupDelayPeriod?: number;
    maxMergeSelectingSleepMs?: number;
    maxNumberOfMergesWithTtlInPool?: number;
    maxPartsInTotal?: number;
    maxReplicatedMergesInQueue?: number;
    mergeMaxBlockSize?: number;
    mergeSelectingSleepMs?: number;
    mergeWithRecompressionTtlTimeout?: number;
    mergeWithTtlTimeout?: number;
    minAgeToForceMergeOnPartitionOnly?: boolean;
    minAgeToForceMergeSeconds?: number;
    minBytesForWidePart?: number;
    minRowsForWidePart?: number;
    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: number;
    partsToDelayInsert?: number;
    partsToThrowInsert?: number;
    replicatedDeduplicationWindow?: number;
    replicatedDeduplicationWindowSeconds?: number;
    ttlOnlyDropParts?: boolean;
}

export interface GetMdbClickhouseClusterClickhouseConfigMergeTreeArgs {
    checkSampleColumnIsCorrect?: pulumi.Input<boolean>;
    cleanupDelayPeriod?: pulumi.Input<number>;
    maxAvgPartSizeForTooManyParts?: pulumi.Input<number>;
    maxBytesToMergeAtMinSpaceInPool?: pulumi.Input<number>;
    maxCleanupDelayPeriod?: pulumi.Input<number>;
    maxMergeSelectingSleepMs?: pulumi.Input<number>;
    maxNumberOfMergesWithTtlInPool?: pulumi.Input<number>;
    maxPartsInTotal?: pulumi.Input<number>;
    maxReplicatedMergesInQueue?: pulumi.Input<number>;
    mergeMaxBlockSize?: pulumi.Input<number>;
    mergeSelectingSleepMs?: pulumi.Input<number>;
    mergeWithRecompressionTtlTimeout?: pulumi.Input<number>;
    mergeWithTtlTimeout?: pulumi.Input<number>;
    minAgeToForceMergeOnPartitionOnly?: pulumi.Input<boolean>;
    minAgeToForceMergeSeconds?: pulumi.Input<number>;
    minBytesForWidePart?: pulumi.Input<number>;
    minRowsForWidePart?: pulumi.Input<number>;
    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: pulumi.Input<number>;
    partsToDelayInsert?: pulumi.Input<number>;
    partsToThrowInsert?: pulumi.Input<number>;
    replicatedDeduplicationWindow?: pulumi.Input<number>;
    replicatedDeduplicationWindowSeconds?: pulumi.Input<number>;
    ttlOnlyDropParts?: pulumi.Input<boolean>;
}

export interface GetMdbClickhouseClusterClickhouseConfigQueryCache {
    maxEntries?: number;
    maxEntrySizeInBytes?: number;
    maxEntrySizeInRows?: number;
    maxSizeInBytes?: number;
}

export interface GetMdbClickhouseClusterClickhouseConfigQueryCacheArgs {
    maxEntries?: pulumi.Input<number>;
    maxEntrySizeInBytes?: pulumi.Input<number>;
    maxEntrySizeInRows?: pulumi.Input<number>;
    maxSizeInBytes?: pulumi.Input<number>;
}

export interface GetMdbClickhouseClusterClickhouseConfigQueryMaskingRule {
    name?: string;
    regexp?: string;
    replace?: string;
}

export interface GetMdbClickhouseClusterClickhouseConfigQueryMaskingRuleArgs {
    name?: pulumi.Input<string>;
    regexp?: pulumi.Input<string>;
    replace?: pulumi.Input<string>;
}

export interface GetMdbClickhouseClusterClickhouseConfigRabbitmq {
    password?: string;
    username?: string;
    vhost?: string;
}

export interface GetMdbClickhouseClusterClickhouseConfigRabbitmqArgs {
    password?: pulumi.Input<string>;
    username?: pulumi.Input<string>;
    vhost?: pulumi.Input<string>;
}

export interface GetMdbClickhouseClusterClickhouseResources {
    diskSize?: number;
    diskTypeId?: string;
    resourcePresetId?: string;
}

export interface GetMdbClickhouseClusterClickhouseResourcesArgs {
    diskSize?: pulumi.Input<number>;
    diskTypeId?: pulumi.Input<string>;
    resourcePresetId?: pulumi.Input<string>;
}

export interface GetMdbClickhouseClusterCloudStorage {
    dataCacheEnabled?: boolean;
    dataCacheMaxSize?: number;
    enabled?: boolean;
    moveFactor?: number;
    preferNotToMerge?: boolean;
}

export interface GetMdbClickhouseClusterCloudStorageArgs {
    dataCacheEnabled?: pulumi.Input<boolean>;
    dataCacheMaxSize?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
    moveFactor?: pulumi.Input<number>;
    preferNotToMerge?: pulumi.Input<boolean>;
}

export interface GetMdbClickhouseClusterDatabase {
    name?: string;
}

export interface GetMdbClickhouseClusterDatabaseArgs {
    name?: pulumi.Input<string>;
}

export interface GetMdbClickhouseClusterFormatSchema {
    name?: string;
    type?: string;
    uri?: string;
}

export interface GetMdbClickhouseClusterFormatSchemaArgs {
    name?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    uri?: pulumi.Input<string>;
}

export interface GetMdbClickhouseClusterHost {
    assignPublicIp?: boolean;
    fqdn?: string;
    shardName?: string;
    subnetId?: string;
    type?: string;
    zone?: string;
}

export interface GetMdbClickhouseClusterHostArgs {
    assignPublicIp?: pulumi.Input<boolean>;
    fqdn?: pulumi.Input<string>;
    shardName?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    zone?: pulumi.Input<string>;
}

export interface GetMdbClickhouseClusterMaintenanceWindow {
    day?: string;
    hour?: number;
    type?: string;
}

export interface GetMdbClickhouseClusterMaintenanceWindowArgs {
    day?: pulumi.Input<string>;
    hour?: pulumi.Input<number>;
    type?: pulumi.Input<string>;
}

export interface GetMdbClickhouseClusterMlModel {
    name?: string;
    type?: string;
    uri?: string;
}

export interface GetMdbClickhouseClusterMlModelArgs {
    name?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    uri?: pulumi.Input<string>;
}

export interface GetMdbClickhouseClusterShard {
    name?: string;
    resources?: inputs.GetMdbClickhouseClusterShardResources;
    weight?: number;
}

export interface GetMdbClickhouseClusterShardArgs {
    name?: pulumi.Input<string>;
    resources?: pulumi.Input<inputs.GetMdbClickhouseClusterShardResourcesArgs>;
    weight?: pulumi.Input<number>;
}

export interface GetMdbClickhouseClusterShardGroup {
    description?: string;
    name?: string;
    shardNames?: string[];
}

export interface GetMdbClickhouseClusterShardGroupArgs {
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    shardNames?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMdbClickhouseClusterShardResources {
    diskSize?: number;
    diskTypeId?: string;
    resourcePresetId?: string;
}

export interface GetMdbClickhouseClusterShardResourcesArgs {
    diskSize?: pulumi.Input<number>;
    diskTypeId?: pulumi.Input<string>;
    resourcePresetId?: pulumi.Input<string>;
}

export interface GetMdbClickhouseClusterUser {
    name?: string;
    password?: string;
    permissions?: inputs.GetMdbClickhouseClusterUserPermission[];
    quotas?: inputs.GetMdbClickhouseClusterUserQuota[];
    settings?: inputs.GetMdbClickhouseClusterUserSettings;
}

export interface GetMdbClickhouseClusterUserArgs {
    name?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    permissions?: pulumi.Input<pulumi.Input<inputs.GetMdbClickhouseClusterUserPermissionArgs>[]>;
    quotas?: pulumi.Input<pulumi.Input<inputs.GetMdbClickhouseClusterUserQuotaArgs>[]>;
    settings?: pulumi.Input<inputs.GetMdbClickhouseClusterUserSettingsArgs>;
}

export interface GetMdbClickhouseClusterUserPermission {
    databaseName?: string;
}

export interface GetMdbClickhouseClusterUserPermissionArgs {
    databaseName?: pulumi.Input<string>;
}

export interface GetMdbClickhouseClusterUserQuota {
    errors?: number;
    executionTime?: number;
    intervalDuration?: number;
    queries?: number;
    readRows?: number;
    resultRows?: number;
}

export interface GetMdbClickhouseClusterUserQuotaArgs {
    errors?: pulumi.Input<number>;
    executionTime?: pulumi.Input<number>;
    intervalDuration?: pulumi.Input<number>;
    queries?: pulumi.Input<number>;
    readRows?: pulumi.Input<number>;
    resultRows?: pulumi.Input<number>;
}

export interface GetMdbClickhouseClusterUserSettings {
    addHttpCorsHeader?: boolean;
    allowDdl?: boolean;
    allowIntrospectionFunctions?: boolean;
    allowSuspiciousLowCardinalityTypes?: boolean;
    asyncInsert?: boolean;
    asyncInsertBusyTimeout?: number;
    asyncInsertMaxDataSize?: number;
    asyncInsertStaleTimeout?: number;
    asyncInsertThreads?: number;
    cancelHttpReadonlyQueriesOnClientClose?: boolean;
    compile?: boolean;
    compileExpressions?: boolean;
    connectTimeout?: number;
    connectTimeoutWithFailover?: number;
    countDistinctImplementation?: string;
    distinctOverflowMode?: string;
    distributedAggregationMemoryEfficient?: boolean;
    distributedDdlTaskTimeout?: number;
    distributedProductMode?: string;
    emptyResultForAggregationByEmptySet?: boolean;
    enableHttpCompression?: boolean;
    fallbackToStaleReplicasForDistributedQueries?: boolean;
    flattenNested?: boolean;
    forceIndexByDate?: boolean;
    forcePrimaryKey?: boolean;
    groupByOverflowMode?: string;
    groupByTwoLevelThreshold?: number;
    groupByTwoLevelThresholdBytes?: number;
    hedgedConnectionTimeoutMs?: number;
    httpConnectionTimeout?: number;
    httpHeadersProgressInterval?: number;
    httpReceiveTimeout?: number;
    httpSendTimeout?: number;
    idleConnectionTimeout?: number;
    inputFormatDefaultsForOmittedFields?: boolean;
    inputFormatImportNestedJson?: boolean;
    inputFormatParallelParsing?: boolean;
    inputFormatValuesInterpretExpressions?: boolean;
    insertKeeperMaxRetries?: number;
    insertNullAsDefault?: boolean;
    insertQuorum?: number;
    insertQuorumTimeout?: number;
    joinOverflowMode?: string;
    joinUseNulls?: boolean;
    joinedSubqueryRequiresAlias?: boolean;
    loadBalancing?: string;
    localFilesystemReadMethod?: string;
    logQueryThreads?: boolean;
    lowCardinalityAllowInNativeFormat?: boolean;
    maxAstDepth?: number;
    maxAstElements?: number;
    maxBlockSize?: number;
    maxBytesBeforeExternalGroupBy?: number;
    maxBytesBeforeExternalSort?: number;
    maxBytesInDistinct?: number;
    maxBytesInJoin?: number;
    maxBytesInSet?: number;
    maxBytesToRead?: number;
    maxBytesToSort?: number;
    maxBytesToTransfer?: number;
    maxColumnsToRead?: number;
    maxConcurrentQueriesForUser?: number;
    maxExecutionTime?: number;
    maxExpandedAstElements?: number;
    maxFinalThreads?: number;
    maxHttpGetRedirects?: number;
    maxInsertBlockSize?: number;
    maxInsertThreads?: number;
    maxMemoryUsage?: number;
    maxMemoryUsageForUser?: number;
    maxNetworkBandwidth?: number;
    maxNetworkBandwidthForUser?: number;
    maxParserDepth?: number;
    maxQuerySize?: number;
    maxReadBufferSize?: number;
    maxReplicaDelayForDistributedQueries?: number;
    maxResultBytes?: number;
    maxResultRows?: number;
    maxRowsInDistinct?: number;
    maxRowsInJoin?: number;
    maxRowsInSet?: number;
    maxRowsToGroupBy?: number;
    maxRowsToRead?: number;
    maxRowsToSort?: number;
    maxRowsToTransfer?: number;
    maxTemporaryColumns?: number;
    maxTemporaryDataOnDiskSizeForQuery?: number;
    maxTemporaryDataOnDiskSizeForUser?: number;
    maxTemporaryNonConstColumns?: number;
    maxThreads?: number;
    memoryOvercommitRatioDenominator?: number;
    memoryOvercommitRatioDenominatorForUser?: number;
    memoryProfilerSampleProbability?: number;
    memoryProfilerStep?: number;
    memoryUsageOvercommitMaxWaitMicroseconds?: number;
    mergeTreeMaxBytesToUseCache?: number;
    mergeTreeMaxRowsToUseCache?: number;
    mergeTreeMinBytesForConcurrentRead?: number;
    mergeTreeMinRowsForConcurrentRead?: number;
    minBytesToUseDirectIo?: number;
    minCountToCompile?: number;
    minCountToCompileExpression?: number;
    minExecutionSpeed?: number;
    minExecutionSpeedBytes?: number;
    minInsertBlockSizeBytes?: number;
    minInsertBlockSizeRows?: number;
    outputFormatJsonQuote64bitIntegers?: boolean;
    outputFormatJsonQuoteDenormals?: boolean;
    preferLocalhostReplica?: boolean;
    priority?: number;
    quotaMode?: string;
    readOverflowMode?: string;
    readonly?: number;
    receiveTimeout?: number;
    remoteFilesystemReadMethod?: string;
    replicationAlterPartitionsSync?: number;
    resultOverflowMode?: string;
    selectSequentialConsistency?: boolean;
    sendProgressInHttpHeaders?: boolean;
    sendTimeout?: number;
    setOverflowMode?: string;
    skipUnavailableShards?: boolean;
    sortOverflowMode?: string;
    timeoutBeforeCheckingExecutionSpeed?: number;
    timeoutOverflowMode?: string;
    transferOverflowMode?: string;
    transformNullIn?: boolean;
    useHedgedRequests?: boolean;
    useUncompressedCache?: boolean;
    waitForAsyncInsert?: boolean;
    waitForAsyncInsertTimeout?: number;
}

export interface GetMdbClickhouseClusterUserSettingsArgs {
    addHttpCorsHeader?: pulumi.Input<boolean>;
    allowDdl?: pulumi.Input<boolean>;
    allowIntrospectionFunctions?: pulumi.Input<boolean>;
    allowSuspiciousLowCardinalityTypes?: pulumi.Input<boolean>;
    asyncInsert?: pulumi.Input<boolean>;
    asyncInsertBusyTimeout?: pulumi.Input<number>;
    asyncInsertMaxDataSize?: pulumi.Input<number>;
    asyncInsertStaleTimeout?: pulumi.Input<number>;
    asyncInsertThreads?: pulumi.Input<number>;
    cancelHttpReadonlyQueriesOnClientClose?: pulumi.Input<boolean>;
    compile?: pulumi.Input<boolean>;
    compileExpressions?: pulumi.Input<boolean>;
    connectTimeout?: pulumi.Input<number>;
    connectTimeoutWithFailover?: pulumi.Input<number>;
    countDistinctImplementation?: pulumi.Input<string>;
    distinctOverflowMode?: pulumi.Input<string>;
    distributedAggregationMemoryEfficient?: pulumi.Input<boolean>;
    distributedDdlTaskTimeout?: pulumi.Input<number>;
    distributedProductMode?: pulumi.Input<string>;
    emptyResultForAggregationByEmptySet?: pulumi.Input<boolean>;
    enableHttpCompression?: pulumi.Input<boolean>;
    fallbackToStaleReplicasForDistributedQueries?: pulumi.Input<boolean>;
    flattenNested?: pulumi.Input<boolean>;
    forceIndexByDate?: pulumi.Input<boolean>;
    forcePrimaryKey?: pulumi.Input<boolean>;
    groupByOverflowMode?: pulumi.Input<string>;
    groupByTwoLevelThreshold?: pulumi.Input<number>;
    groupByTwoLevelThresholdBytes?: pulumi.Input<number>;
    hedgedConnectionTimeoutMs?: pulumi.Input<number>;
    httpConnectionTimeout?: pulumi.Input<number>;
    httpHeadersProgressInterval?: pulumi.Input<number>;
    httpReceiveTimeout?: pulumi.Input<number>;
    httpSendTimeout?: pulumi.Input<number>;
    idleConnectionTimeout?: pulumi.Input<number>;
    inputFormatDefaultsForOmittedFields?: pulumi.Input<boolean>;
    inputFormatImportNestedJson?: pulumi.Input<boolean>;
    inputFormatParallelParsing?: pulumi.Input<boolean>;
    inputFormatValuesInterpretExpressions?: pulumi.Input<boolean>;
    insertKeeperMaxRetries?: pulumi.Input<number>;
    insertNullAsDefault?: pulumi.Input<boolean>;
    insertQuorum?: pulumi.Input<number>;
    insertQuorumTimeout?: pulumi.Input<number>;
    joinOverflowMode?: pulumi.Input<string>;
    joinUseNulls?: pulumi.Input<boolean>;
    joinedSubqueryRequiresAlias?: pulumi.Input<boolean>;
    loadBalancing?: pulumi.Input<string>;
    localFilesystemReadMethod?: pulumi.Input<string>;
    logQueryThreads?: pulumi.Input<boolean>;
    lowCardinalityAllowInNativeFormat?: pulumi.Input<boolean>;
    maxAstDepth?: pulumi.Input<number>;
    maxAstElements?: pulumi.Input<number>;
    maxBlockSize?: pulumi.Input<number>;
    maxBytesBeforeExternalGroupBy?: pulumi.Input<number>;
    maxBytesBeforeExternalSort?: pulumi.Input<number>;
    maxBytesInDistinct?: pulumi.Input<number>;
    maxBytesInJoin?: pulumi.Input<number>;
    maxBytesInSet?: pulumi.Input<number>;
    maxBytesToRead?: pulumi.Input<number>;
    maxBytesToSort?: pulumi.Input<number>;
    maxBytesToTransfer?: pulumi.Input<number>;
    maxColumnsToRead?: pulumi.Input<number>;
    maxConcurrentQueriesForUser?: pulumi.Input<number>;
    maxExecutionTime?: pulumi.Input<number>;
    maxExpandedAstElements?: pulumi.Input<number>;
    maxFinalThreads?: pulumi.Input<number>;
    maxHttpGetRedirects?: pulumi.Input<number>;
    maxInsertBlockSize?: pulumi.Input<number>;
    maxInsertThreads?: pulumi.Input<number>;
    maxMemoryUsage?: pulumi.Input<number>;
    maxMemoryUsageForUser?: pulumi.Input<number>;
    maxNetworkBandwidth?: pulumi.Input<number>;
    maxNetworkBandwidthForUser?: pulumi.Input<number>;
    maxParserDepth?: pulumi.Input<number>;
    maxQuerySize?: pulumi.Input<number>;
    maxReadBufferSize?: pulumi.Input<number>;
    maxReplicaDelayForDistributedQueries?: pulumi.Input<number>;
    maxResultBytes?: pulumi.Input<number>;
    maxResultRows?: pulumi.Input<number>;
    maxRowsInDistinct?: pulumi.Input<number>;
    maxRowsInJoin?: pulumi.Input<number>;
    maxRowsInSet?: pulumi.Input<number>;
    maxRowsToGroupBy?: pulumi.Input<number>;
    maxRowsToRead?: pulumi.Input<number>;
    maxRowsToSort?: pulumi.Input<number>;
    maxRowsToTransfer?: pulumi.Input<number>;
    maxTemporaryColumns?: pulumi.Input<number>;
    maxTemporaryDataOnDiskSizeForQuery?: pulumi.Input<number>;
    maxTemporaryDataOnDiskSizeForUser?: pulumi.Input<number>;
    maxTemporaryNonConstColumns?: pulumi.Input<number>;
    maxThreads?: pulumi.Input<number>;
    memoryOvercommitRatioDenominator?: pulumi.Input<number>;
    memoryOvercommitRatioDenominatorForUser?: pulumi.Input<number>;
    memoryProfilerSampleProbability?: pulumi.Input<number>;
    memoryProfilerStep?: pulumi.Input<number>;
    memoryUsageOvercommitMaxWaitMicroseconds?: pulumi.Input<number>;
    mergeTreeMaxBytesToUseCache?: pulumi.Input<number>;
    mergeTreeMaxRowsToUseCache?: pulumi.Input<number>;
    mergeTreeMinBytesForConcurrentRead?: pulumi.Input<number>;
    mergeTreeMinRowsForConcurrentRead?: pulumi.Input<number>;
    minBytesToUseDirectIo?: pulumi.Input<number>;
    minCountToCompile?: pulumi.Input<number>;
    minCountToCompileExpression?: pulumi.Input<number>;
    minExecutionSpeed?: pulumi.Input<number>;
    minExecutionSpeedBytes?: pulumi.Input<number>;
    minInsertBlockSizeBytes?: pulumi.Input<number>;
    minInsertBlockSizeRows?: pulumi.Input<number>;
    outputFormatJsonQuote64bitIntegers?: pulumi.Input<boolean>;
    outputFormatJsonQuoteDenormals?: pulumi.Input<boolean>;
    preferLocalhostReplica?: pulumi.Input<boolean>;
    priority?: pulumi.Input<number>;
    quotaMode?: pulumi.Input<string>;
    readOverflowMode?: pulumi.Input<string>;
    readonly?: pulumi.Input<number>;
    receiveTimeout?: pulumi.Input<number>;
    remoteFilesystemReadMethod?: pulumi.Input<string>;
    replicationAlterPartitionsSync?: pulumi.Input<number>;
    resultOverflowMode?: pulumi.Input<string>;
    selectSequentialConsistency?: pulumi.Input<boolean>;
    sendProgressInHttpHeaders?: pulumi.Input<boolean>;
    sendTimeout?: pulumi.Input<number>;
    setOverflowMode?: pulumi.Input<string>;
    skipUnavailableShards?: pulumi.Input<boolean>;
    sortOverflowMode?: pulumi.Input<string>;
    timeoutBeforeCheckingExecutionSpeed?: pulumi.Input<number>;
    timeoutOverflowMode?: pulumi.Input<string>;
    transferOverflowMode?: pulumi.Input<string>;
    transformNullIn?: pulumi.Input<boolean>;
    useHedgedRequests?: pulumi.Input<boolean>;
    useUncompressedCache?: pulumi.Input<boolean>;
    waitForAsyncInsert?: pulumi.Input<boolean>;
    waitForAsyncInsertTimeout?: pulumi.Input<number>;
}

export interface GetMdbClickhouseClusterZookeeper {
    resources?: inputs.GetMdbClickhouseClusterZookeeperResources;
}

export interface GetMdbClickhouseClusterZookeeperArgs {
    resources?: pulumi.Input<inputs.GetMdbClickhouseClusterZookeeperResourcesArgs>;
}

export interface GetMdbClickhouseClusterZookeeperResources {
    diskSize?: number;
    diskTypeId?: string;
    resourcePresetId?: string;
}

export interface GetMdbClickhouseClusterZookeeperResourcesArgs {
    diskSize?: pulumi.Input<number>;
    diskTypeId?: pulumi.Input<string>;
    resourcePresetId?: pulumi.Input<string>;
}

export interface GetMdbGreenplumClusterPoolerConfig {
    poolClientIdleTimeout?: number;
    poolSize?: number;
    poolingMode?: string;
}

export interface GetMdbGreenplumClusterPoolerConfigArgs {
    poolClientIdleTimeout?: pulumi.Input<number>;
    poolSize?: pulumi.Input<number>;
    poolingMode?: pulumi.Input<string>;
}

export interface GetMdbGreenplumClusterPxfConfig {
    connectionTimeout?: number;
    maxThreads?: number;
    poolAllowCoreThreadTimeout?: boolean;
    poolCoreSize?: number;
    poolMaxSize?: number;
    poolQueueCapacity?: number;
    uploadTimeout?: number;
    xms?: number;
    xmx?: number;
}

export interface GetMdbGreenplumClusterPxfConfigArgs {
    connectionTimeout?: pulumi.Input<number>;
    maxThreads?: pulumi.Input<number>;
    poolAllowCoreThreadTimeout?: pulumi.Input<boolean>;
    poolCoreSize?: pulumi.Input<number>;
    poolMaxSize?: pulumi.Input<number>;
    poolQueueCapacity?: pulumi.Input<number>;
    uploadTimeout?: pulumi.Input<number>;
    xms?: pulumi.Input<number>;
    xmx?: pulumi.Input<number>;
}

export interface GetMdbKafkaClusterConfig {
    access?: inputs.GetMdbKafkaClusterConfigAccess;
    assignPublicIp?: boolean;
    brokersCount?: number;
    diskSizeAutoscaling?: inputs.GetMdbKafkaClusterConfigDiskSizeAutoscaling;
    kafka: inputs.GetMdbKafkaClusterConfigKafka;
    schemaRegistry?: boolean;
    /**
     * @deprecated The 'unmanaged_topics' field has been deprecated, because feature enabled permanently and can't be disabled.
     */
    unmanagedTopics?: boolean;
    version: string;
    zones: string[];
    zookeeper?: inputs.GetMdbKafkaClusterConfigZookeeper;
}

export interface GetMdbKafkaClusterConfigArgs {
    access?: pulumi.Input<inputs.GetMdbKafkaClusterConfigAccessArgs>;
    assignPublicIp?: pulumi.Input<boolean>;
    brokersCount?: pulumi.Input<number>;
    diskSizeAutoscaling?: pulumi.Input<inputs.GetMdbKafkaClusterConfigDiskSizeAutoscalingArgs>;
    kafka: pulumi.Input<inputs.GetMdbKafkaClusterConfigKafkaArgs>;
    schemaRegistry?: pulumi.Input<boolean>;
    /**
     * @deprecated The 'unmanaged_topics' field has been deprecated, because feature enabled permanently and can't be disabled.
     */
    unmanagedTopics?: pulumi.Input<boolean>;
    version: pulumi.Input<string>;
    zones: pulumi.Input<pulumi.Input<string>[]>;
    zookeeper?: pulumi.Input<inputs.GetMdbKafkaClusterConfigZookeeperArgs>;
}

export interface GetMdbKafkaClusterConfigAccess {
    dataTransfer?: boolean;
}

export interface GetMdbKafkaClusterConfigAccessArgs {
    dataTransfer?: pulumi.Input<boolean>;
}

export interface GetMdbKafkaClusterConfigDiskSizeAutoscaling {
    diskSizeLimit: number;
    emergencyUsageThreshold?: number;
    plannedUsageThreshold?: number;
}

export interface GetMdbKafkaClusterConfigDiskSizeAutoscalingArgs {
    diskSizeLimit: pulumi.Input<number>;
    emergencyUsageThreshold?: pulumi.Input<number>;
    plannedUsageThreshold?: pulumi.Input<number>;
}

export interface GetMdbKafkaClusterConfigKafka {
    kafkaConfig?: inputs.GetMdbKafkaClusterConfigKafkaKafkaConfig;
    resources: inputs.GetMdbKafkaClusterConfigKafkaResources;
}

export interface GetMdbKafkaClusterConfigKafkaArgs {
    kafkaConfig?: pulumi.Input<inputs.GetMdbKafkaClusterConfigKafkaKafkaConfigArgs>;
    resources: pulumi.Input<inputs.GetMdbKafkaClusterConfigKafkaResourcesArgs>;
}

export interface GetMdbKafkaClusterConfigKafkaKafkaConfig {
    autoCreateTopicsEnable?: boolean;
    compressionType?: string;
    defaultReplicationFactor?: string;
    logFlushIntervalMessages?: string;
    logFlushIntervalMs?: string;
    logFlushSchedulerIntervalMs?: string;
    logPreallocate?: boolean;
    logRetentionBytes?: string;
    logRetentionHours?: string;
    logRetentionMinutes?: string;
    logRetentionMs?: string;
    logSegmentBytes?: string;
    messageMaxBytes?: string;
    numPartitions?: string;
    offsetsRetentionMinutes?: string;
    replicaFetchMaxBytes?: string;
    saslEnabledMechanisms?: string[];
    socketReceiveBufferBytes?: string;
    socketSendBufferBytes?: string;
    sslCipherSuites?: string[];
}

export interface GetMdbKafkaClusterConfigKafkaKafkaConfigArgs {
    autoCreateTopicsEnable?: pulumi.Input<boolean>;
    compressionType?: pulumi.Input<string>;
    defaultReplicationFactor?: pulumi.Input<string>;
    logFlushIntervalMessages?: pulumi.Input<string>;
    logFlushIntervalMs?: pulumi.Input<string>;
    logFlushSchedulerIntervalMs?: pulumi.Input<string>;
    logPreallocate?: pulumi.Input<boolean>;
    logRetentionBytes?: pulumi.Input<string>;
    logRetentionHours?: pulumi.Input<string>;
    logRetentionMinutes?: pulumi.Input<string>;
    logRetentionMs?: pulumi.Input<string>;
    logSegmentBytes?: pulumi.Input<string>;
    messageMaxBytes?: pulumi.Input<string>;
    numPartitions?: pulumi.Input<string>;
    offsetsRetentionMinutes?: pulumi.Input<string>;
    replicaFetchMaxBytes?: pulumi.Input<string>;
    saslEnabledMechanisms?: pulumi.Input<pulumi.Input<string>[]>;
    socketReceiveBufferBytes?: pulumi.Input<string>;
    socketSendBufferBytes?: pulumi.Input<string>;
    sslCipherSuites?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMdbKafkaClusterConfigKafkaResources {
    diskSize: number;
    diskTypeId: string;
    resourcePresetId: string;
}

export interface GetMdbKafkaClusterConfigKafkaResourcesArgs {
    diskSize: pulumi.Input<number>;
    diskTypeId: pulumi.Input<string>;
    resourcePresetId: pulumi.Input<string>;
}

export interface GetMdbKafkaClusterConfigZookeeper {
    resources?: inputs.GetMdbKafkaClusterConfigZookeeperResources;
}

export interface GetMdbKafkaClusterConfigZookeeperArgs {
    resources?: pulumi.Input<inputs.GetMdbKafkaClusterConfigZookeeperResourcesArgs>;
}

export interface GetMdbKafkaClusterConfigZookeeperResources {
    diskSize?: number;
    diskTypeId?: string;
    resourcePresetId?: string;
}

export interface GetMdbKafkaClusterConfigZookeeperResourcesArgs {
    diskSize?: pulumi.Input<number>;
    diskTypeId?: pulumi.Input<string>;
    resourcePresetId?: pulumi.Input<string>;
}

export interface GetMdbKafkaClusterTopic {
    name: string;
    partitions: number;
    replicationFactor: number;
    topicConfig?: inputs.GetMdbKafkaClusterTopicTopicConfig;
}

export interface GetMdbKafkaClusterTopicArgs {
    name: pulumi.Input<string>;
    partitions: pulumi.Input<number>;
    replicationFactor: pulumi.Input<number>;
    topicConfig?: pulumi.Input<inputs.GetMdbKafkaClusterTopicTopicConfigArgs>;
}

export interface GetMdbKafkaClusterTopicTopicConfig {
    cleanupPolicy?: string;
    compressionType?: string;
    deleteRetentionMs?: string;
    fileDeleteDelayMs?: string;
    flushMessages?: string;
    flushMs?: string;
    maxMessageBytes?: string;
    minCompactionLagMs?: string;
    minInsyncReplicas?: string;
    preallocate?: boolean;
    retentionBytes?: string;
    retentionMs?: string;
    segmentBytes?: string;
}

export interface GetMdbKafkaClusterTopicTopicConfigArgs {
    cleanupPolicy?: pulumi.Input<string>;
    compressionType?: pulumi.Input<string>;
    deleteRetentionMs?: pulumi.Input<string>;
    fileDeleteDelayMs?: pulumi.Input<string>;
    flushMessages?: pulumi.Input<string>;
    flushMs?: pulumi.Input<string>;
    maxMessageBytes?: pulumi.Input<string>;
    minCompactionLagMs?: pulumi.Input<string>;
    minInsyncReplicas?: pulumi.Input<string>;
    preallocate?: pulumi.Input<boolean>;
    retentionBytes?: pulumi.Input<string>;
    retentionMs?: pulumi.Input<string>;
    segmentBytes?: pulumi.Input<string>;
}

export interface GetMdbKafkaClusterUser {
    name: string;
    password: string;
    permissions?: inputs.GetMdbKafkaClusterUserPermission[];
}

export interface GetMdbKafkaClusterUserArgs {
    name: pulumi.Input<string>;
    password: pulumi.Input<string>;
    permissions?: pulumi.Input<pulumi.Input<inputs.GetMdbKafkaClusterUserPermissionArgs>[]>;
}

export interface GetMdbKafkaClusterUserPermission {
    allowHosts?: string[];
    role: string;
    topicName: string;
}

export interface GetMdbKafkaClusterUserPermissionArgs {
    allowHosts?: pulumi.Input<pulumi.Input<string>[]>;
    role: pulumi.Input<string>;
    topicName: pulumi.Input<string>;
}

export interface GetMdbMongodbClusterClusterConfig {
    access?: inputs.GetMdbMongodbClusterClusterConfigAccess;
    backupRetainPeriodDays?: number;
    backupWindowStart?: inputs.GetMdbMongodbClusterClusterConfigBackupWindowStart;
    featureCompatibilityVersion?: string;
    mongocfg?: inputs.GetMdbMongodbClusterClusterConfigMongocfg;
    mongod?: inputs.GetMdbMongodbClusterClusterConfigMongod;
    mongos?: inputs.GetMdbMongodbClusterClusterConfigMongos;
    performanceDiagnostics?: inputs.GetMdbMongodbClusterClusterConfigPerformanceDiagnostics;
    version?: string;
}

export interface GetMdbMongodbClusterClusterConfigArgs {
    access?: pulumi.Input<inputs.GetMdbMongodbClusterClusterConfigAccessArgs>;
    backupRetainPeriodDays?: pulumi.Input<number>;
    backupWindowStart?: pulumi.Input<inputs.GetMdbMongodbClusterClusterConfigBackupWindowStartArgs>;
    featureCompatibilityVersion?: pulumi.Input<string>;
    mongocfg?: pulumi.Input<inputs.GetMdbMongodbClusterClusterConfigMongocfgArgs>;
    mongod?: pulumi.Input<inputs.GetMdbMongodbClusterClusterConfigMongodArgs>;
    mongos?: pulumi.Input<inputs.GetMdbMongodbClusterClusterConfigMongosArgs>;
    performanceDiagnostics?: pulumi.Input<inputs.GetMdbMongodbClusterClusterConfigPerformanceDiagnosticsArgs>;
    version?: pulumi.Input<string>;
}

export interface GetMdbMongodbClusterClusterConfigAccess {
    dataLens?: boolean;
    dataTransfer?: boolean;
}

export interface GetMdbMongodbClusterClusterConfigAccessArgs {
    dataLens?: pulumi.Input<boolean>;
    dataTransfer?: pulumi.Input<boolean>;
}

export interface GetMdbMongodbClusterClusterConfigBackupWindowStart {
    hours?: number;
    minutes?: number;
}

export interface GetMdbMongodbClusterClusterConfigBackupWindowStartArgs {
    hours?: pulumi.Input<number>;
    minutes?: pulumi.Input<number>;
}

export interface GetMdbMongodbClusterClusterConfigMongocfg {
    net?: inputs.GetMdbMongodbClusterClusterConfigMongocfgNet;
    operationProfiling?: inputs.GetMdbMongodbClusterClusterConfigMongocfgOperationProfiling;
    storage?: inputs.GetMdbMongodbClusterClusterConfigMongocfgStorage;
}

export interface GetMdbMongodbClusterClusterConfigMongocfgArgs {
    net?: pulumi.Input<inputs.GetMdbMongodbClusterClusterConfigMongocfgNetArgs>;
    operationProfiling?: pulumi.Input<inputs.GetMdbMongodbClusterClusterConfigMongocfgOperationProfilingArgs>;
    storage?: pulumi.Input<inputs.GetMdbMongodbClusterClusterConfigMongocfgStorageArgs>;
}

export interface GetMdbMongodbClusterClusterConfigMongocfgNet {
    maxIncomingConnections?: number;
}

export interface GetMdbMongodbClusterClusterConfigMongocfgNetArgs {
    maxIncomingConnections?: pulumi.Input<number>;
}

export interface GetMdbMongodbClusterClusterConfigMongocfgOperationProfiling {
    mode?: string;
    slowOpThreshold?: number;
}

export interface GetMdbMongodbClusterClusterConfigMongocfgOperationProfilingArgs {
    mode?: pulumi.Input<string>;
    slowOpThreshold?: pulumi.Input<number>;
}

export interface GetMdbMongodbClusterClusterConfigMongocfgStorage {
    wiredTiger?: inputs.GetMdbMongodbClusterClusterConfigMongocfgStorageWiredTiger;
}

export interface GetMdbMongodbClusterClusterConfigMongocfgStorageArgs {
    wiredTiger?: pulumi.Input<inputs.GetMdbMongodbClusterClusterConfigMongocfgStorageWiredTigerArgs>;
}

export interface GetMdbMongodbClusterClusterConfigMongocfgStorageWiredTiger {
    cacheSizeGb?: number;
}

export interface GetMdbMongodbClusterClusterConfigMongocfgStorageWiredTigerArgs {
    cacheSizeGb?: pulumi.Input<number>;
}

export interface GetMdbMongodbClusterClusterConfigMongod {
    auditLog?: inputs.GetMdbMongodbClusterClusterConfigMongodAuditLog;
    net?: inputs.GetMdbMongodbClusterClusterConfigMongodNet;
    operationProfiling?: inputs.GetMdbMongodbClusterClusterConfigMongodOperationProfiling;
    security?: inputs.GetMdbMongodbClusterClusterConfigMongodSecurity;
    setParameter?: inputs.GetMdbMongodbClusterClusterConfigMongodSetParameter;
    storage?: inputs.GetMdbMongodbClusterClusterConfigMongodStorage;
}

export interface GetMdbMongodbClusterClusterConfigMongodArgs {
    auditLog?: pulumi.Input<inputs.GetMdbMongodbClusterClusterConfigMongodAuditLogArgs>;
    net?: pulumi.Input<inputs.GetMdbMongodbClusterClusterConfigMongodNetArgs>;
    operationProfiling?: pulumi.Input<inputs.GetMdbMongodbClusterClusterConfigMongodOperationProfilingArgs>;
    security?: pulumi.Input<inputs.GetMdbMongodbClusterClusterConfigMongodSecurityArgs>;
    setParameter?: pulumi.Input<inputs.GetMdbMongodbClusterClusterConfigMongodSetParameterArgs>;
    storage?: pulumi.Input<inputs.GetMdbMongodbClusterClusterConfigMongodStorageArgs>;
}

export interface GetMdbMongodbClusterClusterConfigMongodAuditLog {
    filter?: string;
    runtimeConfiguration?: boolean;
}

export interface GetMdbMongodbClusterClusterConfigMongodAuditLogArgs {
    filter?: pulumi.Input<string>;
    runtimeConfiguration?: pulumi.Input<boolean>;
}

export interface GetMdbMongodbClusterClusterConfigMongodNet {
    compressors?: string[];
    maxIncomingConnections?: number;
}

export interface GetMdbMongodbClusterClusterConfigMongodNetArgs {
    compressors?: pulumi.Input<pulumi.Input<string>[]>;
    maxIncomingConnections?: pulumi.Input<number>;
}

export interface GetMdbMongodbClusterClusterConfigMongodOperationProfiling {
    mode?: string;
    slowOpSampleRate?: number;
    slowOpThreshold?: number;
}

export interface GetMdbMongodbClusterClusterConfigMongodOperationProfilingArgs {
    mode?: pulumi.Input<string>;
    slowOpSampleRate?: pulumi.Input<number>;
    slowOpThreshold?: pulumi.Input<number>;
}

export interface GetMdbMongodbClusterClusterConfigMongodSecurity {
    enableEncryption?: boolean;
    kmip?: inputs.GetMdbMongodbClusterClusterConfigMongodSecurityKmip;
}

export interface GetMdbMongodbClusterClusterConfigMongodSecurityArgs {
    enableEncryption?: pulumi.Input<boolean>;
    kmip?: pulumi.Input<inputs.GetMdbMongodbClusterClusterConfigMongodSecurityKmipArgs>;
}

export interface GetMdbMongodbClusterClusterConfigMongodSecurityKmip {
    clientCertificate?: string;
    keyIdentifier?: string;
    port?: number;
    serverCa?: string;
    serverName?: string;
}

export interface GetMdbMongodbClusterClusterConfigMongodSecurityKmipArgs {
    clientCertificate?: pulumi.Input<string>;
    keyIdentifier?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
    serverCa?: pulumi.Input<string>;
    serverName?: pulumi.Input<string>;
}

export interface GetMdbMongodbClusterClusterConfigMongodSetParameter {
    auditAuthorizationSuccess?: boolean;
    enableFlowControl?: boolean;
    minSnapshotHistoryWindowInSeconds?: number;
}

export interface GetMdbMongodbClusterClusterConfigMongodSetParameterArgs {
    auditAuthorizationSuccess?: pulumi.Input<boolean>;
    enableFlowControl?: pulumi.Input<boolean>;
    minSnapshotHistoryWindowInSeconds?: pulumi.Input<number>;
}

export interface GetMdbMongodbClusterClusterConfigMongodStorage {
    journal?: inputs.GetMdbMongodbClusterClusterConfigMongodStorageJournal;
    wiredTiger?: inputs.GetMdbMongodbClusterClusterConfigMongodStorageWiredTiger;
}

export interface GetMdbMongodbClusterClusterConfigMongodStorageArgs {
    journal?: pulumi.Input<inputs.GetMdbMongodbClusterClusterConfigMongodStorageJournalArgs>;
    wiredTiger?: pulumi.Input<inputs.GetMdbMongodbClusterClusterConfigMongodStorageWiredTigerArgs>;
}

export interface GetMdbMongodbClusterClusterConfigMongodStorageJournal {
    commitInterval?: number;
}

export interface GetMdbMongodbClusterClusterConfigMongodStorageJournalArgs {
    commitInterval?: pulumi.Input<number>;
}

export interface GetMdbMongodbClusterClusterConfigMongodStorageWiredTiger {
    blockCompressor?: string;
    cacheSizeGb?: number;
    prefixCompression?: boolean;
}

export interface GetMdbMongodbClusterClusterConfigMongodStorageWiredTigerArgs {
    blockCompressor?: pulumi.Input<string>;
    cacheSizeGb?: pulumi.Input<number>;
    prefixCompression?: pulumi.Input<boolean>;
}

export interface GetMdbMongodbClusterClusterConfigMongos {
    net?: inputs.GetMdbMongodbClusterClusterConfigMongosNet;
}

export interface GetMdbMongodbClusterClusterConfigMongosArgs {
    net?: pulumi.Input<inputs.GetMdbMongodbClusterClusterConfigMongosNetArgs>;
}

export interface GetMdbMongodbClusterClusterConfigMongosNet {
    compressors?: string[];
    maxIncomingConnections?: number;
}

export interface GetMdbMongodbClusterClusterConfigMongosNetArgs {
    compressors?: pulumi.Input<pulumi.Input<string>[]>;
    maxIncomingConnections?: pulumi.Input<number>;
}

export interface GetMdbMongodbClusterClusterConfigPerformanceDiagnostics {
    enabled?: boolean;
}

export interface GetMdbMongodbClusterClusterConfigPerformanceDiagnosticsArgs {
    enabled?: pulumi.Input<boolean>;
}

export interface GetMdbMongodbClusterDatabase {
    name?: string;
}

export interface GetMdbMongodbClusterDatabaseArgs {
    name?: pulumi.Input<string>;
}

export interface GetMdbMongodbClusterDiskSizeAutoscalingMongocfg {
    diskSizeLimit?: number;
    emergencyUsageThreshold?: number;
    plannedUsageThreshold?: number;
}

export interface GetMdbMongodbClusterDiskSizeAutoscalingMongocfgArgs {
    diskSizeLimit?: pulumi.Input<number>;
    emergencyUsageThreshold?: pulumi.Input<number>;
    plannedUsageThreshold?: pulumi.Input<number>;
}

export interface GetMdbMongodbClusterDiskSizeAutoscalingMongod {
    diskSizeLimit?: number;
    emergencyUsageThreshold?: number;
    plannedUsageThreshold?: number;
}

export interface GetMdbMongodbClusterDiskSizeAutoscalingMongodArgs {
    diskSizeLimit?: pulumi.Input<number>;
    emergencyUsageThreshold?: pulumi.Input<number>;
    plannedUsageThreshold?: pulumi.Input<number>;
}

export interface GetMdbMongodbClusterDiskSizeAutoscalingMongoinfra {
    diskSizeLimit?: number;
    emergencyUsageThreshold?: number;
    plannedUsageThreshold?: number;
}

export interface GetMdbMongodbClusterDiskSizeAutoscalingMongoinfraArgs {
    diskSizeLimit?: pulumi.Input<number>;
    emergencyUsageThreshold?: pulumi.Input<number>;
    plannedUsageThreshold?: pulumi.Input<number>;
}

export interface GetMdbMongodbClusterDiskSizeAutoscalingMongos {
    diskSizeLimit?: number;
    emergencyUsageThreshold?: number;
    plannedUsageThreshold?: number;
}

export interface GetMdbMongodbClusterDiskSizeAutoscalingMongosArgs {
    diskSizeLimit?: pulumi.Input<number>;
    emergencyUsageThreshold?: pulumi.Input<number>;
    plannedUsageThreshold?: pulumi.Input<number>;
}

export interface GetMdbMongodbClusterHost {
    assignPublicIp?: boolean;
    health?: string;
    hostParameters?: inputs.GetMdbMongodbClusterHostHostParameters;
    name?: string;
    role?: string;
    shardName?: string;
    subnetId?: string;
    type?: string;
    zoneId?: string;
}

export interface GetMdbMongodbClusterHostArgs {
    assignPublicIp?: pulumi.Input<boolean>;
    health?: pulumi.Input<string>;
    hostParameters?: pulumi.Input<inputs.GetMdbMongodbClusterHostHostParametersArgs>;
    name?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    shardName?: pulumi.Input<string>;
    subnetId?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    zoneId?: pulumi.Input<string>;
}

export interface GetMdbMongodbClusterHostHostParameters {
    hidden?: boolean;
    priority?: number;
    secondaryDelaySecs?: number;
    tags?: {[key: string]: string};
}

export interface GetMdbMongodbClusterHostHostParametersArgs {
    hidden?: pulumi.Input<boolean>;
    priority?: pulumi.Input<number>;
    secondaryDelaySecs?: pulumi.Input<number>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface GetMdbMongodbClusterMaintenanceWindow {
    day?: string;
    hour?: number;
    type?: string;
}

export interface GetMdbMongodbClusterMaintenanceWindowArgs {
    day?: pulumi.Input<string>;
    hour?: pulumi.Input<number>;
    type?: pulumi.Input<string>;
}

export interface GetMdbMongodbClusterResources {
    diskSize?: number;
    diskTypeId?: string;
    resourcePresetId?: string;
}

export interface GetMdbMongodbClusterResourcesArgs {
    diskSize?: pulumi.Input<number>;
    diskTypeId?: pulumi.Input<string>;
    resourcePresetId?: pulumi.Input<string>;
}

export interface GetMdbMongodbClusterResourcesMongocfg {
    diskSize?: number;
    diskTypeId?: string;
    resourcePresetId?: string;
}

export interface GetMdbMongodbClusterResourcesMongocfgArgs {
    diskSize?: pulumi.Input<number>;
    diskTypeId?: pulumi.Input<string>;
    resourcePresetId?: pulumi.Input<string>;
}

export interface GetMdbMongodbClusterResourcesMongod {
    diskSize?: number;
    diskTypeId?: string;
    resourcePresetId?: string;
}

export interface GetMdbMongodbClusterResourcesMongodArgs {
    diskSize?: pulumi.Input<number>;
    diskTypeId?: pulumi.Input<string>;
    resourcePresetId?: pulumi.Input<string>;
}

export interface GetMdbMongodbClusterResourcesMongoinfra {
    diskSize?: number;
    diskTypeId?: string;
    resourcePresetId?: string;
}

export interface GetMdbMongodbClusterResourcesMongoinfraArgs {
    diskSize?: pulumi.Input<number>;
    diskTypeId?: pulumi.Input<string>;
    resourcePresetId?: pulumi.Input<string>;
}

export interface GetMdbMongodbClusterResourcesMongos {
    diskSize?: number;
    diskTypeId?: string;
    resourcePresetId?: string;
}

export interface GetMdbMongodbClusterResourcesMongosArgs {
    diskSize?: pulumi.Input<number>;
    diskTypeId?: pulumi.Input<string>;
    resourcePresetId?: pulumi.Input<string>;
}

export interface GetMdbMongodbClusterRestore {
    backupId?: string;
    time?: string;
}

export interface GetMdbMongodbClusterRestoreArgs {
    backupId?: pulumi.Input<string>;
    time?: pulumi.Input<string>;
}

export interface GetMdbMongodbClusterUser {
    name?: string;
    password?: string;
    permissions?: inputs.GetMdbMongodbClusterUserPermission[];
}

export interface GetMdbMongodbClusterUserArgs {
    name?: pulumi.Input<string>;
    password?: pulumi.Input<string>;
    permissions?: pulumi.Input<pulumi.Input<inputs.GetMdbMongodbClusterUserPermissionArgs>[]>;
}

export interface GetMdbMongodbClusterUserPermission {
    databaseName?: string;
    roles?: string[];
}

export interface GetMdbMongodbClusterUserPermissionArgs {
    databaseName?: pulumi.Input<string>;
    roles?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMdbMysqlClusterAccess {
    dataLens?: boolean;
    dataTransfer?: boolean;
    webSql?: boolean;
}

export interface GetMdbMysqlClusterAccessArgs {
    dataLens?: pulumi.Input<boolean>;
    dataTransfer?: pulumi.Input<boolean>;
    webSql?: pulumi.Input<boolean>;
}

export interface GetMdbMysqlUserPermission {
    databaseName?: string;
    roles?: string[];
}

export interface GetMdbMysqlUserPermissionArgs {
    databaseName?: pulumi.Input<string>;
    roles?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GetMdbPostgresqlDatabaseExtension {
    name: string;
    version?: string;
}

export interface GetMdbPostgresqlDatabaseExtensionArgs {
    name: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}

export interface GetOrganizationmanagerOsLoginSettingsSshCertificateSettings {
    enabled?: boolean;
}

export interface GetOrganizationmanagerOsLoginSettingsSshCertificateSettingsArgs {
    enabled?: pulumi.Input<boolean>;
}

export interface GetOrganizationmanagerOsLoginSettingsUserSshKeySettings {
    allowManageOwnKeys?: boolean;
    enabled?: boolean;
}

export interface GetOrganizationmanagerOsLoginSettingsUserSshKeySettingsArgs {
    allowManageOwnKeys?: pulumi.Input<boolean>;
    enabled?: pulumi.Input<boolean>;
}

export interface GetServerlessContainerConnectivity {
    networkId: string;
}

export interface GetServerlessContainerConnectivityArgs {
    networkId: pulumi.Input<string>;
}

export interface GetServerlessContainerSecret {
    environmentVariable: string;
    id: string;
    key: string;
    versionId: string;
}

export interface GetServerlessContainerSecretArgs {
    environmentVariable: pulumi.Input<string>;
    id: pulumi.Input<string>;
    key: pulumi.Input<string>;
    versionId: pulumi.Input<string>;
}

export interface GetServerlessContainerStorageMount {
    bucket: string;
    mountPointPath: string;
    prefix?: string;
    readOnly?: boolean;
}

export interface GetServerlessContainerStorageMountArgs {
    bucket: pulumi.Input<string>;
    mountPointPath: pulumi.Input<string>;
    prefix?: pulumi.Input<string>;
    readOnly?: pulumi.Input<boolean>;
}

export interface GetVpcGatewaySharedEgressGateway {
}

export interface GetVpcGatewaySharedEgressGatewayArgs {
}

export interface GetYdbDatabaseServerlessServerlessDatabase {
    enableThrottlingRcuLimit?: boolean;
    provisionedRcuLimit?: number;
    storageSizeLimit?: number;
    throttlingRcuLimit?: number;
}

export interface GetYdbDatabaseServerlessServerlessDatabaseArgs {
    enableThrottlingRcuLimit?: pulumi.Input<boolean>;
    provisionedRcuLimit?: pulumi.Input<number>;
    storageSizeLimit?: pulumi.Input<number>;
    throttlingRcuLimit?: pulumi.Input<number>;
}

export interface IamServiceAccountApiKeyOutputToLockbox {
    /**
     * Entry where to store the value of `secretKey`.
     */
    entryForSecretKey: pulumi.Input<string>;
    /**
     * ID of the Lockbox secret where to store the sensible values.
     */
    secretId: pulumi.Input<string>;
}

export interface IamServiceAccountKeyOutputToLockbox {
    /**
     * Entry where to store the value of `privateKey`.
     */
    entryForPrivateKey: pulumi.Input<string>;
    /**
     * ID of the Lockbox secret where to store the sensible values.
     */
    secretId: pulumi.Input<string>;
}

export interface IamServiceAccountStaticAccessKeyOutputToLockbox {
    /**
     * Entry where to store the value of `secretKey`.
     */
    entryForSecretKey: pulumi.Input<string>;
    /**
     * ID of the Lockbox secret where to store the sensible values.
     */
    secretId: pulumi.Input<string>;
}

export interface IotCoreBrokerLogOptions {
    /**
     * Is logging for broker disabled
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * Log entries are written to default log group for specified folder
     */
    folderId?: pulumi.Input<string>;
    /**
     * Log entries are written to specified log group
     */
    logGroupId?: pulumi.Input<string>;
    /**
     * Minimum log entry level
     */
    minLevel?: pulumi.Input<string>;
}

export interface IotCoreRegistryLogOptions {
    /**
     * Is logging for registry disabled
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * Log entries are written to default log group for specified folder
     */
    folderId?: pulumi.Input<string>;
    /**
     * Log entries are written to specified log group
     */
    logGroupId?: pulumi.Input<string>;
    /**
     * Minimum log entry level
     */
    minLevel?: pulumi.Input<string>;
}

export interface KubernetesClusterKmsProvider {
    /**
     * KMS key ID.
     */
    keyId?: pulumi.Input<string>;
}

export interface KubernetesClusterMaster {
    /**
     * (Computed) PEM-encoded public certificate that is the root of trust for the Kubernetes cluster.
     */
    clusterCaCertificate?: pulumi.Input<string>;
    etcdClusterSize?: pulumi.Input<number>;
    /**
     * (Computed) An IPv4 external network address that is assigned to the master.
     */
    externalV4Address?: pulumi.Input<string>;
    /**
     * (Computed) External endpoint that can be used to access Kubernetes cluster API from the internet (outside of the cloud).
     */
    externalV4Endpoint?: pulumi.Input<string>;
    externalV6Address?: pulumi.Input<string>;
    externalV6Endpoint?: pulumi.Input<string>;
    /**
     * (Computed) An IPv4 internal network address that is assigned to the master.
     */
    internalV4Address?: pulumi.Input<string>;
    /**
     * (Computed) Internal endpoint that can be used to connect to the master from cloud networks.
     */
    internalV4Endpoint?: pulumi.Input<string>;
    /**
     * (Optional) (Computed) Maintenance policy for Kubernetes master.
     * If policy is omitted, automatic revision upgrades of the kubernetes master are enabled and could happen at any time.
     * Revision upgrades are performed only within the same minor version, e.g. 1.13.
     * Minor version upgrades (e.g. 1.13->1.14) should be performed manually. The structure is documented below.
     */
    maintenancePolicy?: pulumi.Input<inputs.KubernetesClusterMasterMaintenancePolicy>;
    /**
     * (Optional) Cluster master's instances locations array (zone and subnet).
     * Cannot be used together with `zonal` or `regional`. Currently, supports either one, for zonal master, or three instances of `masterLocation`.
     * Can be updated inplace. When creating regional cluster (three master instances), its `region` will be evaluated automatically by backend.
     * The structure is documented below.
     */
    masterLocations?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterMasterMasterLocation>[]>;
    /**
     * (Optional) Master Logging options. The structure is documented below.
     */
    masterLogging?: pulumi.Input<inputs.KubernetesClusterMasterMasterLogging>;
    /**
     * (Optional) (Computed) Boolean flag. When `true`, Kubernetes master will have visible ipv4 address.
     */
    publicIp?: pulumi.Input<boolean>;
    /**
     * (Optional) Initialize parameters for Regional Master (highly available master). The structure is documented below.
     */
    regional?: pulumi.Input<inputs.KubernetesClusterMasterRegional>;
    /**
     * (Optional) List of security group IDs to which the Kubernetes cluster belongs.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Optional) (Computed) Version of Kubernetes that will be used for master.
     */
    version?: pulumi.Input<string>;
    /**
     * (Computed) Information about cluster version. The structure is documented below.
     */
    versionInfos?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterMasterVersionInfo>[]>;
    /**
     * (Optional) Initialize parameters for Zonal Master (single node master). The structure is documented below.
     */
    zonal?: pulumi.Input<inputs.KubernetesClusterMasterZonal>;
}

export interface KubernetesClusterMasterMaintenancePolicy {
    /**
     * (Required) Boolean flag that specifies if master can be upgraded automatically. When omitted, default value is TRUE.
     */
    autoUpgrade: pulumi.Input<boolean>;
    /**
     * (Optional) (Computed) This structure specifies maintenance window, when update for master is allowed. When omitted, it defaults to any time.
     * To specify time of day interval, for all days, one element should be provided, with two fields set, `startTime` and `duration`.
     * Please see `zonalClusterResourceName` config example.
     */
    maintenanceWindows?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterMasterMaintenancePolicyMaintenanceWindow>[]>;
}

export interface KubernetesClusterMasterMaintenancePolicyMaintenanceWindow {
    day?: pulumi.Input<string>;
    duration: pulumi.Input<string>;
    startTime: pulumi.Input<string>;
}

export interface KubernetesClusterMasterMasterLocation {
    /**
     * (Optional) ID of the subnet.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * (Optional) ID of the availability zone.
     */
    zone?: pulumi.Input<string>;
}

export interface KubernetesClusterMasterMasterLogging {
    /**
     * (Optional) Boolean flag that specifies if kube-apiserver audit logs should be sent to Yandex Cloud Logging.
     */
    auditEnabled?: pulumi.Input<boolean>;
    /**
     * (Optional) Boolean flag that specifies if cluster-autoscaler logs should be sent to Yandex Cloud Logging.
     */
    clusterAutoscalerEnabled?: pulumi.Input<boolean>;
    /**
     * (Optional) Boolean flag that specifies if master components logs should be sent to [Yandex Cloud Logging](https://cloud.yandex.com/docs/logging/). The exact components that will send their logs must be configured via the options described below.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * (Optional) Boolean flag that specifies if kubernetes cluster events should be sent to Yandex Cloud Logging.
     */
    eventsEnabled?: pulumi.Input<boolean>;
    /**
     * The ID of the folder that the Kubernetes cluster belongs to.
     * If it is not provided, the default provider folder is used.
     */
    folderId?: pulumi.Input<string>;
    /**
     * (Optional) Boolean flag that specifies if kube-apiserver logs should be sent to Yandex Cloud Logging.
     */
    kubeApiserverEnabled?: pulumi.Input<boolean>;
    /**
     * (Optional) ID of the Yandex Cloud Logging [Log group](https://cloud.yandex.com/docs/logging/concepts/log-group).
     */
    logGroupId?: pulumi.Input<string>;
}

export interface KubernetesClusterMasterRegional {
    /**
     * Array of locations, where master instances will be allocated. The structure is documented below.
     */
    locations?: pulumi.Input<pulumi.Input<inputs.KubernetesClusterMasterRegionalLocation>[]>;
    /**
     * (Required) Name of availability region (e.g. "ru-central1"), where master instances will be allocated.
     */
    region: pulumi.Input<string>;
}

export interface KubernetesClusterMasterRegionalLocation {
    /**
     * (Optional) ID of the subnet.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * (Optional) ID of the availability zone.
     */
    zone?: pulumi.Input<string>;
}

export interface KubernetesClusterMasterVersionInfo {
    /**
     * Current Kubernetes version, major.minor (e.g. 1.15).
     */
    currentVersion?: pulumi.Input<string>;
    /**
     * Boolean flag.
     * Newer revisions may include Kubernetes patches (e.g 1.15.1 > 1.15.2) as well
     * as some internal component updates - new features or bug fixes in yandex-specific
     * components either on the master or nodes.
     */
    newRevisionAvailable?: pulumi.Input<boolean>;
    /**
     * Human readable description of the changes to be applied
     * when updating to the latest revision. Empty if newRevisionAvailable is false.
     */
    newRevisionSummary?: pulumi.Input<string>;
    /**
     * Boolean flag. The current version is on the deprecation schedule,
     * component (master or node group) should be upgraded.
     */
    versionDeprecated?: pulumi.Input<boolean>;
}

export interface KubernetesClusterMasterZonal {
    /**
     * (Optional) ID of the subnet.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * (Optional) ID of the availability zone.
     */
    zone?: pulumi.Input<string>;
}

export interface KubernetesClusterNetworkImplementation {
    /**
     * (Optional) Cilium network implementation configuration. No options exist.
     */
    cilium?: pulumi.Input<inputs.KubernetesClusterNetworkImplementationCilium>;
}

export interface KubernetesClusterNetworkImplementationCilium {
}

export interface KubernetesNodeGroupAllocationPolicy {
    /**
     * Repeated field, that specify subnets (zones), that will be used by node group compute instances. The structure is documented below.
     */
    locations?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupAllocationPolicyLocation>[]>;
}

export interface KubernetesNodeGroupAllocationPolicyLocation {
    /**
     * ID of the subnet, that will be used by one compute instance in node group.
     *
     * Subnet specified by `subnetId` should be allocated in zone specified by 'zone' argument
     *
     * @deprecated The 'subnet_id' field has been deprecated. Please use 'subnet_ids under network_interface' instead.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * ID of the availability zone where for one compute instance in node group.
     */
    zone?: pulumi.Input<string>;
}

export interface KubernetesNodeGroupDeployPolicy {
    /**
     * The maximum number of instances that can be temporarily allocated above the group's target size during the update.
     */
    maxExpansion: pulumi.Input<number>;
    /**
     * The maximum number of running instances that can be taken offline during update.
     */
    maxUnavailable: pulumi.Input<number>;
}

export interface KubernetesNodeGroupInstanceTemplate {
    /**
     * The specifications for boot disks that will be attached to the instance. The structure is documented below.
     */
    bootDisk?: pulumi.Input<inputs.KubernetesNodeGroupInstanceTemplateBootDisk>;
    /**
     * Container network configuration. The structure is documented below.
     */
    containerNetwork?: pulumi.Input<inputs.KubernetesNodeGroupInstanceTemplateContainerNetwork>;
    /**
     * Container runtime configuration. The structure is documented below.
     */
    containerRuntime?: pulumi.Input<inputs.KubernetesNodeGroupInstanceTemplateContainerRuntime>;
    /**
     * GPU settings. The structure is documented below.
     */
    gpuSettings?: pulumi.Input<inputs.KubernetesNodeGroupInstanceTemplateGpuSettings>;
    /**
     * Labels that will be assigned to compute nodes (instances), created by the Node Group.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The set of metadata `key:value` pairs assigned to this instance template. This includes custom metadata and predefined keys. **Note**: key "user-data" won't be provided into instances. It reserved for internal activity in `kubernetesNodeGroup` resource.
     *
     * * `resources.0.memory` - The memory size allocated to the instance.
     * * `resources.0.cores` - Number of CPU cores allocated to the instance.
     * * `resources.0.core_fraction` - Baseline core performance as a percent.
     * * `resources.0.gpus` - Number of GPU cores allocated to the instance.
     */
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Name template of the instance.
     * In order to be unique it must contain at least one of instance unique placeholders:
     * {instance.short_id}
     * {instance.index}
     * combination of {instance.zone_id} and {instance.index_in_zone}
     * Example: my-instance-{instance.index}
     * If not set, default is used: {instance_group.id}-{instance.short_id}
     * It may also contain another placeholders, see [Compute Instance group metadata doc](https://cloud.yandex.com/en-ru/docs/compute/api-ref/grpc/instance_group_service) for full list.
     */
    name?: pulumi.Input<string>;
    /**
     * Boolean flag, enables NAT for node group compute instances.
     *
     * @deprecated The 'nat' field has been deprecated. Please use 'nat under network_interface' instead.
     */
    nat?: pulumi.Input<boolean>;
    /**
     * Type of network acceleration. Values: `standard`, `softwareAccelerated`.
     */
    networkAccelerationType?: pulumi.Input<string>;
    /**
     * An array with the network interfaces that will be attached to the instance. The structure is documented below.
     */
    networkInterfaces?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupInstanceTemplateNetworkInterface>[]>;
    /**
     * The placement policy configuration. The structure is documented below.
     */
    placementPolicy?: pulumi.Input<inputs.KubernetesNodeGroupInstanceTemplatePlacementPolicy>;
    /**
     * The ID of the hardware platform configuration for the node group compute instances.
     */
    platformId?: pulumi.Input<string>;
    resources?: pulumi.Input<inputs.KubernetesNodeGroupInstanceTemplateResources>;
    /**
     * The scheduling policy for the instances in node group. The structure is documented below.
     */
    schedulingPolicy?: pulumi.Input<inputs.KubernetesNodeGroupInstanceTemplateSchedulingPolicy>;
}

export interface KubernetesNodeGroupInstanceTemplateBootDisk {
    /**
     * The size of the disk in GB. Allowed minimal size: 64 GB.
     */
    size?: pulumi.Input<number>;
    /**
     * The disk type.
     */
    type?: pulumi.Input<string>;
}

export interface KubernetesNodeGroupInstanceTemplateContainerNetwork {
    /**
     * MTU for pods.
     */
    podMtu?: pulumi.Input<number>;
}

export interface KubernetesNodeGroupInstanceTemplateContainerRuntime {
    /**
     * Type of container runtime. Values: `docker`, `containerd`.
     */
    type: pulumi.Input<string>;
}

export interface KubernetesNodeGroupInstanceTemplateGpuSettings {
    /**
     * GPU cluster id.
     */
    gpuClusterId?: pulumi.Input<string>;
    /**
     * GPU environment. Values: `runc`, `runcDriversCuda`.
     */
    gpuEnvironment?: pulumi.Input<string>;
}

export interface KubernetesNodeGroupInstanceTemplateNetworkInterface {
    /**
     * Allocate an IPv4 address for the interface. The default value is `true`.
     */
    ipv4?: pulumi.Input<boolean>;
    /**
     * List of configurations for creating ipv4 DNS records. The structure is documented below.
     */
    ipv4DnsRecords?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupInstanceTemplateNetworkInterfaceIpv4DnsRecord>[]>;
    /**
     * If true, allocate an IPv6 address for the interface. The address will be automatically assigned from the specified subnet.
     */
    ipv6?: pulumi.Input<boolean>;
    /**
     * List of configurations for creating ipv6 DNS records. The structure is documented below.
     */
    ipv6DnsRecords?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord>[]>;
    /**
     * A public address that can be used to access the internet over NAT.
     */
    nat?: pulumi.Input<boolean>;
    /**
     * Security group ids for network interface.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The IDs of the subnets.
     */
    subnetIds: pulumi.Input<pulumi.Input<string>[]>;
}

export interface KubernetesNodeGroupInstanceTemplateNetworkInterfaceIpv4DnsRecord {
    /**
     * DNS zone ID (if not set, private zone is used).
     */
    dnsZoneId?: pulumi.Input<string>;
    /**
     * DNS record FQDN.
     */
    fqdn: pulumi.Input<string>;
    /**
     * When set to true, also create a PTR DNS record.
     */
    ptr?: pulumi.Input<boolean>;
    /**
     * DNS record TTL (in seconds).
     */
    ttl?: pulumi.Input<number>;
}

export interface KubernetesNodeGroupInstanceTemplateNetworkInterfaceIpv6DnsRecord {
    /**
     * DNS zone ID (if not set, private zone is used).
     */
    dnsZoneId?: pulumi.Input<string>;
    /**
     * DNS record FQDN.
     */
    fqdn: pulumi.Input<string>;
    /**
     * When set to true, also create a PTR DNS record.
     */
    ptr?: pulumi.Input<boolean>;
    /**
     * DNS record TTL (in seconds).
     */
    ttl?: pulumi.Input<number>;
}

export interface KubernetesNodeGroupInstanceTemplatePlacementPolicy {
    /**
     * Specifies the id of the Placement Group to assign to the instances.
     */
    placementGroupId: pulumi.Input<string>;
}

export interface KubernetesNodeGroupInstanceTemplateResources {
    coreFraction?: pulumi.Input<number>;
    cores?: pulumi.Input<number>;
    gpus?: pulumi.Input<number>;
    memory?: pulumi.Input<number>;
}

export interface KubernetesNodeGroupInstanceTemplateSchedulingPolicy {
    /**
     * Specifies if the instance is preemptible. Defaults to false.
     */
    preemptible?: pulumi.Input<boolean>;
}

export interface KubernetesNodeGroupMaintenancePolicy {
    /**
     * Boolean flag that specifies if node group can be repaired automatically. When omitted, default value is TRUE.
     */
    autoRepair: pulumi.Input<boolean>;
    /**
     * Boolean flag that specifies if node group can be upgraded automatically. When omitted, default value is TRUE.
     */
    autoUpgrade: pulumi.Input<boolean>;
    /**
     * (Computed) Set of day intervals, when maintenance is allowed for this node group. When omitted, it defaults to any time. 
     *
     * To specify time of day interval, for all days, one element should be provided, with two fields set, `startTime` and `duration`.
     *
     * To allow maintenance only on specific days of week, please provide list of elements, with all fields set. Only one
     * time interval is allowed for each day of week. Please see `myNodeGroup` config example.
     */
    maintenanceWindows?: pulumi.Input<pulumi.Input<inputs.KubernetesNodeGroupMaintenancePolicyMaintenanceWindow>[]>;
}

export interface KubernetesNodeGroupMaintenancePolicyMaintenanceWindow {
    day?: pulumi.Input<string>;
    duration: pulumi.Input<string>;
    startTime: pulumi.Input<string>;
}

export interface KubernetesNodeGroupScalePolicy {
    /**
     * Scale policy for an autoscaled node group. The structure is documented below.
     */
    autoScale?: pulumi.Input<inputs.KubernetesNodeGroupScalePolicyAutoScale>;
    /**
     * Scale policy for a fixed scale node group. The structure is documented below.
     */
    fixedScale?: pulumi.Input<inputs.KubernetesNodeGroupScalePolicyFixedScale>;
}

export interface KubernetesNodeGroupScalePolicyAutoScale {
    /**
     * Initial number of instances in the node group.
     */
    initial: pulumi.Input<number>;
    /**
     * Maximum number of instances in the node group.
     */
    max: pulumi.Input<number>;
    /**
     * Minimum number of instances in the node group.
     */
    min: pulumi.Input<number>;
}

export interface KubernetesNodeGroupScalePolicyFixedScale {
    /**
     * The number of instances in the node group.
     */
    size?: pulumi.Input<number>;
}

export interface KubernetesNodeGroupVersionInfo {
    /**
     * Current Kubernetes version, major.minor (e.g. 1.15).
     */
    currentVersion?: pulumi.Input<string>;
    /**
     * True/false flag.
     * Newer revisions may include Kubernetes patches (e.g 1.15.1 > 1.15.2) as well
     * as some internal component updates - new features or bug fixes in yandex-specific
     * components either on the master or nodes.
     */
    newRevisionAvailable?: pulumi.Input<boolean>;
    /**
     * Human readable description of the changes to be applied
     * when updating to the latest revision. Empty if newRevisionAvailable is false.
     */
    newRevisionSummary?: pulumi.Input<string>;
    /**
     * True/false flag. The current version is on the deprecation schedule,
     * component (master or node group) should be upgraded.
     */
    versionDeprecated?: pulumi.Input<boolean>;
}

export interface LbNetworkLoadBalancerAttachedTargetGroup {
    /**
     * A HealthCheck resource. The structure is documented below.
     */
    healthchecks: pulumi.Input<pulumi.Input<inputs.LbNetworkLoadBalancerAttachedTargetGroupHealthcheck>[]>;
    /**
     * ID of the target group.
     */
    targetGroupId: pulumi.Input<string>;
}

export interface LbNetworkLoadBalancerAttachedTargetGroupHealthcheck {
    /**
     * Number of successful health checks required in order to set the `HEALTHY` status for the target.
     */
    healthyThreshold?: pulumi.Input<number>;
    /**
     * Options for HTTP health check. The structure is documented below.
     */
    httpOptions?: pulumi.Input<inputs.LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptions>;
    /**
     * The interval between health checks. The default is 2 seconds.
     */
    interval?: pulumi.Input<number>;
    /**
     * Name of the health check. The name must be unique for each target group that attached to a single load balancer.
     */
    name: pulumi.Input<string>;
    /**
     * Options for TCP health check. The structure is documented below.
     *
     * > **NOTE:** One of `httpOptions` or `tcpOptions` should be specified.
     */
    tcpOptions?: pulumi.Input<inputs.LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptions>;
    /**
     * Timeout for a target to return a response for the health check. The default is 1 second.
     */
    timeout?: pulumi.Input<number>;
    /**
     * Number of failed health checks before changing the status to `UNHEALTHY`. The default is 2.
     */
    unhealthyThreshold?: pulumi.Input<number>;
}

export interface LbNetworkLoadBalancerAttachedTargetGroupHealthcheckHttpOptions {
    /**
     * URL path to set for health checking requests for every target in the target group. For example `/ping`. The default path is `/`.
     */
    path?: pulumi.Input<string>;
    /**
     * Port to use for HTTP health checks.
     */
    port: pulumi.Input<number>;
}

export interface LbNetworkLoadBalancerAttachedTargetGroupHealthcheckTcpOptions {
    /**
     * Port to use for TCP health checks.
     */
    port: pulumi.Input<number>;
}

export interface LbNetworkLoadBalancerListener {
    /**
     * External IP address specification. The structure is documented below.
     */
    externalAddressSpec?: pulumi.Input<inputs.LbNetworkLoadBalancerListenerExternalAddressSpec>;
    /**
     * Internal IP address specification. The structure is documented below.
     *
     * > **NOTE:** One of `externalAddressSpec` or `internalAddressSpec` should be specified.
     */
    internalAddressSpec?: pulumi.Input<inputs.LbNetworkLoadBalancerListenerInternalAddressSpec>;
    /**
     * Name of the listener. The name must be unique for each listener on a single load balancer.
     */
    name: pulumi.Input<string>;
    /**
     * Port for incoming traffic.
     */
    port: pulumi.Input<number>;
    /**
     * Protocol for incoming traffic. TCP or UDP and the default is TCP.
     */
    protocol?: pulumi.Input<string>;
    /**
     * Port of a target. The default is the same as listener's port.
     */
    targetPort?: pulumi.Input<number>;
}

export interface LbNetworkLoadBalancerListenerExternalAddressSpec {
    /**
     * External IP address for a listener. IP address will be allocated if it wasn't been set.
     */
    address?: pulumi.Input<string>;
    /**
     * IP version of the external addresses that the load balancer works with. Must be one of ipv4 or ipv6. The default is ipv4.
     */
    ipVersion?: pulumi.Input<string>;
}

export interface LbNetworkLoadBalancerListenerInternalAddressSpec {
    /**
     * Internal IP address for a listener. Must belong to the subnet that is referenced in subnet_id. IP address will be allocated if it wasn't been set.
     */
    address?: pulumi.Input<string>;
    /**
     * IP version of the internal addresses that the load balancer works with. Must be one of ipv4 or ipv6. The default is ipv4.
     */
    ipVersion?: pulumi.Input<string>;
    /**
     * ID of the subnet to which the internal IP address belongs.
     */
    subnetId: pulumi.Input<string>;
}

export interface LbTargetGroupTarget {
    /**
     * IP address of the target.
     */
    address: pulumi.Input<string>;
    /**
     * ID of the subnet that targets are connected to. 
     * All targets in the target group must be connected to the same subnet within a single availability zone.
     */
    subnetId: pulumi.Input<string>;
}

export interface LoadtestingAgentComputeInstance {
    /**
     * Boot disk specifications for the instance. The structure is documented below.
     */
    bootDisk: pulumi.Input<inputs.LoadtestingAgentComputeInstanceBootDisk>;
    /**
     * The set of metadata `key:value` pairs assigned to this instance. This includes user custom `metadata`, and predefined items created by Yandex Cloud Load Testing.
     */
    computedMetadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A set of key/value label pairs to assign to the instance.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A set of metadata key/value pairs to make available from within the instance.
     */
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Network specifications for the instance. This can be used multiple times for adding multiple interfaces. The structure is documented below.
     */
    networkInterfaces: pulumi.Input<pulumi.Input<inputs.LoadtestingAgentComputeInstanceNetworkInterface>[]>;
    /**
     * The Compute platform of virtual machine. If it is not provided, the standard-v2 platform will be used.
     */
    platformId?: pulumi.Input<string>;
    /**
     * Compute resource specifications for the instance. The structure is documented below.
     */
    resources: pulumi.Input<inputs.LoadtestingAgentComputeInstanceResources>;
    /**
     * The ID of the service account authorized for this load testing agent. Service account should have `loadtesting.generatorClient` or `loadtesting.externalAgent` role in the folder.
     */
    serviceAccountId: pulumi.Input<string>;
    /**
     * The availability zone where the virtual machine will be created. If it is not provided,
     * the default provider folder is used.
     */
    zoneId?: pulumi.Input<string>;
}

export interface LoadtestingAgentComputeInstanceBootDisk {
    /**
     * Whether the disk is auto-deleted when the instance is deleted. The default value is true.
     */
    autoDelete?: pulumi.Input<boolean>;
    /**
     * This value can be used to reference the device under `/dev/disk/by-id/`.
     */
    deviceName?: pulumi.Input<string>;
    /**
     * The ID of created disk.
     */
    diskId?: pulumi.Input<string>;
    /**
     * Parameters for creating a disk alongside the instance. The structure is documented below.
     */
    initializeParams: pulumi.Input<inputs.LoadtestingAgentComputeInstanceBootDiskInitializeParams>;
}

export interface LoadtestingAgentComputeInstanceBootDiskInitializeParams {
    /**
     * Block size of the disk, specified in bytes.
     */
    blockSize?: pulumi.Input<number>;
    /**
     * A description of the boot disk.
     */
    description?: pulumi.Input<string>;
    /**
     * A name of the boot disk.
     */
    name?: pulumi.Input<string>;
    /**
     * The size of the disk in GB. Defaults to 15 GB.
     */
    size?: pulumi.Input<number>;
    /**
     * The disk type.
     */
    type?: pulumi.Input<string>;
}

export interface LoadtestingAgentComputeInstanceNetworkInterface {
    index?: pulumi.Input<number>;
    /**
     * Manual set static IP address.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * Flag for allocating IPv4 address for the network interface.
     */
    ipv4?: pulumi.Input<boolean>;
    /**
     * Flag for allocating IPv6 address for the network interface.
     */
    ipv6?: pulumi.Input<boolean>;
    /**
     * Manual set static IPv6 address.
     */
    ipv6Address?: pulumi.Input<string>;
    macAddress?: pulumi.Input<string>;
    /**
     * Flag for using NAT.
     */
    nat?: pulumi.Input<boolean>;
    /**
     * A public address that can be used to access the internet over NAT.
     */
    natIpAddress?: pulumi.Input<string>;
    natIpVersion?: pulumi.Input<string>;
    /**
     * Security group ids for network interface.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the subnet to attach this interface to. The subnet must reside in the same zone where this instance was created.
     */
    subnetId: pulumi.Input<string>;
}

export interface LoadtestingAgentComputeInstanceResources {
    /**
     * If provided, specifies baseline core performance as a percent.
     */
    coreFraction?: pulumi.Input<number>;
    /**
     * The number of CPU cores for the instance. Defaults to 2 cores.
     */
    cores?: pulumi.Input<number>;
    /**
     * The memory size in GB. Defaults to 2 GB.
     */
    memory?: pulumi.Input<number>;
}

export interface LockboxSecretVersionEntry {
    /**
     * The command that generates the text value of the entry.
     *
     * Note that either `textValue` or `command` is required.
     *
     * The `command` block contains:
     */
    command?: pulumi.Input<inputs.LockboxSecretVersionEntryCommand>;
    /**
     * The key of the entry.
     */
    key: pulumi.Input<string>;
    /**
     * The text value of the entry.
     */
    textValue?: pulumi.Input<string>;
}

export interface LockboxSecretVersionEntryCommand {
    /**
     * List of arguments to be passed to the script/command.
     */
    args?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Map of environment variables to set before calling the script/command.
     */
    env?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The path to the script or command to execute.
     */
    path: pulumi.Input<string>;
}

export interface MdbClickhouseClusterAccess {
    /**
     * Allow access for DataLens. Can be either `true` or `false`.
     */
    dataLens?: pulumi.Input<boolean>;
    /**
     * Allow access for DataTransfer. Can be either `true` or `false`.
     */
    dataTransfer?: pulumi.Input<boolean>;
    /**
     * Allow access for Yandex.Metrika. Can be either `true` or `false`.
     */
    metrika?: pulumi.Input<boolean>;
    /**
     * Allow access for Serverless. Can be either `true` or `false`.
     */
    serverless?: pulumi.Input<boolean>;
    /**
     * Allow access for Web SQL. Can be either `true` or `false`.
     */
    webSql?: pulumi.Input<boolean>;
    /**
     * Allow access for YandexQuery. Can be either `true` or `false`.
     */
    yandexQuery?: pulumi.Input<boolean>;
}

export interface MdbClickhouseClusterBackupWindowStart {
    /**
     * The hour at which backup will be started.
     */
    hours?: pulumi.Input<number>;
    /**
     * The minute at which backup will be started.
     */
    minutes?: pulumi.Input<number>;
}

export interface MdbClickhouseClusterClickhouse {
    /**
     * Main ClickHouse cluster configuration.
     */
    config?: pulumi.Input<inputs.MdbClickhouseClusterClickhouseConfig>;
    /**
     * Resources allocated to hosts of the ClickHouse subcluster. The structure is documented below.
     */
    resources?: pulumi.Input<inputs.MdbClickhouseClusterClickhouseResources>;
}

export interface MdbClickhouseClusterClickhouseConfig {
    backgroundFetchesPoolSize?: pulumi.Input<number>;
    backgroundMergesMutationsConcurrencyRatio?: pulumi.Input<number>;
    backgroundMessageBrokerSchedulePoolSize?: pulumi.Input<number>;
    backgroundPoolSize?: pulumi.Input<number>;
    backgroundSchedulePoolSize?: pulumi.Input<number>;
    /**
     * Data compression configuration. The structure is documented below.
     */
    compressions?: pulumi.Input<pulumi.Input<inputs.MdbClickhouseClusterClickhouseConfigCompression>[]>;
    defaultDatabase?: pulumi.Input<string>;
    dictionariesLazyLoad?: pulumi.Input<boolean>;
    geobaseEnabled?: pulumi.Input<boolean>;
    geobaseUri?: pulumi.Input<string>;
    /**
     * Graphite rollup configuration. The structure is documented below.
     */
    graphiteRollups?: pulumi.Input<pulumi.Input<inputs.MdbClickhouseClusterClickhouseConfigGraphiteRollup>[]>;
    /**
     * Kafka connection configuration. The structure is documented below.
     */
    kafka?: pulumi.Input<inputs.MdbClickhouseClusterClickhouseConfigKafka>;
    /**
     * Kafka topic connection configuration. The structure is documented below.
     */
    kafkaTopics?: pulumi.Input<pulumi.Input<inputs.MdbClickhouseClusterClickhouseConfigKafkaTopic>[]>;
    keepAliveTimeout?: pulumi.Input<number>;
    /**
     * , `maxConnections`, `maxConcurrentQueries`, `keepAliveTimeout`, `uncompressedCacheSize`, `markCacheSize`,
     * `maxTableSizeToDrop`, `maxPartitionSizeToDrop`, `timezone`, `geobaseUri`, `queryLogRetentionSize`,
     * `queryLogRetentionTime`, `queryThreadLogEnabled`, `queryThreadLogRetentionSize`, `queryThreadLogRetentionTime`,
     * `partLogRetentionSize`, `partLogRetentionTime`, `metricLogEnabled`, `metricLogRetentionSize`, `metricLogRetentionTime`,
     * `traceLogEnabled`, `traceLogRetentionSize`, `traceLogRetentionTime`, `textLogEnabled`, `textLogRetentionSize`,
     * `textLogRetentionTime`, `textLogLevel`,
     * `backgroundPoolSize`, `backgroundSchedulePoolSize`, `backgroundFetchesPoolSize`, `backgroundMessageBrokerSchedulePoolSize`,`backgroundMergesMutationsConcurrencyRatio`,
     * `defaultDatabase`,
     * `totalMemoryProfilerStep`, `dictionariesLazyLoad` - (Optional) ClickHouse server parameters. For more information, see
     * [the official documentation](https://cloud.yandex.com/docs/managed-clickhouse/concepts/settings-list).
     */
    logLevel?: pulumi.Input<string>;
    markCacheSize?: pulumi.Input<number>;
    maxConcurrentQueries?: pulumi.Input<number>;
    maxConnections?: pulumi.Input<number>;
    maxPartitionSizeToDrop?: pulumi.Input<number>;
    maxTableSizeToDrop?: pulumi.Input<number>;
    /**
     * MergeTree engine configuration. The structure is documented below.
     */
    mergeTree?: pulumi.Input<inputs.MdbClickhouseClusterClickhouseConfigMergeTree>;
    metricLogEnabled?: pulumi.Input<boolean>;
    metricLogRetentionSize?: pulumi.Input<number>;
    metricLogRetentionTime?: pulumi.Input<number>;
    partLogRetentionSize?: pulumi.Input<number>;
    partLogRetentionTime?: pulumi.Input<number>;
    /**
     * Query cache configuration. The structure is documented below.
     */
    queryCache?: pulumi.Input<inputs.MdbClickhouseClusterClickhouseConfigQueryCache>;
    queryLogRetentionSize?: pulumi.Input<number>;
    queryLogRetentionTime?: pulumi.Input<number>;
    /**
     * Query masking rules configuration. The structure is documented below.
     */
    queryMaskingRules?: pulumi.Input<pulumi.Input<inputs.MdbClickhouseClusterClickhouseConfigQueryMaskingRule>[]>;
    queryThreadLogEnabled?: pulumi.Input<boolean>;
    queryThreadLogRetentionSize?: pulumi.Input<number>;
    queryThreadLogRetentionTime?: pulumi.Input<number>;
    /**
     * RabbitMQ connection configuration. The structure is documented below.
     */
    rabbitmq?: pulumi.Input<inputs.MdbClickhouseClusterClickhouseConfigRabbitmq>;
    textLogEnabled?: pulumi.Input<boolean>;
    textLogLevel?: pulumi.Input<string>;
    textLogRetentionSize?: pulumi.Input<number>;
    textLogRetentionTime?: pulumi.Input<number>;
    timezone?: pulumi.Input<string>;
    totalMemoryProfilerStep?: pulumi.Input<number>;
    traceLogEnabled?: pulumi.Input<boolean>;
    traceLogRetentionSize?: pulumi.Input<number>;
    traceLogRetentionTime?: pulumi.Input<number>;
    uncompressedCacheSize?: pulumi.Input<number>;
}

export interface MdbClickhouseClusterClickhouseConfigCompression {
    /**
     * Compression level for `ZSTD` method.
     */
    level?: pulumi.Input<number>;
    /**
     * Method: Compression method. Two methods are available: LZ4 and zstd.
     */
    method: pulumi.Input<string>;
    /**
     * Min part size: Minimum size (in bytes) of a data part in a table. ClickHouse only applies the rule to tables with data parts greater than or equal to the Min part size value.
     */
    minPartSize: pulumi.Input<number>;
    /**
     * Min part size ratio: Minimum table part size to total table size ratio. ClickHouse only applies the rule to tables in which this ratio is greater than or equal to the Min part size ratio value.
     */
    minPartSizeRatio: pulumi.Input<number>;
}

export interface MdbClickhouseClusterClickhouseConfigGraphiteRollup {
    /**
     * Graphite rollup configuration name.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the column storing the metric name (Graphite sensor). Default value: Path.
     */
    pathColumnName?: pulumi.Input<string>;
    /**
     * Set of thinning rules.
     */
    patterns?: pulumi.Input<pulumi.Input<inputs.MdbClickhouseClusterClickhouseConfigGraphiteRollupPattern>[]>;
    /**
     * The name of the column storing the time of measuring the metric. Default value: Time.
     */
    timeColumnName?: pulumi.Input<string>;
    /**
     * The name of the column storing the value of the metric at the time set in time_column_name. Default value: Value.
     */
    valueColumnName?: pulumi.Input<string>;
    /**
     * The name of the column storing the version of the metric. Default value: Timestamp.
     */
    versionColumnName?: pulumi.Input<string>;
}

export interface MdbClickhouseClusterClickhouseConfigGraphiteRollupPattern {
    /**
     * Aggregation function name.
     */
    function: pulumi.Input<string>;
    /**
     * Regular expression that the metric name must match.
     */
    regexp?: pulumi.Input<string>;
    /**
     * Retain parameters.
     */
    retentions?: pulumi.Input<pulumi.Input<inputs.MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention>[]>;
}

export interface MdbClickhouseClusterClickhouseConfigGraphiteRollupPatternRetention {
    /**
     * Minimum data age in seconds.
     */
    age: pulumi.Input<number>;
    /**
     * Accuracy of determining the age of the data in seconds.
     */
    precision: pulumi.Input<number>;
}

export interface MdbClickhouseClusterClickhouseConfigKafka {
    /**
     * Action to take when there is no initial offset in offset store or the desired offset is out of range: 'smallest','earliest' - automatically reset the offset to the smallest offset, 'largest','latest' - automatically reset the offset to the largest offset, 'error' - trigger an error (ERR__AUTO_OFFSET_RESET) which is retrieved by consuming messages and checking 'message->err'.
     */
    autoOffsetReset?: pulumi.Input<string>;
    /**
     * A comma-separated list of debug contexts to enable.
     */
    debug?: pulumi.Input<string>;
    /**
     * enable verification of SSL certificates.
     */
    enableSslCertificateVerification?: pulumi.Input<boolean>;
    /**
     * Maximum allowed time between calls to consume messages (e.g., rd_kafka_consumer_poll()) for high-level consumers. If this interval is exceeded the consumer is considered failed and the group will rebalance in order to reassign the partitions to another consumer group member.
     */
    maxPollIntervalMs?: pulumi.Input<number>;
    /**
     * SASL mechanism used in kafka authentication.
     */
    saslMechanism?: pulumi.Input<string>;
    /**
     * User password on kafka server.
     */
    saslPassword?: pulumi.Input<string>;
    /**
     * Username on kafka server.
     */
    saslUsername?: pulumi.Input<string>;
    /**
     * Security protocol used to connect to kafka server.
     */
    securityProtocol?: pulumi.Input<string>;
    /**
     * Client group session and failure detection timeout. The consumer sends periodic heartbeats (heartbeat.interval.ms) to indicate its liveness to the broker. If no hearts are received by the broker for a group member within the session timeout, the broker will remove the consumer from the group and trigger a rebalance.
     */
    sessionTimeoutMs?: pulumi.Input<number>;
}

export interface MdbClickhouseClusterClickhouseConfigKafkaTopic {
    /**
     * Kafka topic name.
     */
    name: pulumi.Input<string>;
    /**
     * Kafka connection settngs sanem as `kafka` block.
     */
    settings?: pulumi.Input<inputs.MdbClickhouseClusterClickhouseConfigKafkaTopicSettings>;
}

export interface MdbClickhouseClusterClickhouseConfigKafkaTopicSettings {
    /**
     * Action to take when there is no initial offset in offset store or the desired offset is out of range: 'smallest','earliest' - automatically reset the offset to the smallest offset, 'largest','latest' - automatically reset the offset to the largest offset, 'error' - trigger an error (ERR__AUTO_OFFSET_RESET) which is retrieved by consuming messages and checking 'message->err'.
     */
    autoOffsetReset?: pulumi.Input<string>;
    /**
     * A comma-separated list of debug contexts to enable.
     */
    debug?: pulumi.Input<string>;
    /**
     * enable verification of SSL certificates.
     */
    enableSslCertificateVerification?: pulumi.Input<boolean>;
    /**
     * Maximum allowed time between calls to consume messages (e.g., rd_kafka_consumer_poll()) for high-level consumers. If this interval is exceeded the consumer is considered failed and the group will rebalance in order to reassign the partitions to another consumer group member.
     */
    maxPollIntervalMs?: pulumi.Input<number>;
    /**
     * SASL mechanism used in kafka authentication.
     */
    saslMechanism?: pulumi.Input<string>;
    /**
     * User password on kafka server.
     */
    saslPassword?: pulumi.Input<string>;
    /**
     * Username on kafka server.
     */
    saslUsername?: pulumi.Input<string>;
    /**
     * Security protocol used to connect to kafka server.
     */
    securityProtocol?: pulumi.Input<string>;
    /**
     * Client group session and failure detection timeout. The consumer sends periodic heartbeats (heartbeat.interval.ms) to indicate its liveness to the broker. If no hearts are received by the broker for a group member within the session timeout, the broker will remove the consumer from the group and trigger a rebalance.
     */
    sessionTimeoutMs?: pulumi.Input<number>;
}

export interface MdbClickhouseClusterClickhouseConfigMergeTree {
    /**
     * Enables the check at table creation, that the data type of a column for sampling or sampling expression is correct. The data type must be one of unsigned integer types: UInt8, UInt16, UInt32, UInt64. Default value: true.
     */
    checkSampleColumnIsCorrect?: pulumi.Input<boolean>;
    /**
     * Minimum period to clean old queue logs, blocks hashes and parts.
     */
    cleanupDelayPeriod?: pulumi.Input<number>;
    /**
     * The `too many parts` check according to `partsToDelayInsert` and `partsToThrowInsert` will be active only if the average part size (in the relevant partition) is not larger than the specified threshold. If it is larger than the specified threshold, the INSERTs will be neither delayed or rejected. This allows to have hundreds of terabytes in a single table on a single server if the parts are successfully merged to larger parts. This does not affect the thresholds on inactive parts or total parts.
     */
    maxAvgPartSizeForTooManyParts?: pulumi.Input<number>;
    /**
     * Max bytes to merge at min space in pool: Maximum total size of a data part to merge when the number of free threads in the background pool is minimum.
     */
    maxBytesToMergeAtMinSpaceInPool?: pulumi.Input<number>;
    /**
     * Maximum period to clean old queue logs, blocks hashes and parts. Default value: 300 seconds.
     */
    maxCleanupDelayPeriod?: pulumi.Input<number>;
    /**
     * Maximum sleep time for merge selecting, a lower setting will trigger selecting tasks in backgroundSchedulePool frequently which result in large amount of requests to zookeeper in large-scale clusters. Default value: 60000 milliseconds (60 seconds).
     */
    maxMergeSelectingSleepMs?: pulumi.Input<number>;
    /**
     * When there is more than specified number of merges with TTL entries in pool, do not assign new merge with TTL.
     */
    maxNumberOfMergesWithTtlInPool?: pulumi.Input<number>;
    /**
     * Maximum number of parts in all partitions.
     */
    maxPartsInTotal?: pulumi.Input<number>;
    /**
     * Max replicated merges in queue: Maximum number of merge tasks that can be in the ReplicatedMergeTree queue at the same time.
     */
    maxReplicatedMergesInQueue?: pulumi.Input<number>;
    /**
     * The number of rows that are read from the merged parts into memory. Default value: 8192.
     */
    mergeMaxBlockSize?: pulumi.Input<number>;
    /**
     * Sleep time for merge selecting when no part is selected. A lower setting triggers selecting tasks in backgroundSchedulePool frequently, which results in a large number of requests to ClickHouse Keeper in large-scale clusters.
     */
    mergeSelectingSleepMs?: pulumi.Input<number>;
    /**
     * Minimum delay in seconds before repeating a merge with recompression TTL. Default value: 14400 seconds (4 hours).
     */
    mergeWithRecompressionTtlTimeout?: pulumi.Input<number>;
    /**
     * Minimum delay in seconds before repeating a merge with delete TTL. Default value: 14400 seconds (4 hours).
     */
    mergeWithTtlTimeout?: pulumi.Input<number>;
    /**
     * Whether minAgeToForceMergeSeconds should be applied only on the entire partition and not on subset.
     */
    minAgeToForceMergeOnPartitionOnly?: pulumi.Input<boolean>;
    /**
     * Merge parts if every part in the range is older than the value of `minAgeToForceMergeSeconds`.
     */
    minAgeToForceMergeSeconds?: pulumi.Input<number>;
    /**
     * Minimum number of bytes in a data part that can be stored in Wide format. You can set one, both or none of these settings.
     */
    minBytesForWidePart?: pulumi.Input<number>;
    /**
     * Minimum number of rows in a data part that can be stored in Wide format. You can set one, both or none of these settings.
     */
    minRowsForWidePart?: pulumi.Input<number>;
    /**
     * Number of free entries in pool to lower max size of merge: Threshold value of free entries in the pool. If the number of entries in the pool falls below this value, ClickHouse reduces the maximum size of a data part to merge. This helps handle small merges faster, rather than filling the pool with lengthy merges.
     */
    numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge?: pulumi.Input<number>;
    /**
     * Parts to delay insert: Number of active data parts in a table, on exceeding which ClickHouse starts artificially reduce the rate of inserting data into the table.
     */
    partsToDelayInsert?: pulumi.Input<number>;
    /**
     * Parts to throw insert: Threshold value of active data parts in a table, on exceeding which ClickHouse throws the 'Too many parts ...' exception.
     */
    partsToThrowInsert?: pulumi.Input<number>;
    /**
     * Replicated deduplication window: Number of recent hash blocks that ZooKeeper will store (the old ones will be deleted).
     */
    replicatedDeduplicationWindow?: pulumi.Input<number>;
    /**
     * Replicated deduplication window seconds: Time during which ZooKeeper stores the hash blocks (the old ones wil be deleted).
     */
    replicatedDeduplicationWindowSeconds?: pulumi.Input<number>;
    /**
     * Enables or disables complete dropping of data parts where all rows are expired in MergeTree tables.
     */
    ttlOnlyDropParts?: pulumi.Input<boolean>;
}

export interface MdbClickhouseClusterClickhouseConfigQueryCache {
    /**
     * The maximum number of SELECT query results stored in the cache. Default value: 1024.
     */
    maxEntries?: pulumi.Input<number>;
    /**
     * The maximum size in bytes SELECT query results may have to be saved in the cache. Default value: 1048576 (1 MiB).
     */
    maxEntrySizeInBytes?: pulumi.Input<number>;
    /**
     * The maximum number of rows SELECT query results may have to be saved in the cache. Default value: 30000000 (30 mil).
     */
    maxEntrySizeInRows?: pulumi.Input<number>;
    /**
     * The maximum cache size in bytes. 0 means the query cache is disabled. Default value: 1073741824 (1 GiB).
     */
    maxSizeInBytes?: pulumi.Input<number>;
}

export interface MdbClickhouseClusterClickhouseConfigQueryMaskingRule {
    /**
     * Name for the rule.
     */
    name?: pulumi.Input<string>;
    /**
     * RE2 compatible regular expression.
     */
    regexp: pulumi.Input<string>;
    /**
     * Substitution string for sensitive data. Default value: six asterisks.
     */
    replace?: pulumi.Input<string>;
}

export interface MdbClickhouseClusterClickhouseConfigRabbitmq {
    /**
     * RabbitMQ user password.
     */
    password?: pulumi.Input<string>;
    /**
     * RabbitMQ username.
     */
    username?: pulumi.Input<string>;
    /**
     * RabbitMQ vhost. Default: '\'.
     */
    vhost?: pulumi.Input<string>;
}

export interface MdbClickhouseClusterClickhouseResources {
    /**
     * Volume of the storage available to a host, in gigabytes.
     */
    diskSize?: pulumi.Input<number>;
    /**
     * Type of the storage of hosts.
     */
    diskTypeId?: pulumi.Input<string>;
    resourcePresetId?: pulumi.Input<string>;
}

export interface MdbClickhouseClusterCloudStorage {
    /**
     * Enables temporary storage in the cluster repository of data requested from the object repository.
     */
    dataCacheEnabled?: pulumi.Input<boolean>;
    /**
     * Defines the maximum amount of memory (in bytes) allocated in the cluster storage for temporary storage of data requested from the object storage.
     */
    dataCacheMaxSize?: pulumi.Input<number>;
    /**
     * Whether to use Yandex Object Storage for storing ClickHouse data. Can be either `true` or `false`.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Sets the minimum free space ratio in the cluster storage. If the free space is lower than this value, the data is transferred to Yandex Object Storage. Acceptable values are 0 to 1, inclusive.
     */
    moveFactor?: pulumi.Input<number>;
    /**
     * Disables merging of data parts in `Yandex Object Storage`.
     */
    preferNotToMerge?: pulumi.Input<boolean>;
}

export interface MdbClickhouseClusterDatabase {
    /**
     * The name of the database.
     */
    name: pulumi.Input<string>;
}

export interface MdbClickhouseClusterFormatSchema {
    /**
     * The name of the format schema.
     */
    name: pulumi.Input<string>;
    /**
     * Type of the format schema.
     */
    type: pulumi.Input<string>;
    /**
     * Format schema file URL. You can only use format schemas stored in Yandex Object Storage.
     */
    uri: pulumi.Input<string>;
}

export interface MdbClickhouseClusterHost {
    /**
     * Sets whether the host should get a public IP address on creation. Can be either `true` or `false`.
     */
    assignPublicIp?: pulumi.Input<boolean>;
    /**
     * The fully qualified domain name of the host.
     */
    fqdn?: pulumi.Input<string>;
    /**
     * The name of the shard to which the host belongs.
     */
    shardName?: pulumi.Input<string>;
    /**
     * The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * The type of the host to be deployed. Can be either `CLICKHOUSE` or `ZOOKEEPER`.
     */
    type: pulumi.Input<string>;
    /**
     * The availability zone where the ClickHouse host will be created.
     * For more information see [the official documentation](https://cloud.yandex.com/docs/overview/concepts/geo-scope).
     */
    zone: pulumi.Input<string>;
}

export interface MdbClickhouseClusterMaintenanceWindow {
    /**
     * Day of week for maintenance window if window type is weekly. Possible values: `MON`, `TUE`, `WED`, `THU`, `FRI`, `SAT`, `SUN`.
     */
    day?: pulumi.Input<string>;
    /**
     * Hour of day in UTC time zone (1-24) for maintenance window if window type is weekly.
     */
    hour?: pulumi.Input<number>;
    /**
     * Type of maintenance window. Can be either `ANYTIME` or `WEEKLY`. A day and hour of window need to be specified with weekly window.
     */
    type: pulumi.Input<string>;
}

export interface MdbClickhouseClusterMlModel {
    /**
     * The name of the ml model.
     */
    name: pulumi.Input<string>;
    /**
     * Type of the model.
     */
    type: pulumi.Input<string>;
    /**
     * Model file URL. You can only use models stored in Yandex Object Storage.
     */
    uri: pulumi.Input<string>;
}

export interface MdbClickhouseClusterShard {
    /**
     * The name of shard.
     */
    name: pulumi.Input<string>;
    /**
     * Resources allocated to host of the shard. The resources specified for the shard takes precedence over the resources specified for the cluster. The structure is documented below.
     */
    resources?: pulumi.Input<inputs.MdbClickhouseClusterShardResources>;
    /**
     * The weight of shard.
     */
    weight?: pulumi.Input<number>;
}

export interface MdbClickhouseClusterShardGroup {
    /**
     * Description of the shard group.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the shard group, used as cluster name in Distributed tables.
     */
    name: pulumi.Input<string>;
    /**
     * List of shards names that belong to the shard group.
     */
    shardNames: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MdbClickhouseClusterShardResources {
    /**
     * Volume of the storage available to a host, in gigabytes.
     */
    diskSize?: pulumi.Input<number>;
    /**
     * Type of the storage of hosts.
     */
    diskTypeId?: pulumi.Input<string>;
    resourcePresetId?: pulumi.Input<string>;
}

export interface MdbClickhouseClusterUser {
    /**
     * The name of the user.
     */
    name: pulumi.Input<string>;
    /**
     * The password of the user.
     */
    password: pulumi.Input<string>;
    /**
     * Set of permissions granted to the user. The structure is documented below.
     */
    permissions?: pulumi.Input<pulumi.Input<inputs.MdbClickhouseClusterUserPermission>[]>;
    /**
     * Set of user quotas. The structure is documented below.
     */
    quotas?: pulumi.Input<pulumi.Input<inputs.MdbClickhouseClusterUserQuota>[]>;
    /**
     * Custom settings for user. The list is documented below.
     */
    settings?: pulumi.Input<inputs.MdbClickhouseClusterUserSettings>;
}

export interface MdbClickhouseClusterUserPermission {
    /**
     * The name of the database that the permission grants access to.
     */
    databaseName: pulumi.Input<string>;
}

export interface MdbClickhouseClusterUserQuota {
    /**
     * The number of queries that threw exception.
     */
    errors?: pulumi.Input<number>;
    /**
     * The total query execution time, in milliseconds (wall time).
     */
    executionTime?: pulumi.Input<number>;
    /**
     * Duration of interval for quota in milliseconds.
     */
    intervalDuration: pulumi.Input<number>;
    /**
     * The total number of queries.
     */
    queries?: pulumi.Input<number>;
    /**
     * The total number of source rows read from tables for running the query, on all remote servers.
     */
    readRows?: pulumi.Input<number>;
    /**
     * The total number of rows given as the result.
     */
    resultRows?: pulumi.Input<number>;
}

export interface MdbClickhouseClusterUserSettings {
    /**
     * Include CORS headers in HTTP responces.
     */
    addHttpCorsHeader?: pulumi.Input<boolean>;
    /**
     * Allows or denies DDL queries.
     */
    allowDdl?: pulumi.Input<boolean>;
    /**
     * Enables introspections functions for query profiling.
     */
    allowIntrospectionFunctions?: pulumi.Input<boolean>;
    /**
     * Allows specifying LowCardinality modifier for types of small fixed size (8 or less) in CREATE TABLE statements. Enabling this may increase merge times and memory consumption.
     */
    allowSuspiciousLowCardinalityTypes?: pulumi.Input<boolean>;
    /**
     * Enables asynchronous inserts. Disabled by default.
     */
    asyncInsert?: pulumi.Input<boolean>;
    /**
     * The maximum timeout in milliseconds since the first INSERT query before inserting collected data. If the parameter is set to 0, the timeout is disabled. Default value: 200.
     */
    asyncInsertBusyTimeout?: pulumi.Input<number>;
    /**
     * The maximum size of the unparsed data in bytes collected per query before being inserted. If the parameter is set to 0, asynchronous insertions are disabled. Default value: 100000.
     */
    asyncInsertMaxDataSize?: pulumi.Input<number>;
    /**
     * The maximum timeout in milliseconds since the last INSERT query before dumping collected data. If enabled, the settings prolongs the asyncInsertBusyTimeout with every INSERT query as long as asyncInsertMaxDataSize is not exceeded.
     */
    asyncInsertStaleTimeout?: pulumi.Input<number>;
    /**
     * The maximum number of threads for background data parsing and insertion. If the parameter is set to 0, asynchronous insertions are disabled. Default value: 16.
     */
    asyncInsertThreads?: pulumi.Input<number>;
    /**
     * Cancels HTTP read-only queries (e.g. SELECT) when a client closes the connection without waiting for the response.
     * Default value: false.
     */
    cancelHttpReadonlyQueriesOnClientClose?: pulumi.Input<boolean>;
    /**
     * Enable compilation of queries.
     */
    compile?: pulumi.Input<boolean>;
    /**
     * Turn on expression compilation.
     */
    compileExpressions?: pulumi.Input<boolean>;
    /**
     * Connect timeout in milliseconds on the socket used for communicating with the client.
     */
    connectTimeout?: pulumi.Input<number>;
    /**
     * The timeout in milliseconds for connecting to a remote server for a Distributed table engine, if the ‘shard’ and ‘replica’ sections are used in the cluster definition. If unsuccessful, several attempts are made to connect to various replicas. Default value: 50.
     */
    connectTimeoutWithFailover?: pulumi.Input<number>;
    /**
     * Specifies which of the uniq* functions should be used to perform the COUNT(DISTINCT …) construction.
     */
    countDistinctImplementation?: pulumi.Input<string>;
    /**
     * Sets behaviour on overflow when using DISTINCT. Possible values:
     */
    distinctOverflowMode?: pulumi.Input<string>;
    /**
     * Determine the behavior of distributed subqueries.
     */
    distributedAggregationMemoryEfficient?: pulumi.Input<boolean>;
    /**
     * Timeout for DDL queries, in milliseconds.
     */
    distributedDdlTaskTimeout?: pulumi.Input<number>;
    /**
     * Changes the behaviour of distributed subqueries.
     */
    distributedProductMode?: pulumi.Input<string>;
    /**
     * Allows to retunr empty result.
     */
    emptyResultForAggregationByEmptySet?: pulumi.Input<boolean>;
    /**
     * Enables or disables data compression in the response to an HTTP request.
     */
    enableHttpCompression?: pulumi.Input<boolean>;
    /**
     * Forces a query to an out-of-date replica if updated data is not available.
     */
    fallbackToStaleReplicasForDistributedQueries?: pulumi.Input<boolean>;
    /**
     * Sets the data format of a nested columns.
     */
    flattenNested?: pulumi.Input<boolean>;
    /**
     * Disables query execution if the index can’t be used by date.
     */
    forceIndexByDate?: pulumi.Input<boolean>;
    /**
     * Disables query execution if indexing by the primary key is not possible.
     */
    forcePrimaryKey?: pulumi.Input<boolean>;
    /**
     * Sets behaviour on overflow while GROUP BY operation. Possible values:
     */
    groupByOverflowMode?: pulumi.Input<string>;
    /**
     * Sets the threshold of the number of keys, after that the two-level aggregation should be used.
     */
    groupByTwoLevelThreshold?: pulumi.Input<number>;
    /**
     * Sets the threshold of the number of bytes, after that the two-level aggregation should be used.
     */
    groupByTwoLevelThresholdBytes?: pulumi.Input<number>;
    /**
     * Connection timeout for establishing connection with replica for Hedged requests. Default value: 50 milliseconds.
     */
    hedgedConnectionTimeoutMs?: pulumi.Input<number>;
    /**
     * Timeout for HTTP connection in milliseconds.
     */
    httpConnectionTimeout?: pulumi.Input<number>;
    /**
     * Sets minimal interval between notifications about request process in HTTP header X-ClickHouse-Progress.
     */
    httpHeadersProgressInterval?: pulumi.Input<number>;
    /**
     * Timeout for HTTP connection in milliseconds.
     */
    httpReceiveTimeout?: pulumi.Input<number>;
    /**
     * Timeout for HTTP connection in milliseconds.
     */
    httpSendTimeout?: pulumi.Input<number>;
    /**
     * Timeout to close idle TCP connections after specified number of seconds. Default value: 3600 seconds.
     */
    idleConnectionTimeout?: pulumi.Input<number>;
    /**
     * When performing INSERT queries, replace omitted input column values with default values of the respective columns.
     */
    inputFormatDefaultsForOmittedFields?: pulumi.Input<boolean>;
    /**
     * Enables or disables the insertion of JSON data with nested objects.
     */
    inputFormatImportNestedJson?: pulumi.Input<boolean>;
    /**
     * Enables or disables order-preserving parallel parsing of data formats. Supported only for TSV, TKSV, CSV and JSONEachRow formats.
     */
    inputFormatParallelParsing?: pulumi.Input<boolean>;
    /**
     * Enables or disables the full SQL parser if the fast stream parser can’t parse the data.
     */
    inputFormatValuesInterpretExpressions?: pulumi.Input<boolean>;
    /**
     * The setting sets the maximum number of retries for ClickHouse Keeper (or ZooKeeper) requests during insert into replicated MergeTree. Only Keeper requests which failed due to network error, Keeper session timeout, or request timeout are considered for retries.
     */
    insertKeeperMaxRetries?: pulumi.Input<number>;
    /**
     * Enables the insertion of default values instead of NULL into columns with not nullable data type. Default value: true.
     */
    insertNullAsDefault?: pulumi.Input<boolean>;
    /**
     * Enables the quorum writes.
     */
    insertQuorum?: pulumi.Input<number>;
    /**
     * Write to a quorum timeout in milliseconds.
     */
    insertQuorumTimeout?: pulumi.Input<number>;
    /**
     * Sets behaviour on overflow in JOIN. Possible values:
     */
    joinOverflowMode?: pulumi.Input<string>;
    /**
     * Sets the type of JOIN behaviour. When merging tables, empty cells may appear. ClickHouse fills them differently based on this setting.
     */
    joinUseNulls?: pulumi.Input<boolean>;
    /**
     * Require aliases for subselects and table functions in FROM that more than one table is present.
     */
    joinedSubqueryRequiresAlias?: pulumi.Input<boolean>;
    /**
     * Specifies the algorithm of replicas selection that is used for distributed query processing, one of: random, nearest_hostname, in_order, first_or_random, round_robin. Default value: random.
     */
    loadBalancing?: pulumi.Input<string>;
    /**
     * Method of reading data from local filesystem. Possible values:
     */
    localFilesystemReadMethod?: pulumi.Input<string>;
    /**
     * Setting up query threads logging. Query threads log into the system.query_thread_log table. This setting has effect only when logQueries is true. Queries’ threads run by ClickHouse with this setup are logged according to the rules in the queryThreadLog server configuration parameter. Default value: true.
     */
    logQueryThreads?: pulumi.Input<boolean>;
    /**
     * Allows or restricts using the LowCardinality data type with the Native format.
     */
    lowCardinalityAllowInNativeFormat?: pulumi.Input<boolean>;
    /**
     * Maximum abstract syntax tree depth.
     */
    maxAstDepth?: pulumi.Input<number>;
    /**
     * Maximum abstract syntax tree elements.
     */
    maxAstElements?: pulumi.Input<number>;
    /**
     * A recommendation for what size of the block (in a count of rows) to load from tables.
     */
    maxBlockSize?: pulumi.Input<number>;
    /**
     * Limit in bytes for using memoru for GROUP BY before using swap on disk.
     */
    maxBytesBeforeExternalGroupBy?: pulumi.Input<number>;
    /**
     * This setting is equivalent of the maxBytesBeforeExternalGroupBy setting, except for it is for sort operation (ORDER BY), not aggregation.
     */
    maxBytesBeforeExternalSort?: pulumi.Input<number>;
    /**
     * Limits the maximum size of a hash table in bytes (uncompressed data) when using DISTINCT.
     */
    maxBytesInDistinct?: pulumi.Input<number>;
    /**
     * Limit on maximum size of the hash table for JOIN, in bytes.
     */
    maxBytesInJoin?: pulumi.Input<number>;
    /**
     * Limit on the number of bytes in the set resulting from the execution of the IN section.
     */
    maxBytesInSet?: pulumi.Input<number>;
    /**
     * Limits the maximum number of bytes (uncompressed data) that can be read from a table when running a query.
     */
    maxBytesToRead?: pulumi.Input<number>;
    /**
     * Limits the maximum number of bytes (uncompressed data) that can be read from a table for sorting.
     */
    maxBytesToSort?: pulumi.Input<number>;
    /**
     * Limits the maximum number of bytes (uncompressed data) that can be passed to a remote server or saved in a temporary table when using GLOBAL IN.
     */
    maxBytesToTransfer?: pulumi.Input<number>;
    /**
     * Limits the maximum number of columns that can be read from a table in a single query.
     */
    maxColumnsToRead?: pulumi.Input<number>;
    /**
     * The maximum number of concurrent requests per user. Default value: 0 (no limit).
     */
    maxConcurrentQueriesForUser?: pulumi.Input<number>;
    /**
     * Limits the maximum query execution time in milliseconds.
     */
    maxExecutionTime?: pulumi.Input<number>;
    /**
     * Maximum abstract syntax tree depth after after expansion of aliases.
     */
    maxExpandedAstElements?: pulumi.Input<number>;
    /**
     * Sets the maximum number of parallel threads for the SELECT query data read phase with the FINAL modifier.
     */
    maxFinalThreads?: pulumi.Input<number>;
    /**
     * Limits the maximum number of HTTP GET redirect hops for URL-engine tables.
     */
    maxHttpGetRedirects?: pulumi.Input<number>;
    /**
     * The size of blocks (in a count of rows) to form for insertion into a table.
     */
    maxInsertBlockSize?: pulumi.Input<number>;
    /**
     * The maximum number of threads to execute the INSERT SELECT query. Default value: 0.
     */
    maxInsertThreads?: pulumi.Input<number>;
    /**
     * Limits the maximum memory usage (in bytes) for processing queries on a single server.
     */
    maxMemoryUsage?: pulumi.Input<number>;
    /**
     * Limits the maximum memory usage (in bytes) for processing of user's queries on a single server.
     */
    maxMemoryUsageForUser?: pulumi.Input<number>;
    /**
     * Limits the speed of the data exchange over the network in bytes per second.
     */
    maxNetworkBandwidth?: pulumi.Input<number>;
    /**
     * Limits the speed of the data exchange over the network in bytes per second.
     */
    maxNetworkBandwidthForUser?: pulumi.Input<number>;
    /**
     * Limits maximum recursion depth in the recursive descent parser. Allows controlling the stack size. Zero means unlimited.
     */
    maxParserDepth?: pulumi.Input<number>;
    /**
     * The maximum part of a query that can be taken to RAM for parsing with the SQL parser.
     */
    maxQuerySize?: pulumi.Input<number>;
    /**
     * The maximum size of the buffer to read from the filesystem.
     */
    maxReadBufferSize?: pulumi.Input<number>;
    /**
     * Disables lagging replicas for distributed queries.
     */
    maxReplicaDelayForDistributedQueries?: pulumi.Input<number>;
    /**
     * Limits the number of bytes in the result.
     */
    maxResultBytes?: pulumi.Input<number>;
    /**
     * Limits the number of rows in the result.
     */
    maxResultRows?: pulumi.Input<number>;
    /**
     * Limits the maximum number of different rows when using DISTINCT.
     */
    maxRowsInDistinct?: pulumi.Input<number>;
    /**
     * Limit on maximum size of the hash table for JOIN, in rows.
     */
    maxRowsInJoin?: pulumi.Input<number>;
    /**
     * Limit on the number of rows in the set resulting from the execution of the IN section.
     */
    maxRowsInSet?: pulumi.Input<number>;
    /**
     * Limits the maximum number of unique keys received from aggregation function.
     */
    maxRowsToGroupBy?: pulumi.Input<number>;
    /**
     * Limits the maximum number of rows that can be read from a table when running a query.
     */
    maxRowsToRead?: pulumi.Input<number>;
    /**
     * Limits the maximum number of rows that can be read from a table for sorting.
     */
    maxRowsToSort?: pulumi.Input<number>;
    /**
     * Limits the maximum number of rows that can be passed to a remote server or saved in a temporary table when using GLOBAL IN.
     */
    maxRowsToTransfer?: pulumi.Input<number>;
    /**
     * Limits the maximum number of temporary columns that must be kept in RAM at the same time when running a query, including constant columns.
     */
    maxTemporaryColumns?: pulumi.Input<number>;
    /**
     * The maximum amount of data consumed by temporary files on disk in bytes for all concurrently running queries. Zero means unlimited.
     */
    maxTemporaryDataOnDiskSizeForQuery?: pulumi.Input<number>;
    /**
     * The maximum amount of data consumed by temporary files on disk in bytes for all concurrently running user queries. Zero means unlimited.
     */
    maxTemporaryDataOnDiskSizeForUser?: pulumi.Input<number>;
    /**
     * Limits the maximum number of temporary columns that must be kept in RAM at the same time when running a query, excluding constant columns.
     */
    maxTemporaryNonConstColumns?: pulumi.Input<number>;
    /**
     * The maximum number of query processing threads, excluding threads for retrieving data from remote servers.
     */
    maxThreads?: pulumi.Input<number>;
    /**
     * It represents soft memory limit in case when hard limit is reached on user level. This value is used to compute overcommit ratio for the query. Zero means skip the query.
     */
    memoryOvercommitRatioDenominator?: pulumi.Input<number>;
    /**
     * It represents soft memory limit in case when hard limit is reached on global level. This value is used to compute overcommit ratio for the query. Zero means skip the query.
     */
    memoryOvercommitRatioDenominatorForUser?: pulumi.Input<number>;
    /**
     * Collect random allocations and deallocations and write them into system.trace_log with 'MemorySample' trace_type. The probability is for every alloc/free regardless to the size of the allocation. Possible values: from 0 to 1. Default: 0.
     */
    memoryProfilerSampleProbability?: pulumi.Input<number>;
    /**
     * Memory profiler step (in bytes).  If the next query step requires more memory than this parameter specifies, the memory profiler collects the allocating stack trace. Values lower than a few megabytes slow down query processing. Default value: 4194304 (4 MB). Zero means disabled memory profiler.
     */
    memoryProfilerStep?: pulumi.Input<number>;
    /**
     * Maximum time thread will wait for memory to be freed in the case of memory overcommit on a user level. If the timeout is reached and memory is not freed, an exception is thrown.
     */
    memoryUsageOvercommitMaxWaitMicroseconds?: pulumi.Input<number>;
    /**
     * If ClickHouse should read more than mergeTreeMaxBytesToUseCache bytes in one query, it doesn’t use the cache of uncompressed blocks.
     */
    mergeTreeMaxBytesToUseCache?: pulumi.Input<number>;
    /**
     * If ClickHouse should read more than mergeTreeMaxRowsToUseCache rows in one query, it doesn’t use the cache of uncompressed blocks.
     */
    mergeTreeMaxRowsToUseCache?: pulumi.Input<number>;
    /**
     * If the number of bytes to read from one file of a MergeTree-engine table exceeds merge_tree_min_bytes_for_concurrent_read, then ClickHouse tries to concurrently read from this file in several threads.
     */
    mergeTreeMinBytesForConcurrentRead?: pulumi.Input<number>;
    /**
     * If the number of rows to be read from a file of a MergeTree table exceeds mergeTreeMinRowsForConcurrentRead then ClickHouse tries to perform a concurrent reading from this file on several threads.
     */
    mergeTreeMinRowsForConcurrentRead?: pulumi.Input<number>;
    /**
     * The minimum data volume required for using direct I/O access to the storage disk.
     */
    minBytesToUseDirectIo?: pulumi.Input<number>;
    /**
     * How many times to potentially use a compiled chunk of code before running compilation.
     */
    minCountToCompile?: pulumi.Input<number>;
    /**
     * A query waits for expression compilation process to complete prior to continuing execution.
     */
    minCountToCompileExpression?: pulumi.Input<number>;
    /**
     * Minimal execution speed in rows per second.
     */
    minExecutionSpeed?: pulumi.Input<number>;
    /**
     * Minimal execution speed in bytes per second.
     */
    minExecutionSpeedBytes?: pulumi.Input<number>;
    /**
     * Sets the minimum number of bytes in the block which can be inserted into a table by an INSERT query.
     */
    minInsertBlockSizeBytes?: pulumi.Input<number>;
    /**
     * Sets the minimum number of rows in the block which can be inserted into a table by an INSERT query.
     */
    minInsertBlockSizeRows?: pulumi.Input<number>;
    /**
     * If the value is true, integers appear in quotes when using JSON* Int64 and UInt64 formats (for compatibility with most JavaScript implementations); otherwise, integers are output without the quotes.
     */
    outputFormatJsonQuote64bitIntegers?: pulumi.Input<boolean>;
    /**
     * Enables +nan, -nan, +inf, -inf outputs in JSON output format.
     */
    outputFormatJsonQuoteDenormals?: pulumi.Input<boolean>;
    /**
     * Enables/disables preferable using the localhost replica when processing distributed queries. Default value: true.
     */
    preferLocalhostReplica?: pulumi.Input<boolean>;
    /**
     * Query priority.
     */
    priority?: pulumi.Input<number>;
    /**
     * Quota accounting mode.
     */
    quotaMode?: pulumi.Input<string>;
    /**
     * Sets behaviour on overflow while read. Possible values:
     */
    readOverflowMode?: pulumi.Input<string>;
    /**
     * Restricts permissions for reading data, write data and change settings queries.
     */
    readonly?: pulumi.Input<number>;
    /**
     * Receive timeout in milliseconds on the socket used for communicating with the client.
     */
    receiveTimeout?: pulumi.Input<number>;
    /**
     * Method of reading data from remote filesystem, one of: `read`, `threadpool`.
     */
    remoteFilesystemReadMethod?: pulumi.Input<string>;
    /**
     * For ALTER ... ATTACH|DETACH|DROP queries, you can use the replicationAlterPartitionsSync setting to set up waiting.
     */
    replicationAlterPartitionsSync?: pulumi.Input<number>;
    /**
     * Sets behaviour on overflow in result. Possible values:
     */
    resultOverflowMode?: pulumi.Input<string>;
    /**
     * Enables or disables sequential consistency for SELECT queries.
     */
    selectSequentialConsistency?: pulumi.Input<boolean>;
    /**
     * Enables or disables X-ClickHouse-Progress HTTP response headers in clickhouse-server responses.
     */
    sendProgressInHttpHeaders?: pulumi.Input<boolean>;
    /**
     * Send timeout in milliseconds on the socket used for communicating with the client.
     */
    sendTimeout?: pulumi.Input<number>;
    /**
     * Sets behaviour on overflow in the set resulting. Possible values:
     */
    setOverflowMode?: pulumi.Input<string>;
    /**
     * Enables or disables silently skipping of unavailable shards.
     */
    skipUnavailableShards?: pulumi.Input<boolean>;
    /**
     * Sets behaviour on overflow while sort. Possible values:
     */
    sortOverflowMode?: pulumi.Input<string>;
    /**
     * Timeout (in seconds) between checks of execution speed. It is checked that execution speed is not less that specified in minExecutionSpeed parameter.
     * Must be at least 1000.
     */
    timeoutBeforeCheckingExecutionSpeed?: pulumi.Input<number>;
    /**
     * Sets behaviour on overflow. Possible values:
     */
    timeoutOverflowMode?: pulumi.Input<string>;
    /**
     * Sets behaviour on overflow. Possible values:
     */
    transferOverflowMode?: pulumi.Input<string>;
    /**
     * Enables equality of NULL values for IN operator.
     */
    transformNullIn?: pulumi.Input<boolean>;
    /**
     * Enables hedged requests logic for remote queries. It allows to establish many connections with different replicas for query. New connection is enabled in case existent connection(s) with replica(s) were not established within hedgedConnectionTimeout or no data was received within receive_data_timeout. Query uses the first connection which send non empty progress packet (or data packet, if allow_changing_replica_until_first_data_packet); other connections are cancelled. Queries with maxParallelReplicas > 1 are supported. Default value: true.
     */
    useHedgedRequests?: pulumi.Input<boolean>;
    /**
     * Whether to use a cache of uncompressed blocks.
     */
    useUncompressedCache?: pulumi.Input<boolean>;
    /**
     * Enables waiting for processing of asynchronous insertion. If enabled, server returns OK only after the data is inserted.
     */
    waitForAsyncInsert?: pulumi.Input<boolean>;
    /**
     * The timeout (in seconds) for waiting for processing of asynchronous insertion. Value must be at least 1000 (1 second).
     */
    waitForAsyncInsertTimeout?: pulumi.Input<number>;
}

export interface MdbClickhouseClusterZookeeper {
    /**
     * Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
     */
    resources?: pulumi.Input<inputs.MdbClickhouseClusterZookeeperResources>;
}

export interface MdbClickhouseClusterZookeeperResources {
    /**
     * Volume of the storage available to a host, in gigabytes.
     */
    diskSize?: pulumi.Input<number>;
    /**
     * Type of the storage of hosts.
     */
    diskTypeId?: pulumi.Input<string>;
    resourcePresetId?: pulumi.Input<string>;
}

export interface MdbElasticsearchClusterConfig {
    /**
     * Password for admin user of Elasticsearch.
     */
    adminPassword: pulumi.Input<string>;
    /**
     * Configuration for Elasticsearch data nodes subcluster. The structure is documented below.
     */
    dataNode: pulumi.Input<inputs.MdbElasticsearchClusterConfigDataNode>;
    /**
     * Edition of Elasticsearch. For more information, see [the official documentation](https://cloud.yandex.com/en-ru/docs/managed-elasticsearch/concepts/es-editions).
     */
    edition?: pulumi.Input<string>;
    /**
     * Configuration for Elasticsearch master nodes subcluster. The structure is documented below.
     */
    masterNode?: pulumi.Input<inputs.MdbElasticsearchClusterConfigMasterNode>;
    /**
     * A set of Elasticsearch plugins to install.
     */
    plugins?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Version of Elasticsearch.
     */
    version?: pulumi.Input<string>;
}

export interface MdbElasticsearchClusterConfigDataNode {
    /**
     * Resources allocated to hosts of the Elasticsearch data nodes subcluster. The structure is documented below.
     */
    resources: pulumi.Input<inputs.MdbElasticsearchClusterConfigDataNodeResources>;
}

export interface MdbElasticsearchClusterConfigDataNodeResources {
    /**
     * Volume of the storage available to a host, in gigabytes.
     */
    diskSize: pulumi.Input<number>;
    /**
     * Type of the storage of Elasticsearch hosts.
     */
    diskTypeId: pulumi.Input<string>;
    resourcePresetId: pulumi.Input<string>;
}

export interface MdbElasticsearchClusterConfigMasterNode {
    /**
     * Resources allocated to hosts of the Elasticsearch master nodes subcluster. The structure is documented below.
     */
    resources: pulumi.Input<inputs.MdbElasticsearchClusterConfigMasterNodeResources>;
}

export interface MdbElasticsearchClusterConfigMasterNodeResources {
    /**
     * Volume of the storage available to a host, in gigabytes.
     */
    diskSize: pulumi.Input<number>;
    /**
     * Type of the storage of Elasticsearch hosts.
     */
    diskTypeId: pulumi.Input<string>;
    resourcePresetId: pulumi.Input<string>;
}

export interface MdbElasticsearchClusterHost {
    /**
     * Sets whether the host should get a public IP address on creation. Can be either `true` or `false`.
     */
    assignPublicIp?: pulumi.Input<boolean>;
    /**
     * The fully qualified domain name of the host.
     */
    fqdn?: pulumi.Input<string>;
    /**
     * User defined host name.
     */
    name: pulumi.Input<string>;
    /**
     * The ID of the subnet, to which the host belongs. The subnet must
     * be a part of the network to which the cluster belongs.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * The type of the host to be deployed. Can be either `DATA_NODE` or `MASTER_NODE`.
     */
    type: pulumi.Input<string>;
    /**
     * The availability zone where the Elasticsearch host will be created.
     * For more information see [the official documentation](https://cloud.yandex.com/docs/overview/concepts/geo-scope).
     */
    zone: pulumi.Input<string>;
}

export interface MdbElasticsearchClusterMaintenanceWindow {
    /**
     * Day of week for maintenance window if window type is weekly. Possible values: `MON`, `TUE`, `WED`, `THU`, `FRI`, `SAT`, `SUN`.
     */
    day?: pulumi.Input<string>;
    /**
     * Hour of day in UTC time zone (1-24) for maintenance window if window type is weekly.
     */
    hour?: pulumi.Input<number>;
    /**
     * Type of maintenance window. Can be either `ANYTIME` or `WEEKLY`. A day and hour of window need to be specified with weekly window.
     */
    type: pulumi.Input<string>;
}

export interface MdbGreenplumClusterAccess {
    /**
     * Allow access for [Yandex DataLens](https://cloud.yandex.com/services/datalens).
     */
    dataLens?: pulumi.Input<boolean>;
    /**
     * Allow access for [DataTransfer](https://cloud.yandex.com/services/data-transfer)
     */
    dataTransfer?: pulumi.Input<boolean>;
    /**
     * Allows access for [SQL queries in the management console](https://cloud.yandex.com/docs/managed-mysql/operations/web-sql-query).
     */
    webSql?: pulumi.Input<boolean>;
}

export interface MdbGreenplumClusterBackupWindowStart {
    /**
     * The hour at which backup will be started (UTC).
     */
    hours?: pulumi.Input<number>;
    /**
     * The minute at which backup will be started (UTC).
     */
    minutes?: pulumi.Input<number>;
}

export interface MdbGreenplumClusterCloudStorage {
    /**
     * Whether to use cloud storage or not.
     */
    enable?: pulumi.Input<boolean>;
}

export interface MdbGreenplumClusterMaintenanceWindow {
    /**
     * Day of the week (in `DDD` format). Allowed values: "MON", "TUE", "WED", "THU", "FRI", "SAT", "SUN"
     */
    day?: pulumi.Input<string>;
    /**
     * Hour of the day in UTC (in `HH` format). Allowed value is between 0 and 23.
     */
    hour?: pulumi.Input<number>;
    /**
     * Type of maintenance window. Can be either `ANYTIME` or `WEEKLY`. A day and hour of window need to be specified with weekly window.
     */
    type: pulumi.Input<string>;
}

export interface MdbGreenplumClusterMasterHost {
    /**
     * Sets whether the master hosts should get a public IP address on creation. Changing this parameter for an existing host is not supported at the moment.
     */
    assignPublicIp?: pulumi.Input<boolean>;
    /**
     * (Computed) The fully qualified domain name of the host.
     */
    fqdn?: pulumi.Input<string>;
}

export interface MdbGreenplumClusterMasterSubcluster {
    /**
     * Resources allocated to hosts for master subcluster of the Greenplum cluster. The structure is documented below.
     */
    resources: pulumi.Input<inputs.MdbGreenplumClusterMasterSubclusterResources>;
}

export interface MdbGreenplumClusterMasterSubclusterResources {
    diskSize: pulumi.Input<number>;
    diskTypeId: pulumi.Input<string>;
    resourcePresetId: pulumi.Input<string>;
}

export interface MdbGreenplumClusterPoolerConfig {
    /**
     * Value for `poolClientIdleTimeout` [parameter in Odyssey](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_ttl-integer).
     */
    poolClientIdleTimeout?: pulumi.Input<number>;
    /**
     * Value for `poolSize` [parameter in Odyssey](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_size-integer).
     */
    poolSize?: pulumi.Input<number>;
    /**
     * Mode that the connection pooler is working in. See descriptions of all modes in the [documentation for Odyssey](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string.
     */
    poolingMode?: pulumi.Input<string>;
}

export interface MdbGreenplumClusterPxfConfig {
    /**
     * The Tomcat server connection timeout for read operations in seconds. Value is between 5 and 600.
     */
    connectionTimeout?: pulumi.Input<number>;
    /**
     * The maximum number of PXF tomcat threads. Value is between 1 and 1024.
     */
    maxThreads?: pulumi.Input<number>;
    /**
     * Identifies whether or not core streaming threads are allowed to time out.
     */
    poolAllowCoreThreadTimeout?: pulumi.Input<boolean>;
    /**
     * The number of core streaming threads. Value is between 1 and 1024.
     */
    poolCoreSize?: pulumi.Input<number>;
    /**
     * The maximum allowed number of core streaming threads. Value is between 1 and 1024.
     */
    poolMaxSize?: pulumi.Input<number>;
    /**
     * The capacity of the core streaming thread pool queue. Value is positive.
     */
    poolQueueCapacity?: pulumi.Input<number>;
    /**
     * The Tomcat server connection timeout for write operations in seconds. Value is between 5 and 600.
     */
    uploadTimeout?: pulumi.Input<number>;
    /**
     * Maximum JVM heap size for PXF daemon. Value is between 64 and 16384.
     */
    xms?: pulumi.Input<number>;
    /**
     * Initial JVM heap size for PXF daemon. Value is between 64 and 16384.
     */
    xmx?: pulumi.Input<number>;
}

export interface MdbGreenplumClusterSegmentHost {
    /**
     * (Computed) The fully qualified domain name of the host.
     */
    fqdn?: pulumi.Input<string>;
}

export interface MdbGreenplumClusterSegmentSubcluster {
    /**
     * Resources allocated to hosts for segment subcluster of the Greenplum cluster. The structure is documented below.
     */
    resources: pulumi.Input<inputs.MdbGreenplumClusterSegmentSubclusterResources>;
}

export interface MdbGreenplumClusterSegmentSubclusterResources {
    diskSize: pulumi.Input<number>;
    diskTypeId: pulumi.Input<string>;
    resourcePresetId: pulumi.Input<string>;
}

export interface MdbKafkaClusterConfig {
    /**
     * Access policy to the Kafka cluster. The structure is documented below.
     *
     * - - -
     */
    access?: pulumi.Input<inputs.MdbKafkaClusterConfigAccess>;
    /**
     * Determines whether each broker will be assigned a public IP address. The default is `false`.
     */
    assignPublicIp?: pulumi.Input<boolean>;
    /**
     * Count of brokers per availability zone. The default is `1`.
     */
    brokersCount?: pulumi.Input<number>;
    diskSizeAutoscaling?: pulumi.Input<inputs.MdbKafkaClusterConfigDiskSizeAutoscaling>;
    /**
     * Configuration of the Kafka subcluster. The structure is documented below.
     */
    kafka: pulumi.Input<inputs.MdbKafkaClusterConfigKafka>;
    /**
     * Enables managed schema registry on cluster. The default is `false`.
     */
    schemaRegistry?: pulumi.Input<boolean>;
    /**
     * @deprecated The 'unmanaged_topics' field has been deprecated, because feature enabled permanently and can't be disabled.
     */
    unmanagedTopics?: pulumi.Input<boolean>;
    /**
     * Version of the Kafka server software.
     */
    version: pulumi.Input<string>;
    /**
     * List of availability zones.
     */
    zones: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Configuration of the ZooKeeper subcluster. The structure is documented below.
     */
    zookeeper?: pulumi.Input<inputs.MdbKafkaClusterConfigZookeeper>;
}

export interface MdbKafkaClusterConfigAccess {
    /**
     * Allow access for [DataTransfer](https://cloud.yandex.com/services/data-transfer)
     *
     * The `user` block is deprecated. To manage users, please switch to using a separate resource type
     * `yandex.MdbKafkaUser`. The `user` block supports:
     */
    dataTransfer?: pulumi.Input<boolean>;
}

export interface MdbKafkaClusterConfigDiskSizeAutoscaling {
    diskSizeLimit: pulumi.Input<number>;
    emergencyUsageThreshold?: pulumi.Input<number>;
    plannedUsageThreshold?: pulumi.Input<number>;
}

export interface MdbKafkaClusterConfigKafka {
    /**
     * User-defined settings for the Kafka cluster. The structure is documented below.
     */
    kafkaConfig?: pulumi.Input<inputs.MdbKafkaClusterConfigKafkaKafkaConfig>;
    /**
     * Resources allocated to hosts of the Kafka subcluster. The structure is documented below.
     */
    resources: pulumi.Input<inputs.MdbKafkaClusterConfigKafkaResources>;
}

export interface MdbKafkaClusterConfigKafkaKafkaConfig {
    autoCreateTopicsEnable?: pulumi.Input<boolean>;
    /**
     * , `logFlushIntervalMessages`, `logFlushIntervalMs`, `logFlushSchedulerIntervalMs`, `logRetentionBytes`, `logRetentionHours`,
     * `logRetentionMinutes`, `logRetentionMs`, `logSegmentBytes`, `logPreallocate`, `socketSendBufferBytes`, `socketReceiveBufferBytes`, `autoCreateTopicsEnable`,
     * `numPartitions`, `defaultReplicationFactor`, `messageMaxBytes`, `replicaFetchMaxBytes`, `sslCipherSuites`, `offsetsRetentionMinutes`, `saslEnabledMechanisms` - (Optional) Kafka server settings. For more information, see
     * [the official documentation](https://cloud.yandex.com/docs/managed-kafka/operations/cluster-update)
     * and [the Kafka documentation](https://kafka.apache.org/documentation/#configuration).
     */
    compressionType?: pulumi.Input<string>;
    defaultReplicationFactor?: pulumi.Input<string>;
    logFlushIntervalMessages?: pulumi.Input<string>;
    logFlushIntervalMs?: pulumi.Input<string>;
    logFlushSchedulerIntervalMs?: pulumi.Input<string>;
    logPreallocate?: pulumi.Input<boolean>;
    logRetentionBytes?: pulumi.Input<string>;
    logRetentionHours?: pulumi.Input<string>;
    logRetentionMinutes?: pulumi.Input<string>;
    logRetentionMs?: pulumi.Input<string>;
    logSegmentBytes?: pulumi.Input<string>;
    messageMaxBytes?: pulumi.Input<string>;
    numPartitions?: pulumi.Input<string>;
    offsetsRetentionMinutes?: pulumi.Input<string>;
    replicaFetchMaxBytes?: pulumi.Input<string>;
    saslEnabledMechanisms?: pulumi.Input<pulumi.Input<string>[]>;
    socketReceiveBufferBytes?: pulumi.Input<string>;
    socketSendBufferBytes?: pulumi.Input<string>;
    sslCipherSuites?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MdbKafkaClusterConfigKafkaResources {
    /**
     * Volume of the storage available to a ZooKeeper host, in gigabytes.
     */
    diskSize: pulumi.Input<number>;
    /**
     * Type of the storage of ZooKeeper hosts.
     * For more information see [the official documentation](https://cloud.yandex.com/docs/managed-kafka/concepts/storage).
     */
    diskTypeId: pulumi.Input<string>;
    resourcePresetId: pulumi.Input<string>;
}

export interface MdbKafkaClusterConfigZookeeper {
    /**
     * Resources allocated to hosts of the ZooKeeper subcluster. The structure is documented below.
     */
    resources?: pulumi.Input<inputs.MdbKafkaClusterConfigZookeeperResources>;
}

export interface MdbKafkaClusterConfigZookeeperResources {
    /**
     * Volume of the storage available to a ZooKeeper host, in gigabytes.
     */
    diskSize?: pulumi.Input<number>;
    /**
     * Type of the storage of ZooKeeper hosts.
     * For more information see [the official documentation](https://cloud.yandex.com/docs/managed-kafka/concepts/storage).
     */
    diskTypeId?: pulumi.Input<string>;
    resourcePresetId?: pulumi.Input<string>;
}

export interface MdbKafkaClusterHost {
    /**
     * Determines whether each broker will be assigned a public IP address. The default is `false`.
     */
    assignPublicIp?: pulumi.Input<boolean>;
    /**
     * Health of the host.
     */
    health?: pulumi.Input<string>;
    /**
     * Name of the Kafka cluster. Provided by the client when the cluster is created.
     */
    name?: pulumi.Input<string>;
    /**
     * The role type to grant to the topic.
     */
    role?: pulumi.Input<string>;
    /**
     * The ID of the subnet, to which the host belongs.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * The availability zone where the Kafka host was created.
     */
    zoneId?: pulumi.Input<string>;
}

export interface MdbKafkaClusterMaintenanceWindow {
    /**
     * Day of the week (in `DDD` format). Allowed values: "MON", "TUE", "WED", "THU", "FRI", "SAT", "SUN"
     */
    day?: pulumi.Input<string>;
    /**
     * Hour of the day in UTC (in `HH` format). Allowed value is between 1 and 24.
     *
     * - - -
     */
    hour?: pulumi.Input<number>;
    /**
     * Type of maintenance window. Can be either `ANYTIME` or `WEEKLY`. A day and hour of window need to be specified with weekly window.
     */
    type: pulumi.Input<string>;
}

export interface MdbKafkaClusterTopic {
    /**
     * Name of the Kafka cluster. Provided by the client when the cluster is created.
     */
    name: pulumi.Input<string>;
    /**
     * The number of the topic's partitions.
     */
    partitions: pulumi.Input<number>;
    /**
     * Amount of data copies (replicas) for the topic in the cluster.
     */
    replicationFactor: pulumi.Input<number>;
    /**
     * User-defined settings for the topic. The structure is documented below.
     */
    topicConfig?: pulumi.Input<inputs.MdbKafkaClusterTopicTopicConfig>;
}

export interface MdbKafkaClusterTopicTopicConfig {
    cleanupPolicy?: pulumi.Input<string>;
    /**
     * , `deleteRetentionMs`, `fileDeleteDelayMs`, `flushMessages`, `flushMs`, `minCompactionLagMs`,
     * `retentionBytes`, `retentionMs`, `maxMessageBytes`, `minInsyncReplicas`, `segmentBytes`, `preallocate`, - (Optional) Kafka topic settings. For more information, see
     * [the official documentation](https://cloud.yandex.com/docs/managed-kafka/operations/cluster-topics#update-topic)
     * and [the Kafka documentation](https://kafka.apache.org/documentation/#configuration).
     */
    compressionType?: pulumi.Input<string>;
    deleteRetentionMs?: pulumi.Input<string>;
    fileDeleteDelayMs?: pulumi.Input<string>;
    flushMessages?: pulumi.Input<string>;
    flushMs?: pulumi.Input<string>;
    maxMessageBytes?: pulumi.Input<string>;
    minCompactionLagMs?: pulumi.Input<string>;
    minInsyncReplicas?: pulumi.Input<string>;
    preallocate?: pulumi.Input<boolean>;
    retentionBytes?: pulumi.Input<string>;
    retentionMs?: pulumi.Input<string>;
    segmentBytes?: pulumi.Input<string>;
}

export interface MdbKafkaClusterUser {
    /**
     * Name of the Kafka cluster. Provided by the client when the cluster is created.
     */
    name: pulumi.Input<string>;
    /**
     * The password of the user.
     */
    password: pulumi.Input<string>;
    /**
     * Set of permissions granted to the user. The structure is documented below.
     */
    permissions?: pulumi.Input<pulumi.Input<inputs.MdbKafkaClusterUserPermission>[]>;
}

export interface MdbKafkaClusterUserPermission {
    /**
     * Set of hosts, to which this permission grants access to.
     *
     * The `topic` block is deprecated. To manage topics, please switch to using a separate resource type
     * `yandex.MdbKafkaTopic`. The `topic` block supports:
     */
    allowHosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The role type to grant to the topic.
     */
    role: pulumi.Input<string>;
    /**
     * The name of the topic that the permission grants access to.
     */
    topicName: pulumi.Input<string>;
}

export interface MdbKafkaConnectorConnectorConfigMirrormaker {
    replicationFactor: pulumi.Input<number>;
    sourceCluster: pulumi.Input<inputs.MdbKafkaConnectorConnectorConfigMirrormakerSourceCluster>;
    targetCluster: pulumi.Input<inputs.MdbKafkaConnectorConnectorConfigMirrormakerTargetCluster>;
    topics: pulumi.Input<string>;
}

export interface MdbKafkaConnectorConnectorConfigMirrormakerSourceCluster {
    alias?: pulumi.Input<string>;
    externalClusters?: pulumi.Input<pulumi.Input<inputs.MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalCluster>[]>;
    thisClusters?: pulumi.Input<pulumi.Input<inputs.MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisCluster>[]>;
}

export interface MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterExternalCluster {
    bootstrapServers: pulumi.Input<string>;
    saslMechanism?: pulumi.Input<string>;
    saslPassword?: pulumi.Input<string>;
    saslUsername?: pulumi.Input<string>;
    securityProtocol?: pulumi.Input<string>;
}

export interface MdbKafkaConnectorConnectorConfigMirrormakerSourceClusterThisCluster {
}

export interface MdbKafkaConnectorConnectorConfigMirrormakerTargetCluster {
    alias?: pulumi.Input<string>;
    externalClusters?: pulumi.Input<pulumi.Input<inputs.MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalCluster>[]>;
    thisClusters?: pulumi.Input<pulumi.Input<inputs.MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisCluster>[]>;
}

export interface MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterExternalCluster {
    bootstrapServers: pulumi.Input<string>;
    saslMechanism?: pulumi.Input<string>;
    saslPassword?: pulumi.Input<string>;
    saslUsername?: pulumi.Input<string>;
    securityProtocol?: pulumi.Input<string>;
}

export interface MdbKafkaConnectorConnectorConfigMirrormakerTargetClusterThisCluster {
}

export interface MdbKafkaConnectorConnectorConfigS3Sink {
    fileCompressionType: pulumi.Input<string>;
    fileMaxRecords?: pulumi.Input<number>;
    s3Connection: pulumi.Input<inputs.MdbKafkaConnectorConnectorConfigS3SinkS3Connection>;
    topics: pulumi.Input<string>;
}

export interface MdbKafkaConnectorConnectorConfigS3SinkS3Connection {
    bucketName: pulumi.Input<string>;
    externalS3s: pulumi.Input<pulumi.Input<inputs.MdbKafkaConnectorConnectorConfigS3SinkS3ConnectionExternalS3>[]>;
}

export interface MdbKafkaConnectorConnectorConfigS3SinkS3ConnectionExternalS3 {
    accessKeyId?: pulumi.Input<string>;
    endpoint: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    secretAccessKey?: pulumi.Input<string>;
}

export interface MdbKafkaTopicTopicConfig {
    /**
     * , `compressionType`, `deleteRetentionMs`, `fileDeleteDelayMs`, `flushMessages`, `flushMs`, 
     * `minCompactionLagMs`, `retentionBytes`, `retentionMs`, `maxMessageBytes`, `minInsyncReplicas`,
     * `segmentBytes`, `preallocate` - (Optional) Kafka topic settings. For more information, see
     * [the official documentation](https://cloud.yandex.com/en-ru/docs/managed-kafka/concepts/settings-list#topic-settings)
     * and [the Kafka documentation](https://kafka.apache.org/documentation/#topicconfigs).
     */
    cleanupPolicy?: pulumi.Input<string>;
    compressionType?: pulumi.Input<string>;
    deleteRetentionMs?: pulumi.Input<string>;
    fileDeleteDelayMs?: pulumi.Input<string>;
    flushMessages?: pulumi.Input<string>;
    flushMs?: pulumi.Input<string>;
    maxMessageBytes?: pulumi.Input<string>;
    minCompactionLagMs?: pulumi.Input<string>;
    minInsyncReplicas?: pulumi.Input<string>;
    preallocate?: pulumi.Input<boolean>;
    retentionBytes?: pulumi.Input<string>;
    retentionMs?: pulumi.Input<string>;
    segmentBytes?: pulumi.Input<string>;
}

export interface MdbKafkaUserPermission {
    /**
     * Set of hosts, to which this permission grants access to.
     */
    allowHosts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The role type to grant to the topic.
     */
    role: pulumi.Input<string>;
    /**
     * The name of the topic that the permission grants access to.
     */
    topicName: pulumi.Input<string>;
}

export interface MdbMongodbClusterClusterConfig {
    /**
     * Access policy to the MongoDB cluster. The structure is documented below.
     */
    access?: pulumi.Input<inputs.MdbMongodbClusterClusterConfigAccess>;
    /**
     * Retain period of automatically created backup in days.
     */
    backupRetainPeriodDays?: pulumi.Input<number>;
    /**
     * Time to start the daily backup, in the UTC timezone. The structure is documented below.
     */
    backupWindowStart?: pulumi.Input<inputs.MdbMongodbClusterClusterConfigBackupWindowStart>;
    /**
     * Feature compatibility version of MongoDB. If not provided version is taken. Can be either `6.0`, `5.0`, `4.4` and `4.2`.
     */
    featureCompatibilityVersion?: pulumi.Input<string>;
    /**
     * Configuration of the mongocfg service. The structure is documented below.
     */
    mongocfg?: pulumi.Input<inputs.MdbMongodbClusterClusterConfigMongocfg>;
    /**
     * Configuration of the mongod service. The structure is documented below.
     */
    mongod?: pulumi.Input<inputs.MdbMongodbClusterClusterConfigMongod>;
    /**
     * Configuration of the mongos service. The structure is documented below.
     */
    mongos?: pulumi.Input<inputs.MdbMongodbClusterClusterConfigMongos>;
    /**
     * Performance diagnostics to the MongoDB cluster. The structure is documented below.
     */
    performanceDiagnostics?: pulumi.Input<inputs.MdbMongodbClusterClusterConfigPerformanceDiagnostics>;
    /**
     * Version of the MongoDB server software. Can be either `4.2`, `4.4`, `4.4-enterprise`, `5.0`, `5.0-enterprise`, `6.0` and `6.0-enterprise`.
     */
    version: pulumi.Input<string>;
}

export interface MdbMongodbClusterClusterConfigAccess {
    /**
     * Allow access for [Yandex DataLens](https://cloud.yandex.com/services/datalens).
     */
    dataLens?: pulumi.Input<boolean>;
    /**
     * Allow access for [DataTransfer](https://cloud.yandex.com/services/data-transfer)
     */
    dataTransfer?: pulumi.Input<boolean>;
}

export interface MdbMongodbClusterClusterConfigBackupWindowStart {
    /**
     * The hour at which backup will be started.
     */
    hours?: pulumi.Input<number>;
    /**
     * The minute at which backup will be started.
     */
    minutes?: pulumi.Input<number>;
}

export interface MdbMongodbClusterClusterConfigMongocfg {
    /**
     * A set of network settings
     * (see the [net](https://www.mongodb.com/docs/manual/reference/configuration-options/#net-options) option).
     * The structure is documented below.
     */
    net?: pulumi.Input<inputs.MdbMongodbClusterClusterConfigMongocfgNet>;
    /**
     * A set of profiling settings
     * (see the [operationProfiling](https://www.mongodb.com/docs/manual/reference/configuration-options/#operationprofiling-options) option).
     * The structure is documented below.
     */
    operationProfiling?: pulumi.Input<inputs.MdbMongodbClusterClusterConfigMongocfgOperationProfiling>;
    /**
     * A set of storage settings
     * (see the [storage](https://www.mongodb.com/docs/manual/reference/configuration-options/#storage-options) option).
     * The structure is documented below.
     */
    storage?: pulumi.Input<inputs.MdbMongodbClusterClusterConfigMongocfgStorage>;
}

export interface MdbMongodbClusterClusterConfigMongocfgNet {
    /**
     * The maximum number of simultaneous connections that host will accept.
     * For more information, see the [net.maxIncomingConnections](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-net.maxIncomingConnections)
     * description in the official documentation.
     */
    maxIncomingConnections?: pulumi.Input<number>;
}

export interface MdbMongodbClusterClusterConfigMongocfgOperationProfiling {
    /**
     * Specifies which operations should be profiled. The following profiler levels are available: off, slow_op, all.
     * For more information, see the [operationProfiling.mode](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-operationProfiling.mode)
     * description in the official documentation.
     */
    mode?: pulumi.Input<string>;
    /**
     * The slow operation time threshold, in milliseconds. Operations that run for longer than this threshold are considered slow.
     * For more information, see the [operationProfiling.slowOpThresholdMs](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-operationProfiling.slowOpThresholdMs)
     * description in the official documentation.
     */
    slowOpThreshold?: pulumi.Input<number>;
}

export interface MdbMongodbClusterClusterConfigMongocfgStorage {
    /**
     * The WiredTiger engine settings.
     * (see the [storage.wiredTiger](https://www.mongodb.com/docs/manual/reference/configuration-options/#storage.wiredtiger-options) option).
     * These settings available only on `mongod` hosts. The structure is documented below.
     */
    wiredTiger?: pulumi.Input<inputs.MdbMongodbClusterClusterConfigMongocfgStorageWiredTiger>;
}

export interface MdbMongodbClusterClusterConfigMongocfgStorageWiredTiger {
    /**
     * Defines the maximum size of the internal cache that WiredTiger will use for all data.
     * For more information, see the [storage.wiredTiger.engineConfig.cacheSizeGB](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-storage.wiredTiger.engineConfig.cacheSizeGB)
     * description in the official documentation.
     */
    cacheSizeGb?: pulumi.Input<number>;
}

export interface MdbMongodbClusterClusterConfigMongod {
    /**
     * A set of audit log settings 
     * (see the [auditLog](https://www.mongodb.com/docs/manual/reference/configuration-options/#auditlog-options) option).
     * The structure is documented below. Available only in enterprise edition.
     */
    auditLog?: pulumi.Input<inputs.MdbMongodbClusterClusterConfigMongodAuditLog>;
    /**
     * A set of network settings
     * (see the [net](https://www.mongodb.com/docs/manual/reference/configuration-options/#net-options) option).
     * The structure is documented below.
     */
    net?: pulumi.Input<inputs.MdbMongodbClusterClusterConfigMongodNet>;
    /**
     * A set of profiling settings
     * (see the [operationProfiling](https://www.mongodb.com/docs/manual/reference/configuration-options/#operationprofiling-options) option).
     * The structure is documented below.
     */
    operationProfiling?: pulumi.Input<inputs.MdbMongodbClusterClusterConfigMongodOperationProfiling>;
    /**
     * A set of MongoDB Security settings
     * (see the [security](https://www.mongodb.com/docs/manual/reference/configuration-options/#security-options) option).
     * The structure is documented below. Available only in enterprise edition.
     */
    security?: pulumi.Input<inputs.MdbMongodbClusterClusterConfigMongodSecurity>;
    /**
     * A set of MongoDB Server Parameters 
     * (see the [setParameter](https://www.mongodb.com/docs/manual/reference/configuration-options/#setparameter-option) option).
     * The structure is documented below.
     */
    setParameter?: pulumi.Input<inputs.MdbMongodbClusterClusterConfigMongodSetParameter>;
    /**
     * A set of storage settings
     * (see the [storage](https://www.mongodb.com/docs/manual/reference/configuration-options/#storage-options) option).
     * The structure is documented below.
     */
    storage?: pulumi.Input<inputs.MdbMongodbClusterClusterConfigMongodStorage>;
}

export interface MdbMongodbClusterClusterConfigMongodAuditLog {
    /**
     * Configuration of the audit log filter in JSON format.
     * For more information see [auditLog.filter](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-auditLog.filter)
     * description in the official documentation. Available only in enterprise edition.
     */
    filter?: pulumi.Input<string>;
    /**
     * Specifies if a node allows runtime configuration of audit filters and the auditAuthorizationSuccess variable.
     * For more information see [auditLog.runtimeConfiguration](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-auditLog.runtimeConfiguration)
     * description in the official documentation. Available only in enterprise edition.
     */
    runtimeConfiguration?: pulumi.Input<boolean>;
}

export interface MdbMongodbClusterClusterConfigMongodNet {
    /**
     * Specifies the default compressor(s) to use for communication between this mongod or mongos. 
     * Accepts array of compressors. Order matters. Available compressors: snappy, zlib, zstd, disabled. To disable network compression, make "disabled" the only value.
     * For more information, see the [net.Compression.Compressors](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-net.compression.compressors)
     * description in the official documentation.
     */
    compressors?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The maximum number of simultaneous connections that host will accept.
     * For more information, see the [net.maxIncomingConnections](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-net.maxIncomingConnections)
     * description in the official documentation.
     */
    maxIncomingConnections?: pulumi.Input<number>;
}

export interface MdbMongodbClusterClusterConfigMongodOperationProfiling {
    /**
     * Specifies which operations should be profiled. The following profiler levels are available: off, slow_op, all.
     * For more information, see the [operationProfiling.mode](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-operationProfiling.mode)
     * description in the official documentation.
     */
    mode?: pulumi.Input<string>;
    /**
     * The fraction of slow operations that should be profiled or logged. Accepts values between 0 and 1, inclusive.
     * For more information, see the [operationProfiling.slowOpSampleRate](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-operationProfiling.slowOpSampleRate)
     * description in the official documentation.
     */
    slowOpSampleRate?: pulumi.Input<number>;
    /**
     * The slow operation time threshold, in milliseconds. Operations that run for longer than this threshold are considered slow.
     * For more information, see the [operationProfiling.slowOpThresholdMs](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-operationProfiling.slowOpThresholdMs)
     * description in the official documentation.
     */
    slowOpThreshold?: pulumi.Input<number>;
}

export interface MdbMongodbClusterClusterConfigMongodSecurity {
    /**
     * Enables the encryption for the WiredTiger storage engine. Can be either true or false.
     * For more information see [security.enableEncryption](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.enableEncryption)
     * description in the official documentation. Available only in enterprise edition.
     */
    enableEncryption?: pulumi.Input<boolean>;
    /**
     * Configuration of the third party key management appliance via the Key Management Interoperability Protocol (KMIP)
     * (see [Encryption tutorial](https://www.mongodb.com/docs/rapid/tutorial/configure-encryption) ). Requires `enableEncryption` to be true.
     * The structure is documented below. Available only in enterprise edition.
     */
    kmip?: pulumi.Input<inputs.MdbMongodbClusterClusterConfigMongodSecurityKmip>;
}

export interface MdbMongodbClusterClusterConfigMongodSecurityKmip {
    /**
     * String containing the client certificate used for authenticating MongoDB to the KMIP server.
     * For more information see [security.kmip.clientCertificateFile](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.clientCertificateFile)
     * description in the official documentation.
     */
    clientCertificate?: pulumi.Input<string>;
    /**
     * Unique KMIP identifier for an existing key within the KMIP server.
     * For more information see [security.kmip.keyIdentifier](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.keyIdentifier)
     * description in the official documentation.
     */
    keyIdentifier?: pulumi.Input<string>;
    /**
     * Port number to use to communicate with the KMIP server. Default: 5696
     * For more information see [security.kmip.port](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.port)
     * description in the official documentation.
     */
    port?: pulumi.Input<number>;
    /**
     * Path to CA File. Used for validating secure client connection to KMIP server.
     * For more information see [security.kmip.serverCAFile](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.serverCAFile)
     * description in the official documentation.
     */
    serverCa?: pulumi.Input<string>;
    /**
     * Hostname or IP address of the KMIP server to connect to.
     * For more information see [security.kmip.serverName](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-security.kmip.serverName)
     * description in the official documentation.
     */
    serverName?: pulumi.Input<string>;
}

export interface MdbMongodbClusterClusterConfigMongodSetParameter {
    /**
     * Enables the auditing of authorization successes. Can be either true or false.
     * For more information, see the [auditAuthorizationSuccess](https://www.mongodb.com/docs/manual/reference/parameters/#mongodb-parameter-param.auditAuthorizationSuccess)
     * description in the official documentation. Available only in enterprise edition.
     */
    auditAuthorizationSuccess?: pulumi.Input<boolean>;
    /**
     * Enables the flow control. Can be either true or false.
     * For more information, see the [enableFlowControl](https://www.mongodb.com/docs/rapid/reference/parameters/#mongodb-parameter-param.enableFlowControl)
     * description in the official documentation.
     */
    enableFlowControl?: pulumi.Input<boolean>;
    /**
     * The minimum time window in seconds for which the storage engine keeps the snapshot history.
     * For more information, see the [minSnapshotHistoryWindowInSeconds](https://www.mongodb.com/docs/manual/reference/parameters/#mongodb-parameter-param.minSnapshotHistoryWindowInSeconds)
     * description in the official documentation.
     */
    minSnapshotHistoryWindowInSeconds?: pulumi.Input<number>;
}

export interface MdbMongodbClusterClusterConfigMongodStorage {
    /**
     * The durability journal to ensure data files remain valid and recoverable.
     * The structure is documented below.
     */
    journal?: pulumi.Input<inputs.MdbMongodbClusterClusterConfigMongodStorageJournal>;
    /**
     * The WiredTiger engine settings.
     * (see the [storage.wiredTiger](https://www.mongodb.com/docs/manual/reference/configuration-options/#storage.wiredtiger-options) option).
     * These settings available only on `mongod` hosts. The structure is documented below.
     */
    wiredTiger?: pulumi.Input<inputs.MdbMongodbClusterClusterConfigMongodStorageWiredTiger>;
}

export interface MdbMongodbClusterClusterConfigMongodStorageJournal {
    /**
     * The maximum amount of time in milliseconds that the mongod process allows between journal operations.
     * For more information, see the [storage.journal.commitIntervalMs](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-storage.journal.commitIntervalMs)
     * description in the official documentation.
     */
    commitInterval?: pulumi.Input<number>;
}

export interface MdbMongodbClusterClusterConfigMongodStorageWiredTiger {
    /**
     * Specifies the default compression for collection data. You can override this on a per-collection basis when creating collections.
     * Available compressors are: none, snappy, zlib, zstd. This setting available only on `mongod` hosts.
     * For more information, see the [storage.wiredTiger.collectionConfig.blockCompressor](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-storage.wiredTiger.collectionConfig.blockCompressor)
     * description in the official documentation.
     */
    blockCompressor?: pulumi.Input<string>;
    /**
     * Defines the maximum size of the internal cache that WiredTiger will use for all data.
     * For more information, see the [storage.wiredTiger.engineConfig.cacheSizeGB](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-storage.wiredTiger.engineConfig.cacheSizeGB)
     * description in the official documentation.
     */
    cacheSizeGb?: pulumi.Input<number>;
    /**
     * Enables or disables prefix compression for index data. Сan be either true or false.
     * For more information, see the [storage.wiredTiger.indexConfig.prefixCompression](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-storage.wiredTiger.indexConfig.prefixCompression)
     * description in the official documentation.
     */
    prefixCompression?: pulumi.Input<boolean>;
}

export interface MdbMongodbClusterClusterConfigMongos {
    /**
     * A set of network settings
     * (see the [net](https://www.mongodb.com/docs/manual/reference/configuration-options/#net-options) option).
     * The structure is documented below.
     */
    net?: pulumi.Input<inputs.MdbMongodbClusterClusterConfigMongosNet>;
}

export interface MdbMongodbClusterClusterConfigMongosNet {
    /**
     * Specifies the default compressor(s) to use for communication between this mongod or mongos. 
     * Accepts array of compressors. Order matters. Available compressors: snappy, zlib, zstd, disabled. To disable network compression, make "disabled" the only value.
     * For more information, see the [net.Compression.Compressors](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-net.compression.compressors)
     * description in the official documentation.
     */
    compressors?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The maximum number of simultaneous connections that host will accept.
     * For more information, see the [net.maxIncomingConnections](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-net.maxIncomingConnections)
     * description in the official documentation.
     */
    maxIncomingConnections?: pulumi.Input<number>;
}

export interface MdbMongodbClusterClusterConfigPerformanceDiagnostics {
    /**
     * Enable or disable performance diagnostics.
     */
    enabled?: pulumi.Input<boolean>;
}

export interface MdbMongodbClusterDatabase {
    /**
     * The name of the database.
     */
    name: pulumi.Input<string>;
}

export interface MdbMongodbClusterDiskSizeAutoscalingMongocfg {
    /**
     * Limit of disk size after autoscaling (GiB).
     */
    diskSizeLimit: pulumi.Input<number>;
    /**
     * Immediate autoscaling disk usage (percent).
     */
    emergencyUsageThreshold?: pulumi.Input<number>;
    /**
     * Maintenance window autoscaling disk usage (percent).
     */
    plannedUsageThreshold?: pulumi.Input<number>;
}

export interface MdbMongodbClusterDiskSizeAutoscalingMongod {
    /**
     * Limit of disk size after autoscaling (GiB).
     */
    diskSizeLimit: pulumi.Input<number>;
    /**
     * Immediate autoscaling disk usage (percent).
     */
    emergencyUsageThreshold?: pulumi.Input<number>;
    /**
     * Maintenance window autoscaling disk usage (percent).
     */
    plannedUsageThreshold?: pulumi.Input<number>;
}

export interface MdbMongodbClusterDiskSizeAutoscalingMongoinfra {
    /**
     * Limit of disk size after autoscaling (GiB).
     */
    diskSizeLimit: pulumi.Input<number>;
    /**
     * Immediate autoscaling disk usage (percent).
     */
    emergencyUsageThreshold?: pulumi.Input<number>;
    /**
     * Maintenance window autoscaling disk usage (percent).
     */
    plannedUsageThreshold?: pulumi.Input<number>;
}

export interface MdbMongodbClusterDiskSizeAutoscalingMongos {
    /**
     * Limit of disk size after autoscaling (GiB).
     */
    diskSizeLimit: pulumi.Input<number>;
    /**
     * Immediate autoscaling disk usage (percent).
     */
    emergencyUsageThreshold?: pulumi.Input<number>;
    /**
     * Maintenance window autoscaling disk usage (percent).
     */
    plannedUsageThreshold?: pulumi.Input<number>;
}

export interface MdbMongodbClusterHost {
    /**
     * Should this host have assigned public IP assigned. Can be either `true` or `false`.
     */
    assignPublicIp?: pulumi.Input<boolean>;
    /**
     * The health of the host.
     */
    health?: pulumi.Input<string>;
    /**
     * The parameters of mongod host in replicaset.
     */
    hostParameters?: pulumi.Input<inputs.MdbMongodbClusterHostHostParameters>;
    /**
     * The fully qualified domain name of the host. Computed on server side.
     */
    name?: pulumi.Input<string>;
    /**
     * The role of the cluster (either PRIMARY or SECONDARY).
     */
    role?: pulumi.Input<string>;
    /**
     * The name of the shard to which the host belongs. Only for sharded cluster.
     */
    shardName?: pulumi.Input<string>;
    /**
     * The ID of the subnet, to which the host belongs. The subnet must
     * be a part of the network to which the cluster belongs.
     */
    subnetId: pulumi.Input<string>;
    /**
     * type of mongo daemon which runs on this host (mongod, mongos, mongocfg, mongoinfra). Defaults to mongod.
     */
    type?: pulumi.Input<string>;
    /**
     * The availability zone where the MongoDB host will be created.
     * For more information see [the official documentation](https://cloud.yandex.com/docs/overview/concepts/geo-scope).
     */
    zoneId: pulumi.Input<string>;
}

export interface MdbMongodbClusterHostHostParameters {
    /**
     * Should this host be hidden in replicaset. Can be either `true` of `false`. For more information see [the official documentation](https://www.mongodb.com/docs/current/reference/replica-configuration/#mongodb-rsconf-rsconf.members-n-.hidden)
     */
    hidden?: pulumi.Input<boolean>;
    /**
     * A floating point number that indicates the relative likelihood of a replica set member to become the primary. For more information see [the official documentation](https://www.mongodb.com/docs/current/reference/replica-configuration/#mongodb-rsconf-rsconf.members-n-.priority)
     */
    priority?: pulumi.Input<number>;
    /**
     * The number of seconds "behind" the primary that this replica set member should "lag". For more information see [the official documentation](https://www.mongodb.com/docs/current/reference/replica-configuration/#mongodb-rsconf-rsconf.members-n-.secondaryDelaySecs)
     */
    secondaryDelaySecs?: pulumi.Input<number>;
    /**
     * A set of key/value pairs to assign for the replica set member. For more information see [the official documentation](https://www.mongodb.com/docs/current/reference/replica-configuration/#mongodb-rsconf-rsconf.members-n-.tags)
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface MdbMongodbClusterMaintenanceWindow {
    /**
     * Day of week for maintenance window if window type is weekly. Possible values: `MON`, `TUE`, `WED`, `THU`, `FRI`, `SAT`, `SUN`.
     */
    day?: pulumi.Input<string>;
    /**
     * Hour of day in UTC time zone (1-24) for maintenance window if window type is weekly.
     */
    hour?: pulumi.Input<number>;
    /**
     * Type of maintenance window. Can be either `ANYTIME` or `WEEKLY`. A day and hour of window need to be specified with weekly window.
     */
    type: pulumi.Input<string>;
}

export interface MdbMongodbClusterResources {
    /**
     * Volume of the storage available to a MongoDB host, in gigabytes.
     */
    diskSize: pulumi.Input<number>;
    /**
     * Type of the storage of MongoDB hosts.
     * For more information see [the official documentation](https://cloud.yandex.com/docs/managed-clickhouse/concepts/storage).
     *
     * The `diskSizeAutoscalingMongod`, `diskSizeAutoscalingMongos`, `diskSizeAutoscalingMongoinfra`, `diskSizeAutoscalingMongocfg` blocks support:
     */
    diskTypeId: pulumi.Input<string>;
    resourcePresetId: pulumi.Input<string>;
}

export interface MdbMongodbClusterResourcesMongocfg {
    /**
     * Volume of the storage available to a MongoDB host, in gigabytes.
     */
    diskSize: pulumi.Input<number>;
    /**
     * Type of the storage of MongoDB hosts.
     * For more information see [the official documentation](https://cloud.yandex.com/docs/managed-clickhouse/concepts/storage).
     *
     * The `diskSizeAutoscalingMongod`, `diskSizeAutoscalingMongos`, `diskSizeAutoscalingMongoinfra`, `diskSizeAutoscalingMongocfg` blocks support:
     */
    diskTypeId: pulumi.Input<string>;
    resourcePresetId: pulumi.Input<string>;
}

export interface MdbMongodbClusterResourcesMongod {
    /**
     * Volume of the storage available to a MongoDB host, in gigabytes.
     */
    diskSize: pulumi.Input<number>;
    /**
     * Type of the storage of MongoDB hosts.
     * For more information see [the official documentation](https://cloud.yandex.com/docs/managed-clickhouse/concepts/storage).
     *
     * The `diskSizeAutoscalingMongod`, `diskSizeAutoscalingMongos`, `diskSizeAutoscalingMongoinfra`, `diskSizeAutoscalingMongocfg` blocks support:
     */
    diskTypeId: pulumi.Input<string>;
    resourcePresetId: pulumi.Input<string>;
}

export interface MdbMongodbClusterResourcesMongoinfra {
    /**
     * Volume of the storage available to a MongoDB host, in gigabytes.
     */
    diskSize: pulumi.Input<number>;
    /**
     * Type of the storage of MongoDB hosts.
     * For more information see [the official documentation](https://cloud.yandex.com/docs/managed-clickhouse/concepts/storage).
     *
     * The `diskSizeAutoscalingMongod`, `diskSizeAutoscalingMongos`, `diskSizeAutoscalingMongoinfra`, `diskSizeAutoscalingMongocfg` blocks support:
     */
    diskTypeId: pulumi.Input<string>;
    resourcePresetId: pulumi.Input<string>;
}

export interface MdbMongodbClusterResourcesMongos {
    /**
     * Volume of the storage available to a MongoDB host, in gigabytes.
     */
    diskSize: pulumi.Input<number>;
    /**
     * Type of the storage of MongoDB hosts.
     * For more information see [the official documentation](https://cloud.yandex.com/docs/managed-clickhouse/concepts/storage).
     *
     * The `diskSizeAutoscalingMongod`, `diskSizeAutoscalingMongos`, `diskSizeAutoscalingMongoinfra`, `diskSizeAutoscalingMongocfg` blocks support:
     */
    diskTypeId: pulumi.Input<string>;
    resourcePresetId: pulumi.Input<string>;
}

export interface MdbMongodbClusterRestore {
    /**
     * Backup ID. The cluster will be created from the specified backup. [How to get a list of PostgreSQL backups](https://cloud.yandex.com/en-ru/docs/managed-mongodb/operations/cluster-backups)
     */
    backupId: pulumi.Input<string>;
    /**
     * Timestamp of the moment to which the MongoDB cluster should be restored. (Format: "2006-01-02T15:04:05" - UTC). When not set, current time is used.
     */
    time?: pulumi.Input<string>;
}

export interface MdbMongodbClusterUser {
    /**
     * The name of the user.
     */
    name: pulumi.Input<string>;
    /**
     * The password of the user.
     */
    password: pulumi.Input<string>;
    /**
     * Set of permissions granted to the user. The structure is documented below.
     */
    permissions?: pulumi.Input<pulumi.Input<inputs.MdbMongodbClusterUserPermission>[]>;
}

export interface MdbMongodbClusterUserPermission {
    /**
     * The name of the database that the permission grants access to.
     */
    databaseName: pulumi.Input<string>;
    /**
     * The roles of the user in this database. For more information see [the official documentation](https://cloud.yandex.com/docs/managed-mongodb/concepts/users-and-roles).
     */
    roles?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MdbMysqlClusterAccess {
    /**
     * Allow access for [Yandex DataLens](https://cloud.yandex.com/services/datalens).
     */
    dataLens?: pulumi.Input<boolean>;
    /**
     * Allow access for [DataTransfer](https://cloud.yandex.com/services/data-transfer)
     */
    dataTransfer?: pulumi.Input<boolean>;
    /**
     * Allows access for [SQL queries in the management console](https://cloud.yandex.com/docs/managed-mysql/operations/web-sql-query).
     */
    webSql?: pulumi.Input<boolean>;
}

export interface MdbMysqlClusterBackupWindowStart {
    /**
     * The hour at which backup will be started.
     */
    hours?: pulumi.Input<number>;
    /**
     * The minute at which backup will be started.
     */
    minutes?: pulumi.Input<number>;
}

export interface MdbMysqlClusterDatabase {
    /**
     * The name of the database.
     */
    name: pulumi.Input<string>;
}

export interface MdbMysqlClusterHost {
    /**
     * Sets whether the host should get a public IP address. It can be changed on the fly only when `name` is set.
     */
    assignPublicIp?: pulumi.Input<boolean>;
    /**
     * Host backup priority. Value is between 0 and 100, default is 0.
     */
    backupPriority?: pulumi.Input<number>;
    /**
     * The fully qualified domain name of the host.
     */
    fqdn?: pulumi.Input<string>;
    /**
     * Host state name. It should be set for all hosts or unset for all hosts. This field can be used by another host, to select which host will be its replication source. Please refer to `replicationSourceName` parameter.
     */
    name?: pulumi.Input<string>;
    /**
     * Host master promotion priority. Value is between 0 and 100, default is 0.
     */
    priority?: pulumi.Input<number>;
    /**
     * Host replication source (fqdn), when replicationSource is empty then host is in HA group.
     */
    replicationSource?: pulumi.Input<string>;
    /**
     * Host replication source name points to host's `name` from which this host should replicate. When not set then host in HA group. It works only when `name` is set.
     */
    replicationSourceName?: pulumi.Input<string>;
    /**
     * The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * The availability zone where the MySQL host will be created.
     */
    zone: pulumi.Input<string>;
}

export interface MdbMysqlClusterMaintenanceWindow {
    /**
     * Day of the week (in `DDD` format). Allowed values: "MON", "TUE", "WED", "THU", "FRI", "SAT", "SUN"
     */
    day?: pulumi.Input<string>;
    /**
     * Hour of the day in UTC (in `HH` format). Allowed value is between 0 and 23.
     */
    hour?: pulumi.Input<number>;
    /**
     * Type of maintenance window. Can be either `ANYTIME` or `WEEKLY`. A day and hour of window need to be specified with weekly window.
     */
    type: pulumi.Input<string>;
}

export interface MdbMysqlClusterPerformanceDiagnostics {
    /**
     * Enable performance diagnostics
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Interval (in seconds) for myStatActivity sampling Acceptable values are 1 to 86400, inclusive.
     */
    sessionsSamplingInterval: pulumi.Input<number>;
    /**
     * Interval (in seconds) for myStatStatements sampling Acceptable values are 1 to 86400, inclusive.
     */
    statementsSamplingInterval: pulumi.Input<number>;
}

export interface MdbMysqlClusterResources {
    /**
     * Volume of the storage available to a MySQL host, in gigabytes.
     */
    diskSize: pulumi.Input<number>;
    /**
     * Type of the storage of MySQL hosts.
     */
    diskTypeId: pulumi.Input<string>;
    resourcePresetId: pulumi.Input<string>;
}

export interface MdbMysqlClusterRestore {
    /**
     * Backup ID. The cluster will be created from the specified backup. [How to get a list of MySQL backups](https://cloud.yandex.com/docs/managed-mysql/operations/cluster-backups).
     */
    backupId: pulumi.Input<string>;
    /**
     * Timestamp of the moment to which the MySQL cluster should be restored. (Format: "2006-01-02T15:04:05" - UTC). When not set, current time is used.
     */
    time?: pulumi.Input<string>;
}

export interface MdbMysqlClusterUser {
    /**
     * Authentication plugin. Allowed values: `MYSQL_NATIVE_PASSWORD`, `CACHING_SHA2_PASSWORD`, `SHA256_PASSWORD` (for version 5.7 `MYSQL_NATIVE_PASSWORD`, `SHA256_PASSWORD`)
     */
    authenticationPlugin?: pulumi.Input<string>;
    /**
     * User's connection limits. The structure is documented below.
     * If the attribute is not specified there will be no changes.
     */
    connectionLimits?: pulumi.Input<inputs.MdbMysqlClusterUserConnectionLimits>;
    /**
     * List user's global permissions     
     * Allowed permissions:  `REPLICATION_CLIENT`, `REPLICATION_SLAVE`, `PROCESS` for clear list use empty list.
     * If the attribute is not specified there will be no changes.
     */
    globalPermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the user.
     */
    name: pulumi.Input<string>;
    /**
     * The password of the user.
     */
    password: pulumi.Input<string>;
    /**
     * Set of permissions granted to the user. The structure is documented below.
     */
    permissions?: pulumi.Input<pulumi.Input<inputs.MdbMysqlClusterUserPermission>[]>;
}

export interface MdbMysqlClusterUserConnectionLimits {
    /**
     * Max connections per hour.
     */
    maxConnectionsPerHour?: pulumi.Input<number>;
    /**
     * Max questions per hour.
     */
    maxQuestionsPerHour?: pulumi.Input<number>;
    /**
     * Max updates per hour.
     */
    maxUpdatesPerHour?: pulumi.Input<number>;
    /**
     * Max user connections.
     */
    maxUserConnections?: pulumi.Input<number>;
}

export interface MdbMysqlClusterUserPermission {
    /**
     * The name of the database that the permission grants access to.
     */
    databaseName: pulumi.Input<string>;
    /**
     * List user's roles in the database.
     * Allowed roles: `ALL`,`ALTER`,`ALTER_ROUTINE`,`CREATE`,`CREATE_ROUTINE`,`CREATE_TEMPORARY_TABLES`,
     * `CREATE_VIEW`,`DELETE`,`DROP`,`EVENT`,`EXECUTE`,`INDEX`,`INSERT`,`LOCK_TABLES`,`SELECT`,`SHOW_VIEW`,`TRIGGER`,`UPDATE`.
     */
    roles?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MdbMysqlUserConnectionLimits {
    /**
     * Max connections per hour.
     */
    maxConnectionsPerHour?: pulumi.Input<number>;
    /**
     * Max questions per hour.
     */
    maxQuestionsPerHour?: pulumi.Input<number>;
    /**
     * Max updates per hour.
     */
    maxUpdatesPerHour?: pulumi.Input<number>;
    /**
     * Max user connections.
     */
    maxUserConnections?: pulumi.Input<number>;
}

export interface MdbMysqlUserPermission {
    /**
     * The name of the database that the permission grants access to.
     */
    databaseName: pulumi.Input<string>;
    /**
     * List user's roles in the database.
     * Allowed roles: `ALL`,`ALTER`,`ALTER_ROUTINE`,`CREATE`,`CREATE_ROUTINE`,`CREATE_TEMPORARY_TABLES`,
     * `CREATE_VIEW`,`DELETE`,`DROP`,`EVENT`,`EXECUTE`,`INDEX`,`INSERT`,`LOCK_TABLES`,`SELECT`,`SHOW_VIEW`,`TRIGGER`,`UPDATE`.
     */
    roles?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MdbPostgresqlClusterConfig {
    /**
     * Access policy to the PostgreSQL cluster. The structure is documented below.
     */
    access?: pulumi.Input<inputs.MdbPostgresqlClusterConfigAccess>;
    /**
     * Configuration setting which enables/disables autofailover in cluster.
     */
    autofailover?: pulumi.Input<boolean>;
    /**
     * The period in days during which backups are stored.
     */
    backupRetainPeriodDays?: pulumi.Input<number>;
    /**
     * Time to start the daily backup, in the UTC timezone. The structure is documented below.
     */
    backupWindowStart?: pulumi.Input<inputs.MdbPostgresqlClusterConfigBackupWindowStart>;
    /**
     * Cluster disk size autoscaling settings. The structure is documented below.
     */
    diskSizeAutoscaling?: pulumi.Input<inputs.MdbPostgresqlClusterConfigDiskSizeAutoscaling>;
    /**
     * Cluster performance diagnostics settings. The structure is documented below. [YC Documentation](https://cloud.yandex.com/en-ru/docs/managed-postgresql/api-ref/grpc/cluster_service#PerformanceDiagnostics)
     */
    performanceDiagnostics?: pulumi.Input<inputs.MdbPostgresqlClusterConfigPerformanceDiagnostics>;
    /**
     * Configuration of the connection pooler. The structure is documented below.
     */
    poolerConfig?: pulumi.Input<inputs.MdbPostgresqlClusterConfigPoolerConfig>;
    /**
     * PostgreSQL cluster config. Detail info in "postresql config" section (documented below).
     */
    postgresqlConfig?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Resources allocated to hosts of the PostgreSQL cluster. The structure is documented below.
     */
    resources: pulumi.Input<inputs.MdbPostgresqlClusterConfigResources>;
    /**
     * Version of the PostgreSQL cluster. (allowed versions are: 10, 10-1c, 11, 11-1c, 12, 12-1c, 13, 13-1c, 14, 14-1c, 15, 15-1c, 16)
     */
    version: pulumi.Input<string>;
}

export interface MdbPostgresqlClusterConfigAccess {
    /**
     * Allow access for [Yandex DataLens](https://cloud.yandex.com/services/datalens).
     */
    dataLens?: pulumi.Input<boolean>;
    /**
     * Allow access for [DataTransfer](https://cloud.yandex.com/services/data-transfer)
     */
    dataTransfer?: pulumi.Input<boolean>;
    /**
     * Allow access for [connection to managed databases from functions](https://cloud.yandex.com/docs/functions/operations/database-connection)
     */
    serverless?: pulumi.Input<boolean>;
    /**
     * Allow access for [SQL queries in the management console](https://cloud.yandex.com/docs/managed-postgresql/operations/web-sql-query)
     */
    webSql?: pulumi.Input<boolean>;
}

export interface MdbPostgresqlClusterConfigBackupWindowStart {
    /**
     * The hour at which backup will be started (UTC).
     */
    hours?: pulumi.Input<number>;
    /**
     * The minute at which backup will be started (UTC).
     */
    minutes?: pulumi.Input<number>;
}

export interface MdbPostgresqlClusterConfigDiskSizeAutoscaling {
    /**
     * Limit of disk size after autoscaling (GiB).
     */
    diskSizeLimit: pulumi.Input<number>;
    /**
     * Immediate autoscaling disk usage (percent).
     */
    emergencyUsageThreshold?: pulumi.Input<number>;
    /**
     * Maintenance window autoscaling disk usage (percent).
     */
    plannedUsageThreshold?: pulumi.Input<number>;
}

export interface MdbPostgresqlClusterConfigPerformanceDiagnostics {
    /**
     * Enable performance diagnostics
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Interval (in seconds) for pgStatActivity sampling Acceptable values are 1 to 86400, inclusive.
     */
    sessionsSamplingInterval: pulumi.Input<number>;
    /**
     * Interval (in seconds) for pgStatStatements sampling Acceptable values are 1 to 86400, inclusive.
     */
    statementsSamplingInterval: pulumi.Input<number>;
}

export interface MdbPostgresqlClusterConfigPoolerConfig {
    /**
     * Setting `poolDiscard` [parameter in Odyssey](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool_discard-yesno).
     */
    poolDiscard?: pulumi.Input<boolean>;
    /**
     * Mode that the connection pooler is working in. See descriptions of all modes in the [documentation for Odyssey](https://github.com/yandex/odyssey/blob/master/documentation/configuration.md#pool-string.
     */
    poolingMode?: pulumi.Input<string>;
}

export interface MdbPostgresqlClusterConfigResources {
    /**
     * Volume of the storage available to a PostgreSQL host, in gigabytes.
     */
    diskSize: pulumi.Input<number>;
    /**
     * Type of the storage of PostgreSQL hosts.
     */
    diskTypeId?: pulumi.Input<string>;
    resourcePresetId: pulumi.Input<string>;
}

export interface MdbPostgresqlClusterDatabase {
    extensions?: pulumi.Input<pulumi.Input<inputs.MdbPostgresqlClusterDatabaseExtension>[]>;
    lcCollate?: pulumi.Input<string>;
    lcType?: pulumi.Input<string>;
    /**
     * Name of the PostgreSQL cluster. Provided by the client when the cluster is created.
     */
    name: pulumi.Input<string>;
    owner: pulumi.Input<string>;
    templateDb?: pulumi.Input<string>;
}

export interface MdbPostgresqlClusterDatabaseExtension {
    /**
     * Name of the PostgreSQL cluster. Provided by the client when the cluster is created.
     */
    name: pulumi.Input<string>;
    /**
     * Version of the PostgreSQL cluster. (allowed versions are: 10, 10-1c, 11, 11-1c, 12, 12-1c, 13, 13-1c, 14, 14-1c, 15, 15-1c, 16)
     */
    version?: pulumi.Input<string>;
}

export interface MdbPostgresqlClusterHost {
    /**
     * Sets whether the host should get a public IP address on creation. It can be changed on the fly only when `name` is set.
     */
    assignPublicIp?: pulumi.Input<boolean>;
    /**
     * The fully qualified domain name of the host.
     */
    fqdn?: pulumi.Input<string>;
    /**
     * Host state name. It should be set for all hosts or unset for all hosts. This field can be used by another host, to select which host will be its replication source. Please see `replicationSourceName` parameter.
     * Also, this field is used to select which host will be selected as a master host. Please see `hostMasterName` parameter.
     */
    name?: pulumi.Input<string>;
    /**
     * Host priority in HA group. It works only when `name` is set.
     */
    priority?: pulumi.Input<number>;
    /**
     * Host replication source (fqdn), when replicationSource is empty then host is in HA group.
     */
    replicationSource?: pulumi.Input<string>;
    /**
     * Host replication source name points to host's `name` from which this host should replicate. When not set then host in HA group. It works only when `name` is set.
     */
    replicationSourceName?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
    /**
     * The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * The availability zone where the PostgreSQL host will be created.
     */
    zone: pulumi.Input<string>;
}

export interface MdbPostgresqlClusterMaintenanceWindow {
    /**
     * Day of the week (in `DDD` format). Allowed values: "MON", "TUE", "WED", "THU", "FRI", "SAT", "SUN"
     */
    day?: pulumi.Input<string>;
    /**
     * Hour of the day in UTC (in `HH` format). Allowed value is between 1 and 24.
     */
    hour?: pulumi.Input<number>;
    /**
     * Type of maintenance window. Can be either `ANYTIME` or `WEEKLY`. A day and hour of window need to be specified with weekly window.
     */
    type: pulumi.Input<string>;
}

export interface MdbPostgresqlClusterRestore {
    /**
     * Backup ID. The cluster will be created from the specified backup. [How to get a list of PostgreSQL backups](https://cloud.yandex.com/docs/managed-postgresql/operations/cluster-backups).
     */
    backupId: pulumi.Input<string>;
    /**
     * Timestamp of the moment to which the PostgreSQL cluster should be restored. (Format: "2006-01-02T15:04:05" - UTC). When not set, current time is used.
     */
    time?: pulumi.Input<string>;
    /**
     * Flag that indicates whether a database should be restored to the first backup point available just after the timestamp specified in the [time] field instead of just before.  
     * Possible values:
     * - false (default) — the restore point refers to the first backup moment before [time].
     * - true — the restore point refers to the first backup point after [time].
     */
    timeInclusive?: pulumi.Input<boolean>;
}

export interface MdbPostgresqlClusterUser {
    connLimit?: pulumi.Input<number>;
    grants?: pulumi.Input<pulumi.Input<string>[]>;
    login?: pulumi.Input<boolean>;
    /**
     * Name of the PostgreSQL cluster. Provided by the client when the cluster is created.
     */
    name: pulumi.Input<string>;
    password: pulumi.Input<string>;
    permissions?: pulumi.Input<pulumi.Input<inputs.MdbPostgresqlClusterUserPermission>[]>;
    settings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface MdbPostgresqlClusterUserPermission {
    databaseName: pulumi.Input<string>;
}

export interface MdbPostgresqlDatabaseExtension {
    /**
     * Name of the database extension. For more information on available extensions see [the official documentation](https://cloud.yandex.com/docs/managed-postgresql/operations/cluster-extensions).
     */
    name: pulumi.Input<string>;
    /**
     * Version of the extension.
     */
    version?: pulumi.Input<string>;
}

export interface MdbPostgresqlUserPermission {
    /**
     * The name of the database that the permission grants access to.
     */
    databaseName: pulumi.Input<string>;
}

export interface MdbRedisClusterConfig {
    /**
     * Normal clients output buffer limits.
     * See [redis config file](https://github.com/redis/redis/blob/6.2/redis.conf#L1841).
     */
    clientOutputBufferLimitNormal?: pulumi.Input<string>;
    /**
     * Pubsub clients output buffer limits.
     * See [redis config file](https://github.com/redis/redis/blob/6.2/redis.conf#L1843).
     */
    clientOutputBufferLimitPubsub?: pulumi.Input<string>;
    /**
     * Number of databases (changing requires redis-server restart).
     */
    databases?: pulumi.Input<number>;
    /**
     * Redis maxmemory usage in percent
     */
    maxmemoryPercent?: pulumi.Input<number>;
    /**
     * Redis key eviction policy for a dataset that reaches maximum memory.
     * Can be any of the listed in [the official RedisDB documentation](https://docs.redislabs.com/latest/rs/administering/database-operations/eviction-policy/).
     */
    maxmemoryPolicy?: pulumi.Input<string>;
    /**
     * Select the events that Redis will notify among a set of classes.
     */
    notifyKeyspaceEvents?: pulumi.Input<string>;
    /**
     * Password for the Redis cluster.
     */
    password: pulumi.Input<string>;
    /**
     * Log slow queries below this number in microseconds.
     */
    slowlogLogSlowerThan?: pulumi.Input<number>;
    /**
     * Slow queries log length.
     */
    slowlogMaxLen?: pulumi.Input<number>;
    /**
     * Close the connection after a client is idle for N seconds.
     */
    timeout?: pulumi.Input<number>;
    /**
     * Version of Redis (6.2).
     */
    version: pulumi.Input<string>;
}

export interface MdbRedisClusterDiskSizeAutoscaling {
    /**
     * Limit of disk size after autoscaling (GiB).
     */
    diskSizeLimit: pulumi.Input<number>;
    /**
     * Immediate autoscaling disk usage (percent).
     */
    emergencyUsageThreshold?: pulumi.Input<number>;
    /**
     * Maintenance window autoscaling disk usage (percent).
     */
    plannedUsageThreshold?: pulumi.Input<number>;
}

export interface MdbRedisClusterHost {
    /**
     * Sets whether the host should get a public IP address or not.
     */
    assignPublicIp?: pulumi.Input<boolean>;
    /**
     * The fully qualified domain name of the host.
     */
    fqdn?: pulumi.Input<string>;
    /**
     * Replica priority of a current replica (usable for non-sharded only).
     */
    replicaPriority?: pulumi.Input<number>;
    /**
     * The name of the shard to which the host belongs.
     */
    shardName?: pulumi.Input<string>;
    /**
     * The ID of the subnet, to which the host belongs. The subnet must
     * be a part of the network to which the cluster belongs.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * The availability zone where the Redis host will be created.
     * For more information see [the official documentation](https://cloud.yandex.com/docs/overview/concepts/geo-scope).
     */
    zone: pulumi.Input<string>;
}

export interface MdbRedisClusterMaintenanceWindow {
    /**
     * Day of week for maintenance window if window type is weekly. Possible values: `MON`, `TUE`, `WED`, `THU`, `FRI`, `SAT`, `SUN`.
     */
    day?: pulumi.Input<string>;
    /**
     * Hour of day in UTC time zone (1-24) for maintenance window if window type is weekly.
     */
    hour?: pulumi.Input<number>;
    /**
     * Type of maintenance window. Can be either `ANYTIME` or `WEEKLY`. A day and hour of window need to be specified with weekly window.
     */
    type: pulumi.Input<string>;
}

export interface MdbRedisClusterResources {
    /**
     * Volume of the storage available to a host, in gigabytes.
     */
    diskSize: pulumi.Input<number>;
    /**
     * Type of the storage of Redis hosts - environment default is used if missing.
     */
    diskTypeId?: pulumi.Input<string>;
    resourcePresetId: pulumi.Input<string>;
}

export interface MdbSqlserverClusterBackupWindowStart {
    /**
     * The hour at which backup will be started.
     */
    hours?: pulumi.Input<number>;
    /**
     * The minute at which backup will be started.
     */
    minutes?: pulumi.Input<number>;
}

export interface MdbSqlserverClusterDatabase {
    /**
     * The name of the database.
     */
    name: pulumi.Input<string>;
}

export interface MdbSqlserverClusterHost {
    /**
     * Sets whether the host should get a public IP address on creation. Changing this parameter for an existing host is not supported at the moment
     */
    assignPublicIp?: pulumi.Input<boolean>;
    /**
     * The fully qualified domain name of the host.
     */
    fqdn?: pulumi.Input<string>;
    /**
     * The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * The availability zone where the SQLServer host will be created.
     */
    zone: pulumi.Input<string>;
}

export interface MdbSqlserverClusterResources {
    /**
     * Volume of the storage available to a SQLServer host, in gigabytes.
     */
    diskSize: pulumi.Input<number>;
    /**
     * Type of the storage of SQLServer hosts.
     */
    diskTypeId: pulumi.Input<string>;
    resourcePresetId: pulumi.Input<string>;
}

export interface MdbSqlserverClusterUser {
    /**
     * The name of the user.
     */
    name: pulumi.Input<string>;
    /**
     * The password of the user.
     */
    password: pulumi.Input<string>;
    /**
     * Set of permissions granted to the user. The structure is documented below.
     */
    permissions?: pulumi.Input<pulumi.Input<inputs.MdbSqlserverClusterUserPermission>[]>;
}

export interface MdbSqlserverClusterUserPermission {
    /**
     * The name of the database that the permission grants access to.
     */
    databaseName: pulumi.Input<string>;
    /**
     * List user's roles in the database.
     * Allowed roles: `OWNER`, `SECURITYADMIN`, `ACCESSADMIN`, `BACKUPOPERATOR`, `DDLADMIN`, `DATAWRITER`, `DATAREADER`, `DENYDATAWRITER`, `DENYDATAREADER`.
     */
    roles?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitoringDashboardParametrization {
    /**
     * parameters list.
     */
    parameters?: pulumi.Input<pulumi.Input<inputs.MonitoringDashboardParametrizationParameter>[]>;
    /**
     * dashboard predefined parameters selector.
     */
    selectors?: pulumi.Input<string>;
}

export interface MonitoringDashboardParametrizationParameter {
    /**
     * Custom values parameter. Oneof: label_values, custom, text.
     */
    customs?: pulumi.Input<pulumi.Input<inputs.MonitoringDashboardParametrizationParameterCustom>[]>;
    /**
     * Parameter description.
     */
    description?: pulumi.Input<string>;
    /**
     * UI-visibility.
     */
    hidden?: pulumi.Input<boolean>;
    /**
     * Parameter identifier
     */
    id: pulumi.Input<string>;
    /**
     * Label values parameter. Oneof: label_values, custom, text.
     */
    labelValues?: pulumi.Input<pulumi.Input<inputs.MonitoringDashboardParametrizationParameterLabelValue>[]>;
    /**
     * Text parameter. Oneof: label_values, custom, text.
     */
    texts?: pulumi.Input<pulumi.Input<inputs.MonitoringDashboardParametrizationParameterText>[]>;
    /**
     * UI-visible title of the parameter.
     */
    title?: pulumi.Input<string>;
}

export interface MonitoringDashboardParametrizationParameterCustom {
    /**
     * Default value.
     */
    defaultValues?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the multiselectable values of parameter.
     */
    multiselectable?: pulumi.Input<boolean>;
    /**
     * Parameter values.
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MonitoringDashboardParametrizationParameterLabelValue {
    /**
     * Default value.
     */
    defaultValues?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Labels folder ID.
     */
    folderId?: pulumi.Input<string>;
    /**
     * Label key to list label values.
     */
    labelKey: pulumi.Input<string>;
    /**
     * Specifies the multiselectable values of parameter.
     */
    multiselectable?: pulumi.Input<boolean>;
    /**
     * Selectors to select metric label values.
     */
    selectors?: pulumi.Input<string>;
}

export interface MonitoringDashboardParametrizationParameterText {
    /**
     * Default value.
     */
    defaultValue?: pulumi.Input<string>;
}

export interface MonitoringDashboardWidget {
    /**
     * Chart widget settings. Oneof: text, title or chart.
     */
    charts?: pulumi.Input<pulumi.Input<inputs.MonitoringDashboardWidgetChart>[]>;
    /**
     * Widget position.
     */
    positions?: pulumi.Input<pulumi.Input<inputs.MonitoringDashboardWidgetPosition>[]>;
    /**
     * Text widget settings. Oneof: text, title or chart.
     */
    texts?: pulumi.Input<pulumi.Input<inputs.MonitoringDashboardWidgetText>[]>;
    /**
     * Title widget settings. Oneof: text, title or chart.
     */
    titles?: pulumi.Input<pulumi.Input<inputs.MonitoringDashboardWidgetTitle>[]>;
}

export interface MonitoringDashboardWidgetChart {
    /**
     * Chart ID.
     */
    chartId?: pulumi.Input<string>;
    /**
     * Chart description in dashboard (not enabled in UI).
     */
    description?: pulumi.Input<string>;
    /**
     * Enable legend under chart.
     */
    displayLegend?: pulumi.Input<boolean>;
    /**
     * Fixed time interval for chart. Values:
     * - FREEZE_DURATION_HOUR: Last hour.
     * - FREEZE_DURATION_DAY: Last day = last 24 hours.
     * - FREEZE_DURATION_WEEK: Last 7 days.
     * - FREEZE_DURATION_MONTH: Last 31 days.
     */
    freeze?: pulumi.Input<string>;
    /**
     * Names settings.
     */
    nameHidingSettings?: pulumi.Input<pulumi.Input<inputs.MonitoringDashboardWidgetChartNameHidingSetting>[]>;
    /**
     * Queries settings.
     */
    queries?: pulumi.Input<pulumi.Input<inputs.MonitoringDashboardWidgetChartQuery>[]>;
    /**
     * Time series settings.
     */
    seriesOverrides?: pulumi.Input<pulumi.Input<inputs.MonitoringDashboardWidgetChartSeriesOverride>[]>;
    /**
     * Chart widget title.
     */
    title?: pulumi.Input<string>;
    /**
     * Visualization settings.
     */
    visualizationSettings?: pulumi.Input<pulumi.Input<inputs.MonitoringDashboardWidgetChartVisualizationSetting>[]>;
}

export interface MonitoringDashboardWidgetChartNameHidingSetting {
    /**
     * Series name.
     */
    names?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * True if we want to show concrete series names only, false if we want to hide concrete series names.
     */
    positive?: pulumi.Input<boolean>;
}

export interface MonitoringDashboardWidgetChartQuery {
    /**
     * Downsamplang settings.
     */
    downsamplings?: pulumi.Input<pulumi.Input<inputs.MonitoringDashboardWidgetChartQueryDownsampling>[]>;
    /**
     * Query targets.
     */
    targets?: pulumi.Input<pulumi.Input<inputs.MonitoringDashboardWidgetChartQueryTarget>[]>;
}

export interface MonitoringDashboardWidgetChartQueryDownsampling {
    /**
     * Disable downsampling.
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * Parameters for filling gaps in data.
     */
    gapFilling?: pulumi.Input<string>;
    /**
     * Function that is used for downsampling.
     */
    gridAggregation?: pulumi.Input<string>;
    /**
     * Time interval (grid) for downsampling in milliseconds. Points in the specified range are aggregated into one time point
     */
    gridInterval?: pulumi.Input<number>;
    /**
     * Maximum number of points to be returned.
     */
    maxPoints?: pulumi.Input<number>;
}

export interface MonitoringDashboardWidgetChartQueryTarget {
    /**
     * Checks that target is visible or invisible.
     */
    hidden?: pulumi.Input<boolean>;
    /**
     * Query.
     */
    query?: pulumi.Input<string>;
    /**
     * Text mode enabled.
     */
    textMode?: pulumi.Input<boolean>;
}

export interface MonitoringDashboardWidgetChartSeriesOverride {
    /**
     * Series name. Oneof: name or target_index.
     */
    name?: pulumi.Input<string>;
    /**
     * Override settings.
     */
    settings?: pulumi.Input<pulumi.Input<inputs.MonitoringDashboardWidgetChartSeriesOverrideSetting>[]>;
    /**
     * Series index. Oneof: name or target_index.
     */
    targetIndex?: pulumi.Input<string>;
}

export interface MonitoringDashboardWidgetChartSeriesOverrideSetting {
    /**
     * Series color or empty.
     */
    color?: pulumi.Input<string>;
    /**
     * Stack grow down.
     */
    growDown?: pulumi.Input<boolean>;
    /**
     * Series name or empty.
     */
    name?: pulumi.Input<string>;
    /**
     * Stack name or empty.
     */
    stackName?: pulumi.Input<string>;
    /**
     * Type.
     */
    type?: pulumi.Input<string>;
    /**
     * Yaxis position.
     */
    yaxisPosition?: pulumi.Input<string>;
}

export interface MonitoringDashboardWidgetChartVisualizationSetting {
    /**
     * Aggregation. Values:
     * - SERIES_AGGREGATION_UNSPECIFIED: Not specified (avg by default).
     * - SERIES_AGGREGATION_AVG: Average.
     * - SERIES_AGGREGATION_MIN: Minimum.
     * - SERIES_AGGREGATION_MAX: Maximum.
     * - SERIES_AGGREGATION_LAST: Last non-NaN value.
     * - SERIES_AGGREGATION_SUM: Sum.
     */
    aggregation?: pulumi.Input<string>;
    /**
     * Color settings.
     */
    colorSchemeSettings?: pulumi.Input<pulumi.Input<inputs.MonitoringDashboardWidgetChartVisualizationSettingColorSchemeSetting>[]>;
    /**
     * Heatmap settings.
     */
    heatmapSettings?: pulumi.Input<pulumi.Input<inputs.MonitoringDashboardWidgetChartVisualizationSettingHeatmapSetting>[]>;
    /**
     * Interpolate values. Values:
     * - INTERPOLATE_UNSPECIFIED: Not specified (linear by default).
     * - INTERPOLATE_LINEAR: Linear.
     * - INTERPOLATE_LEFT: Left.
     * - INTERPOLATE_RIGHT: Right.
     */
    interpolate?: pulumi.Input<string>;
    /**
     * Normalize values.
     */
    normalize?: pulumi.Input<boolean>;
    /**
     * Show chart labels.
     */
    showLabels?: pulumi.Input<boolean>;
    /**
     * Inside chart title.
     */
    title?: pulumi.Input<string>;
    /**
     * Visualization type. Values:
     * - VISUALIZATION_TYPE_UNSPECIFIED: Not specified (line by default).
     * - VISUALIZATION_TYPE_LINE: Line chart.
     * - VISUALIZATION_TYPE_STACK: Stack chart.
     * - VISUALIZATION_TYPE_COLUMN: Points as columns chart.
     * - VISUALIZATION_TYPE_POINTS: Points.
     * - VISUALIZATION_TYPE_PIE: Pie aggregation chart.
     * - VISUALIZATION_TYPE_BARS: Bars aggregation chart.
     * - VISUALIZATION_TYPE_DISTRIBUTION: Distribution aggregation chart.
     * - VISUALIZATION_TYPE_HEATMAP: Heatmap aggregation chart.
     */
    type?: pulumi.Input<string>;
    /**
     * Y axis settings.
     */
    yaxisSettings?: pulumi.Input<pulumi.Input<inputs.MonitoringDashboardWidgetChartVisualizationSettingYaxisSetting>[]>;
}

export interface MonitoringDashboardWidgetChartVisualizationSettingColorSchemeSetting {
    /**
     * Automatic color scheme. Oneof: automatic, standard or gradient.
     */
    automatics?: pulumi.Input<pulumi.Input<inputs.MonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingAutomatic>[]>;
    /**
     * Gradient color scheme. Oneof: automatic, standard or gradient.
     */
    gradients?: pulumi.Input<pulumi.Input<inputs.MonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingGradient>[]>;
    /**
     * Standard color scheme. Oneof: automatic, standard or gradient.
     */
    standards?: pulumi.Input<pulumi.Input<inputs.MonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingStandard>[]>;
}

export interface MonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingAutomatic {
}

export interface MonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingGradient {
    /**
     * Gradient green value.
     */
    greenValue?: pulumi.Input<string>;
    /**
     * Gradient red value.
     */
    redValue?: pulumi.Input<string>;
    /**
     * Gradient violet value.
     */
    violetValue?: pulumi.Input<string>;
    /**
     * Gradient yellow value.
     */
    yellowValue?: pulumi.Input<string>;
}

export interface MonitoringDashboardWidgetChartVisualizationSettingColorSchemeSettingStandard {
}

export interface MonitoringDashboardWidgetChartVisualizationSettingHeatmapSetting {
    /**
     * Heatmap green value.
     */
    greenValue?: pulumi.Input<string>;
    /**
     * Heatmap red value.
     */
    redValue?: pulumi.Input<string>;
    /**
     * Heatmap violet value.
     */
    violetValue?: pulumi.Input<string>;
    /**
     * Heatmap yellow value.
     */
    yellowValue?: pulumi.Input<string>;
}

export interface MonitoringDashboardWidgetChartVisualizationSettingYaxisSetting {
    /**
     * Left yaxis config.
     */
    lefts?: pulumi.Input<pulumi.Input<inputs.MonitoringDashboardWidgetChartVisualizationSettingYaxisSettingLeft>[]>;
    /**
     * Right yaxis config.
     */
    rights?: pulumi.Input<pulumi.Input<inputs.MonitoringDashboardWidgetChartVisualizationSettingYaxisSettingRight>[]>;
}

export interface MonitoringDashboardWidgetChartVisualizationSettingYaxisSettingLeft {
    /**
     * Max value in extended number format or empty.
     */
    max?: pulumi.Input<string>;
    /**
     * Min value in extended number format or empty.
     */
    min?: pulumi.Input<string>;
    /**
     * Tick value precision (null as default, 0-7 in other cases).
     */
    precision?: pulumi.Input<number>;
    /**
     * Title or empty.
     */
    title?: pulumi.Input<string>;
    /**
     * Type. Values:
     * - YAXIS_TYPE_UNSPECIFIED: Not specified (linear by default).
     * - YAXIS_TYPE_LINEAR: Linear.
     * - YAXIS_TYPE_LOGARITHMIC: Logarithmic.
     */
    type?: pulumi.Input<string>;
    /**
     * Unit format. Values:
     * - UNIT_NONE: Misc. None (show tick values as-is).
     * - UNIT_COUNT: Count.
     * - UNIT_PERCENT: Percent (0-100).
     * - UNIT_PERCENT_UNIT: Percent (0-1).
     * - UNIT_NANOSECONDS: Time. Nanoseconds (ns).
     * - UNIT_MICROSECONDS: Microseconds (µs).
     * - UNIT_MILLISECONDS: Milliseconds (ms).
     * - UNIT_SECONDS: Seconds (s).
     * - UNIT_MINUTES: Minutes (m).
     * - UNIT_HOURS: Hours (h).
     * - UNIT_DAYS: Days (d).
     * - UNIT_BITS_SI: Data (SI). Bits (SI).
     * - UNIT_BYTES_SI: Bytes (SI).
     * - UNIT_KILOBYTES: Kilobytes (KB).
     * - UNIT_MEGABYTES: Megabytes (MB).
     * - UNIT_GIGABYTES: Gigabytes (GB).
     * - UNIT_TERABYTES: Terabytes (TB)
     * - UNIT_PETABYTES: Petabytes (PB).
     * - UNIT_EXABYTES: Exabytes (EB).
     * - UNIT_BITS_IEC: Data (IEC). Bits (IEC).
     * - UNIT_BYTES_IEC: Bytes (IEC).
     * - UNIT_KIBIBYTES: Kibibytes (KiB).
     * - UNIT_MEBIBYTES: Mebibytes (MiB).
     * - UNIT_GIBIBYTES: Gigibytes (GiB).
     * - UNIT_TEBIBYTES: Tebibytes (TiB).
     * - UNIT_PEBIBYTES: Pebibytes (PiB).
     * - UNIT_EXBIBYTES: Exbibytes (EiB).
     * - UNIT_REQUESTS_PER_SECOND: Throughput. Requests per second (reqps).
     * - UNIT_OPERATIONS_PER_SECOND: Operations per second (ops).
     * - UNIT_WRITES_PER_SECOND: Writes per second (wps).
     * - UNIT_READS_PER_SECOND: Reads per second (rps).
     * - UNIT_PACKETS_PER_SECOND: Packets per second (pps).
     * - UNIT_IO_OPERATIONS_PER_SECOND: IO operations per second (iops).
     * - UNIT_COUNTS_PER_SECOND: Counts per second (counts/sec).
     * - UNIT_BITS_SI_PER_SECOND: Data Rate (SI). Bits (SI) per second (bits/sec).
     * - UNIT_BYTES_SI_PER_SECOND: Bytes (SI) per second (bytes/sec).
     * - UNIT_KILOBITS_PER_SECOND: Kilobits per second (KBits/sec).
     * - UNIT_KILOBYTES_PER_SECOND: Kilobytes per second (KB/sec).
     * - UNIT_MEGABITS_PER_SECOND: Megabits per second (MBits/sec).
     * - UNIT_MEGABYTES_PER_SECOND: Megabytes per second (MB/sec).
     * - UNIT_GIGABITS_PER_SECOND: Gigabits per second (GBits/sec).
     * - UNIT_GIGABYTES_PER_SECOND: Gigabytes per second (GB/sec).
     * - UNIT_TERABITS_PER_SECOND: Terabits per second (TBits/sec).
     * - UNIT_TERABYTES_PER_SECOND: Terabytes per second (TB/sec).
     * - UNIT_PETABITS_PER_SECOND: Petabits per second (Pbits/sec).
     * - UNIT_PETABYTES_PER_SECOND: Petabytes per second (PB/sec).
     * - UNIT_BITS_IEC_PER_SECOND: Data Rate (IEC). Bits (IEC) per second (bits/sec).
     * - UNIT_BYTES_IEC_PER_SECOND: Bytes (IEC) per second (bytes/sec).
     * - UNIT_KIBIBITS_PER_SECOND: Kibibits per second (KiBits/sec).
     * - UNIT_KIBIBYTES_PER_SECOND: Kibibytes per second (KiB/sec).
     * - UNIT_MEBIBITS_PER_SECOND: Mebibits per second (MiBits/sec).
     * - UNIT_MEBIBYTES_PER_SECOND: Mebibytes per second (MiB/sec).
     * - UNIT_GIBIBITS_PER_SECOND: Gibibits per second (GiBits/sec).
     * - UNIT_GIBIBYTES_PER_SECOND: Gibibytes per second (GiB/sec).
     * - UNIT_TEBIBITS_PER_SECOND: Tebibits per second (TiBits/sec).
     * - UNIT_TEBIBYTES_PER_SECOND: Tebibytes per second (TiB/sec).
     * - UNIT_PEBIBITS_PER_SECOND: Pebibits per second (PiBits/sec).
     * - UNIT_PEBIBYTES_PER_SECOND: Pebibytes per second (PiB/sec).
     * - UNIT_DATETIME_UTC: Date & time. Datetime (UTC).
     * - UNIT_DATETIME_LOCAL: Datetime (local).
     * - UNIT_HERTZ: Frequency. Hertz (Hz).
     * - UNIT_KILOHERTZ: Kilohertz (KHz).
     * - UNIT_MEGAHERTZ: Megahertz (MHz).
     * - UNIT_GIGAHERTZ: Gigahertz (GHz).
     * - UNIT_DOLLAR: Currency. Dollar.
     * - UNIT_EURO: Euro.
     * - UNIT_ROUBLE: Rouble.
     * - UNIT_CELSIUS: Temperature. Celsius (°C).
     * - UNIT_FAHRENHEIT: Fahrenheit (°F).
     * - UNIT_KELVIN: Kelvin (K).
     * - UNIT_FLOP_PER_SECOND: Computation. Flop per second (FLOP/sec).
     * - UNIT_KILOFLOP_PER_SECOND: Kiloflop per second (KFLOP/sec).
     * - UNIT_MEGAFLOP_PER_SECOND: Megaflop per second (MFLOP/sec).
     * - UNIT_GIGAFLOP_PER_SECOND: Gigaflop per second (GFLOP/sec).
     * - UNIT_PETAFLOP_PER_SECOND: Petaflop per second (PFLOP/sec).
     * - UNIT_EXAFLOP_PER_SECOND: Exaflop per second (EFLOP/sec).
     * - UNIT_METERS_PER_SECOND: Velocity. Meters per second (m/sec).
     * - UNIT_KILOMETERS_PER_HOUR: Kilometers per hour (km/h).
     * - UNIT_MILES_PER_HOUR: Miles per hour (mi/h).
     * - UNIT_MILLIMETER: Length. Millimeter.
     * - UNIT_CENTIMETER: Centimeter.
     * - UNIT_METER: Meter.
     * - UNIT_KILOMETER: Kilometer.
     * - UNIT_MILE: Mile.
     * - UNIT_PPM: Concentration. Parts per million (ppm).
     * - UNIT_EVENTS_PER_SECOND: Events per second
     * - UNIT_PACKETS: Packets
     * - UNIT_DBM: dBm (dbm)
     * - UNIT_VIRTUAL_CPU: Virtual CPU cores based on CPU time (vcpu)
     * - UNIT_MESSAGES_PER_SECOND: Messages per second (mps)
     */
    unitFormat?: pulumi.Input<string>;
}

export interface MonitoringDashboardWidgetChartVisualizationSettingYaxisSettingRight {
    /**
     * Max value in extended number format or empty.
     */
    max?: pulumi.Input<string>;
    /**
     * Min value in extended number format or empty.
     */
    min?: pulumi.Input<string>;
    /**
     * Tick value precision (null as default, 0-7 in other cases).
     */
    precision?: pulumi.Input<number>;
    /**
     * Title or empty.
     */
    title?: pulumi.Input<string>;
    /**
     * Type.
     */
    type?: pulumi.Input<string>;
    /**
     * Unit format.
     */
    unitFormat?: pulumi.Input<string>;
}

export interface MonitoringDashboardWidgetPosition {
    /**
     * Height.
     */
    h?: pulumi.Input<number>;
    /**
     * Width.
     */
    w?: pulumi.Input<number>;
    /**
     * X-axis top-left corner coordinate.
     */
    x?: pulumi.Input<number>;
    /**
     * Y-axis top-left corner coordinate.
     */
    y?: pulumi.Input<number>;
}

export interface MonitoringDashboardWidgetText {
    /**
     * Widget text.
     */
    text?: pulumi.Input<string>;
}

export interface MonitoringDashboardWidgetTitle {
    /**
     * Title size. Values: 
     * - TITLE_SIZE_XS: Extra small size.
     * - TITLE_SIZE_S: Small size.
     * - TITLE_SIZE_M: Middle size.
     * - TITLE_SIZE_L: Large size.
     */
    size?: pulumi.Input<string>;
    /**
     * Title text.
     */
    text: pulumi.Input<string>;
}

export interface OrganizationmanagerOsLoginSettingsSshCertificateSettings {
    /**
     * Enables or disables usage of ssh certificates signed by trusted CA.
     */
    enabled?: pulumi.Input<boolean>;
}

export interface OrganizationmanagerOsLoginSettingsUserSshKeySettings {
    /**
     * If set to true subject is allowed to manage own ssh keys without having to be assigned specific permissions.
     */
    allowManageOwnKeys?: pulumi.Input<boolean>;
    /**
     * Enables or disables usage of ssh keys assigned to a specific subject.
     */
    enabled?: pulumi.Input<boolean>;
}

export interface OrganizationmanagerSamlFederationSecuritySettings {
    /**
     * Enable encrypted assertions.
     */
    encryptedAssertions: pulumi.Input<boolean>;
}

export interface ServerlessContainerConnectivity {
    networkId: pulumi.Input<string>;
}

export interface ServerlessContainerImage {
    args?: pulumi.Input<pulumi.Input<string>[]>;
    commands?: pulumi.Input<pulumi.Input<string>[]>;
    digest?: pulumi.Input<string>;
    environment?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Invoke URL for the Yandex Cloud Serverless Container
     */
    url: pulumi.Input<string>;
    workDir?: pulumi.Input<string>;
}

export interface ServerlessContainerLogOptions {
    /**
     * Is logging from container disabled
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * Folder ID for the Yandex Cloud Serverless Container
     */
    folderId?: pulumi.Input<string>;
    /**
     * Log entries are written to specified log group
     */
    logGroupId?: pulumi.Input<string>;
    /**
     * Minimum log entry level
     */
    minLevel?: pulumi.Input<string>;
}

export interface ServerlessContainerProvisionPolicy {
    minInstances: pulumi.Input<number>;
}

export interface ServerlessContainerSecret {
    /**
     * (Required) Container's environment variable in which secret's value will be stored.
     */
    environmentVariable: pulumi.Input<string>;
    /**
     * (Required) Secret's id.
     */
    id: pulumi.Input<string>;
    /**
     * (Required) Secret's entries key which value will be stored in environment variable.
     */
    key: pulumi.Input<string>;
    /**
     * (Required) Secret's version id.
     */
    versionId: pulumi.Input<string>;
}

export interface ServerlessContainerStorageMount {
    /**
     * (Required) Name of the mounting bucket.
     */
    bucket: pulumi.Input<string>;
    /**
     * (Required) Path inside the container to access the directory in which the bucket is mounted.
     */
    mountPointPath: pulumi.Input<string>;
    /**
     * Prefix within the bucket. If you leave this field empty, the entire bucket will be mounted.
     */
    prefix?: pulumi.Input<string>;
    /**
     * Mount the bucket in read-only mode.
     */
    readOnly?: pulumi.Input<boolean>;
}

export interface SmartcaptchaCaptchaOverrideVariant {
    challengeType?: pulumi.Input<string>;
    complexity?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    preCheckType?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}

export interface SmartcaptchaCaptchaSecurityRule {
    condition?: pulumi.Input<inputs.SmartcaptchaCaptchaSecurityRuleCondition>;
    description?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    overrideVariantUuid?: pulumi.Input<string>;
    priority?: pulumi.Input<number>;
}

export interface SmartcaptchaCaptchaSecurityRuleCondition {
    headers?: pulumi.Input<pulumi.Input<inputs.SmartcaptchaCaptchaSecurityRuleConditionHeader>[]>;
    host?: pulumi.Input<inputs.SmartcaptchaCaptchaSecurityRuleConditionHost>;
    sourceIp?: pulumi.Input<inputs.SmartcaptchaCaptchaSecurityRuleConditionSourceIp>;
    uri?: pulumi.Input<inputs.SmartcaptchaCaptchaSecurityRuleConditionUri>;
}

export interface SmartcaptchaCaptchaSecurityRuleConditionHeader {
    name?: pulumi.Input<string>;
    value: pulumi.Input<inputs.SmartcaptchaCaptchaSecurityRuleConditionHeaderValue>;
}

export interface SmartcaptchaCaptchaSecurityRuleConditionHeaderValue {
    exactMatch?: pulumi.Input<string>;
    exactNotMatch?: pulumi.Input<string>;
    pireRegexMatch?: pulumi.Input<string>;
    pireRegexNotMatch?: pulumi.Input<string>;
    prefixMatch?: pulumi.Input<string>;
    prefixNotMatch?: pulumi.Input<string>;
}

export interface SmartcaptchaCaptchaSecurityRuleConditionHost {
    hosts?: pulumi.Input<pulumi.Input<inputs.SmartcaptchaCaptchaSecurityRuleConditionHostHost>[]>;
}

export interface SmartcaptchaCaptchaSecurityRuleConditionHostHost {
    exactMatch?: pulumi.Input<string>;
    exactNotMatch?: pulumi.Input<string>;
    pireRegexMatch?: pulumi.Input<string>;
    pireRegexNotMatch?: pulumi.Input<string>;
    prefixMatch?: pulumi.Input<string>;
    prefixNotMatch?: pulumi.Input<string>;
}

export interface SmartcaptchaCaptchaSecurityRuleConditionSourceIp {
    geoIpMatch?: pulumi.Input<inputs.SmartcaptchaCaptchaSecurityRuleConditionSourceIpGeoIpMatch>;
    geoIpNotMatch?: pulumi.Input<inputs.SmartcaptchaCaptchaSecurityRuleConditionSourceIpGeoIpNotMatch>;
    ipRangesMatch?: pulumi.Input<inputs.SmartcaptchaCaptchaSecurityRuleConditionSourceIpIpRangesMatch>;
    ipRangesNotMatch?: pulumi.Input<inputs.SmartcaptchaCaptchaSecurityRuleConditionSourceIpIpRangesNotMatch>;
}

export interface SmartcaptchaCaptchaSecurityRuleConditionSourceIpGeoIpMatch {
    locations?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SmartcaptchaCaptchaSecurityRuleConditionSourceIpGeoIpNotMatch {
    locations?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SmartcaptchaCaptchaSecurityRuleConditionSourceIpIpRangesMatch {
    ipRanges?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SmartcaptchaCaptchaSecurityRuleConditionSourceIpIpRangesNotMatch {
    ipRanges?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SmartcaptchaCaptchaSecurityRuleConditionUri {
    path?: pulumi.Input<inputs.SmartcaptchaCaptchaSecurityRuleConditionUriPath>;
    queries?: pulumi.Input<pulumi.Input<inputs.SmartcaptchaCaptchaSecurityRuleConditionUriQuery>[]>;
}

export interface SmartcaptchaCaptchaSecurityRuleConditionUriPath {
    exactMatch?: pulumi.Input<string>;
    exactNotMatch?: pulumi.Input<string>;
    pireRegexMatch?: pulumi.Input<string>;
    pireRegexNotMatch?: pulumi.Input<string>;
    prefixMatch?: pulumi.Input<string>;
    prefixNotMatch?: pulumi.Input<string>;
}

export interface SmartcaptchaCaptchaSecurityRuleConditionUriQuery {
    key: pulumi.Input<string>;
    value: pulumi.Input<inputs.SmartcaptchaCaptchaSecurityRuleConditionUriQueryValue>;
}

export interface SmartcaptchaCaptchaSecurityRuleConditionUriQueryValue {
    exactMatch?: pulumi.Input<string>;
    exactNotMatch?: pulumi.Input<string>;
    pireRegexMatch?: pulumi.Input<string>;
    pireRegexNotMatch?: pulumi.Input<string>;
    prefixMatch?: pulumi.Input<string>;
    prefixNotMatch?: pulumi.Input<string>;
}

export interface StorageBucketAnonymousAccessFlags {
    configRead?: pulumi.Input<boolean>;
    /**
     * Allows to list object in bucket anonymously.
     */
    list?: pulumi.Input<boolean>;
    /**
     * Allows to read objects in bucket anonymously.
     */
    read?: pulumi.Input<boolean>;
}

export interface StorageBucketCorsRule {
    /**
     * Specifies which headers are allowed.
     */
    allowedHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies which methods are allowed. Can be `GET`, `PUT`, `POST`, `DELETE` or `HEAD`.
     */
    allowedMethods: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies which origins are allowed.
     */
    allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies expose header in the response.
     */
    exposeHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies time in seconds that browser can cache the response for a preflight request.
     */
    maxAgeSeconds?: pulumi.Input<number>;
}

export interface StorageBucketGrant {
    /**
     * Canonical user id to grant for. Used only when type is `CanonicalUser`.
     */
    id?: pulumi.Input<string>;
    /**
     * List of permissions to apply for grantee. Valid values are `READ`, `WRITE`, `FULL_CONTROL`.
     */
    permissions: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Type of grantee to apply for. Valid values are `CanonicalUser` and `Group`.
     */
    type: pulumi.Input<string>;
    /**
     * Uri address to grant for. Used only when type is Group.
     *
     * > **Note:** To manage `grant` argument, service account with `storage.admin` role should be used.
     */
    uri?: pulumi.Input<string>;
}

export interface StorageBucketHttps {
    /**
     * — Id of the certificate in Certificate Manager, that will be used for bucket.
     *
     * The `tags` object for setting tags (or labels) for bucket. See [tags](https://cloud.yandex.ru/docs/storage/concepts/tags) for more information.
     */
    certificateId: pulumi.Input<string>;
}

export interface StorageBucketLifecycleRule {
    /**
     * Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
     */
    abortIncompleteMultipartUploadDays?: pulumi.Input<number>;
    /**
     * Specifies lifecycle rule status.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Specifies a period in the object's expire (documented below).
     */
    expiration?: pulumi.Input<inputs.StorageBucketLifecycleRuleExpiration>;
    /**
     * Filter block identifies one or more objects to which the rule applies. A Filter must have exactly one of Prefix, Tag, or And specified. The filter supports the following options:
     *
     * - objectSizeGreaterThan - (Optional) Minimum object size to which the rule applies.
     * - objectSizeLessThan - (Optional) Maximum object size to which the rule applies.
     * - prefix - (Optional) Object key prefix identifying one or more objects to which the rule applies.
     * - tag - (Optional) A key and value pair for filtering objects. E.g.: key=key1, value=value1.
     * - and - (Optional) A logical `and` operator applied to one or more filter parameters. It should be used when two or more of the above parameters are used. It supports the following parameters:
     *
     * - objectSizeGreaterThan - (Optional) Minimum object size to which the rule applies.
     * - objectSizeLessThan - (Optional) Maximum object size to which the rule applies.
     * - prefix - (Optional) Object key prefix identifying one or more objects to which the rule applies.
     * - tags - (Optional) Key-value pairs for filtering objects. All of these tags must exist in the object's tags to apply the rule. E.g.: key1=value1, key2=value2
     */
    filter?: pulumi.Input<inputs.StorageBucketLifecycleRuleFilter>;
    /**
     * Unique identifier for the rule. Must be less than or equal to 255 characters in length.
     */
    id?: pulumi.Input<string>;
    /**
     * Specifies when noncurrent object versions expire (documented below).
     */
    noncurrentVersionExpiration?: pulumi.Input<inputs.StorageBucketLifecycleRuleNoncurrentVersionExpiration>;
    /**
     * Specifies when noncurrent object versions transitions (documented below).
     *
     * At least one of `abortIncompleteMultipartUploadDays`, `expiration`, `transition`, `noncurrentVersionExpiration`, `noncurrentVersionTransition` must be specified.
     */
    noncurrentVersionTransitions?: pulumi.Input<pulumi.Input<inputs.StorageBucketLifecycleRuleNoncurrentVersionTransition>[]>;
    /**
     * Object key prefix identifying one or more objects to which the rule applies.
     *
     * @deprecated Use filter instead
     */
    prefix?: pulumi.Input<string>;
    /**
     * Specifies a period in the object's transitions (documented below).
     */
    transitions?: pulumi.Input<pulumi.Input<inputs.StorageBucketLifecycleRuleTransition>[]>;
}

export interface StorageBucketLifecycleRuleExpiration {
    /**
     * Specifies the date after which you want the corresponding action to take effect.
     */
    date?: pulumi.Input<string>;
    /**
     * Specifies the number of days after object creation when the specific rule action takes effect.
     */
    days?: pulumi.Input<number>;
    /**
     * On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Object Storage to delete expired object delete markers.
     */
    expiredObjectDeleteMarker?: pulumi.Input<boolean>;
}

export interface StorageBucketLifecycleRuleFilter {
    and?: pulumi.Input<inputs.StorageBucketLifecycleRuleFilterAnd>;
    objectSizeGreaterThan?: pulumi.Input<number>;
    objectSizeLessThan?: pulumi.Input<number>;
    /**
     * Object key prefix identifying one or more objects to which the rule applies.
     */
    prefix?: pulumi.Input<string>;
    tag?: pulumi.Input<inputs.StorageBucketLifecycleRuleFilterTag>;
}

export interface StorageBucketLifecycleRuleFilterAnd {
    objectSizeGreaterThan?: pulumi.Input<number>;
    objectSizeLessThan?: pulumi.Input<number>;
    /**
     * Object key prefix identifying one or more objects to which the rule applies.
     */
    prefix?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface StorageBucketLifecycleRuleFilterTag {
    key: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface StorageBucketLifecycleRuleNoncurrentVersionExpiration {
    /**
     * Specifies the number of days noncurrent object versions expire.
     */
    days?: pulumi.Input<number>;
}

export interface StorageBucketLifecycleRuleNoncurrentVersionTransition {
    /**
     * Specifies the number of days noncurrent object versions transition.
     */
    days?: pulumi.Input<number>;
    /**
     * Specifies the storage class to which you want the noncurrent object versions to transition. Supported values: [`STANDARD_IA`, `COLD`, `ICE`].
     */
    storageClass: pulumi.Input<string>;
}

export interface StorageBucketLifecycleRuleTransition {
    /**
     * Specifies the date after which you want the corresponding action to take effect.
     */
    date?: pulumi.Input<string>;
    /**
     * Specifies the number of days after object creation when the specific rule action takes effect.
     */
    days?: pulumi.Input<number>;
    /**
     * Specifies the storage class to which you want the object to transition. Supported values: [`STANDARD_IA`, `COLD`, `ICE`].
     */
    storageClass: pulumi.Input<string>;
}

export interface StorageBucketLogging {
    /**
     * The name of the bucket that will receive the log objects.
     */
    targetBucket: pulumi.Input<string>;
    /**
     * To specify a key prefix for log objects.
     */
    targetPrefix?: pulumi.Input<string>;
}

export interface StorageBucketObjectLockConfiguration {
    /**
     * Enable object locking in a bucket. Require versioning to be enabled.
     */
    objectLockEnabled?: pulumi.Input<string>;
    /**
     * Specifies a default locking configuration for added objects. Require objectLockEnabled to be enabled.
     */
    rule?: pulumi.Input<inputs.StorageBucketObjectLockConfigurationRule>;
}

export interface StorageBucketObjectLockConfigurationRule {
    defaultRetention: pulumi.Input<inputs.StorageBucketObjectLockConfigurationRuleDefaultRetention>;
}

export interface StorageBucketObjectLockConfigurationRuleDefaultRetention {
    /**
     * Specifies the number of days after object creation when the specific rule action takes effect.
     */
    days?: pulumi.Input<number>;
    /**
     * Specifies a type of object lock. One of `["GOVERNANCE", "COMPLIANCE"]`.
     */
    mode: pulumi.Input<string>;
    /**
     * Specifies a retention period in years after uploading an object version. It must be a positive integer. You can't set it simultaneously with `days`.
     */
    years?: pulumi.Input<number>;
}

export interface StorageBucketServerSideEncryptionConfiguration {
    /**
     * A single object for server-side encryption by default configuration. (documented below)
     */
    rule: pulumi.Input<inputs.StorageBucketServerSideEncryptionConfigurationRule>;
}

export interface StorageBucketServerSideEncryptionConfigurationRule {
    /**
     * A single object for setting server-side encryption by default. (documented below)
     */
    applyServerSideEncryptionByDefault: pulumi.Input<inputs.StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault>;
}

export interface StorageBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault {
    /**
     * The KMS master key ID used for the SSE-KMS encryption.
     *
     * The `policy` object should contain the only field with the text of the policy. See [policy documentation](https://cloud.yandex.com/docs/storage/concepts/policy) for more information on policy format.
     *
     * Extended parameters of the bucket:
     *
     * > **NOTE:** for this parameters, authorization by `IAM-token` will be used.
     */
    kmsMasterKeyId: pulumi.Input<string>;
    /**
     * The server-side encryption algorithm to use. Single valid value is `aws:kms`
     */
    sseAlgorithm: pulumi.Input<string>;
}

export interface StorageBucketVersioning {
    /**
     * Enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket.
     */
    enabled?: pulumi.Input<boolean>;
}

export interface StorageBucketWebsite {
    /**
     * An absolute path to the document to return in case of a 4XX error.
     */
    errorDocument?: pulumi.Input<string>;
    /**
     * Storage returns this index document when requests are made to the root domain or any of the subfolders.
     */
    indexDocument?: pulumi.Input<string>;
    /**
     * A hostname to redirect all website requests for this bucket to. Hostname can optionally be prefixed with a protocol (`http://` or `https://`) to use when redirecting requests. The default is the protocol that is used in the original request.
     */
    redirectAllRequestsTo?: pulumi.Input<string>;
    /**
     * A json array containing [routing rules](https://cloud.yandex.com/docs/storage/s3/api-ref/hosting/upload#request-scheme) describing redirect behavior and when redirects are applied.
     *
     * The `CORS` object supports the following:
     */
    routingRules?: pulumi.Input<string>;
}

export interface SwsSecurityProfileSecurityRule {
    description?: pulumi.Input<string>;
    dryRun?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    priority?: pulumi.Input<number>;
    ruleCondition?: pulumi.Input<inputs.SwsSecurityProfileSecurityRuleRuleCondition>;
    smartProtection?: pulumi.Input<inputs.SwsSecurityProfileSecurityRuleSmartProtection>;
}

export interface SwsSecurityProfileSecurityRuleRuleCondition {
    action?: pulumi.Input<string>;
    condition?: pulumi.Input<inputs.SwsSecurityProfileSecurityRuleRuleConditionCondition>;
}

export interface SwsSecurityProfileSecurityRuleRuleConditionCondition {
    authority?: pulumi.Input<inputs.SwsSecurityProfileSecurityRuleRuleConditionConditionAuthority>;
    headers?: pulumi.Input<pulumi.Input<inputs.SwsSecurityProfileSecurityRuleRuleConditionConditionHeader>[]>;
    httpMethod?: pulumi.Input<inputs.SwsSecurityProfileSecurityRuleRuleConditionConditionHttpMethod>;
    requestUri?: pulumi.Input<inputs.SwsSecurityProfileSecurityRuleRuleConditionConditionRequestUri>;
    sourceIp?: pulumi.Input<inputs.SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIp>;
}

export interface SwsSecurityProfileSecurityRuleRuleConditionConditionAuthority {
    authorities?: pulumi.Input<pulumi.Input<inputs.SwsSecurityProfileSecurityRuleRuleConditionConditionAuthorityAuthority>[]>;
}

export interface SwsSecurityProfileSecurityRuleRuleConditionConditionAuthorityAuthority {
    exactMatch?: pulumi.Input<string>;
    exactNotMatch?: pulumi.Input<string>;
    pireRegexMatch?: pulumi.Input<string>;
    pireRegexNotMatch?: pulumi.Input<string>;
    prefixMatch?: pulumi.Input<string>;
    prefixNotMatch?: pulumi.Input<string>;
}

export interface SwsSecurityProfileSecurityRuleRuleConditionConditionHeader {
    name?: pulumi.Input<string>;
    value: pulumi.Input<inputs.SwsSecurityProfileSecurityRuleRuleConditionConditionHeaderValue>;
}

export interface SwsSecurityProfileSecurityRuleRuleConditionConditionHeaderValue {
    exactMatch?: pulumi.Input<string>;
    exactNotMatch?: pulumi.Input<string>;
    pireRegexMatch?: pulumi.Input<string>;
    pireRegexNotMatch?: pulumi.Input<string>;
    prefixMatch?: pulumi.Input<string>;
    prefixNotMatch?: pulumi.Input<string>;
}

export interface SwsSecurityProfileSecurityRuleRuleConditionConditionHttpMethod {
    httpMethods?: pulumi.Input<pulumi.Input<inputs.SwsSecurityProfileSecurityRuleRuleConditionConditionHttpMethodHttpMethod>[]>;
}

export interface SwsSecurityProfileSecurityRuleRuleConditionConditionHttpMethodHttpMethod {
    exactMatch?: pulumi.Input<string>;
    exactNotMatch?: pulumi.Input<string>;
    pireRegexMatch?: pulumi.Input<string>;
    pireRegexNotMatch?: pulumi.Input<string>;
    prefixMatch?: pulumi.Input<string>;
    prefixNotMatch?: pulumi.Input<string>;
}

export interface SwsSecurityProfileSecurityRuleRuleConditionConditionRequestUri {
    path?: pulumi.Input<inputs.SwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriPath>;
    queries?: pulumi.Input<pulumi.Input<inputs.SwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriQuery>[]>;
}

export interface SwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriPath {
    exactMatch?: pulumi.Input<string>;
    exactNotMatch?: pulumi.Input<string>;
    pireRegexMatch?: pulumi.Input<string>;
    pireRegexNotMatch?: pulumi.Input<string>;
    prefixMatch?: pulumi.Input<string>;
    prefixNotMatch?: pulumi.Input<string>;
}

export interface SwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriQuery {
    key: pulumi.Input<string>;
    value: pulumi.Input<inputs.SwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriQueryValue>;
}

export interface SwsSecurityProfileSecurityRuleRuleConditionConditionRequestUriQueryValue {
    exactMatch?: pulumi.Input<string>;
    exactNotMatch?: pulumi.Input<string>;
    pireRegexMatch?: pulumi.Input<string>;
    pireRegexNotMatch?: pulumi.Input<string>;
    prefixMatch?: pulumi.Input<string>;
    prefixNotMatch?: pulumi.Input<string>;
}

export interface SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIp {
    geoIpMatch?: pulumi.Input<inputs.SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpGeoIpMatch>;
    geoIpNotMatch?: pulumi.Input<inputs.SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpGeoIpNotMatch>;
    ipRangesMatch?: pulumi.Input<inputs.SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpIpRangesMatch>;
    ipRangesNotMatch?: pulumi.Input<inputs.SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpIpRangesNotMatch>;
}

export interface SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpGeoIpMatch {
    locations?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpGeoIpNotMatch {
    locations?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpIpRangesMatch {
    ipRanges?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SwsSecurityProfileSecurityRuleRuleConditionConditionSourceIpIpRangesNotMatch {
    ipRanges?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SwsSecurityProfileSecurityRuleSmartProtection {
    condition?: pulumi.Input<inputs.SwsSecurityProfileSecurityRuleSmartProtectionCondition>;
    mode?: pulumi.Input<string>;
}

export interface SwsSecurityProfileSecurityRuleSmartProtectionCondition {
    authority?: pulumi.Input<inputs.SwsSecurityProfileSecurityRuleSmartProtectionConditionAuthority>;
    headers?: pulumi.Input<pulumi.Input<inputs.SwsSecurityProfileSecurityRuleSmartProtectionConditionHeader>[]>;
    httpMethod?: pulumi.Input<inputs.SwsSecurityProfileSecurityRuleSmartProtectionConditionHttpMethod>;
    requestUri?: pulumi.Input<inputs.SwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUri>;
    sourceIp?: pulumi.Input<inputs.SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIp>;
}

export interface SwsSecurityProfileSecurityRuleSmartProtectionConditionAuthority {
    authorities?: pulumi.Input<pulumi.Input<inputs.SwsSecurityProfileSecurityRuleSmartProtectionConditionAuthorityAuthority>[]>;
}

export interface SwsSecurityProfileSecurityRuleSmartProtectionConditionAuthorityAuthority {
    exactMatch?: pulumi.Input<string>;
    exactNotMatch?: pulumi.Input<string>;
    pireRegexMatch?: pulumi.Input<string>;
    pireRegexNotMatch?: pulumi.Input<string>;
    prefixMatch?: pulumi.Input<string>;
    prefixNotMatch?: pulumi.Input<string>;
}

export interface SwsSecurityProfileSecurityRuleSmartProtectionConditionHeader {
    name?: pulumi.Input<string>;
    value: pulumi.Input<inputs.SwsSecurityProfileSecurityRuleSmartProtectionConditionHeaderValue>;
}

export interface SwsSecurityProfileSecurityRuleSmartProtectionConditionHeaderValue {
    exactMatch?: pulumi.Input<string>;
    exactNotMatch?: pulumi.Input<string>;
    pireRegexMatch?: pulumi.Input<string>;
    pireRegexNotMatch?: pulumi.Input<string>;
    prefixMatch?: pulumi.Input<string>;
    prefixNotMatch?: pulumi.Input<string>;
}

export interface SwsSecurityProfileSecurityRuleSmartProtectionConditionHttpMethod {
    httpMethods?: pulumi.Input<pulumi.Input<inputs.SwsSecurityProfileSecurityRuleSmartProtectionConditionHttpMethodHttpMethod>[]>;
}

export interface SwsSecurityProfileSecurityRuleSmartProtectionConditionHttpMethodHttpMethod {
    exactMatch?: pulumi.Input<string>;
    exactNotMatch?: pulumi.Input<string>;
    pireRegexMatch?: pulumi.Input<string>;
    pireRegexNotMatch?: pulumi.Input<string>;
    prefixMatch?: pulumi.Input<string>;
    prefixNotMatch?: pulumi.Input<string>;
}

export interface SwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUri {
    path?: pulumi.Input<inputs.SwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriPath>;
    queries?: pulumi.Input<pulumi.Input<inputs.SwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriQuery>[]>;
}

export interface SwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriPath {
    exactMatch?: pulumi.Input<string>;
    exactNotMatch?: pulumi.Input<string>;
    pireRegexMatch?: pulumi.Input<string>;
    pireRegexNotMatch?: pulumi.Input<string>;
    prefixMatch?: pulumi.Input<string>;
    prefixNotMatch?: pulumi.Input<string>;
}

export interface SwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriQuery {
    key: pulumi.Input<string>;
    value: pulumi.Input<inputs.SwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriQueryValue>;
}

export interface SwsSecurityProfileSecurityRuleSmartProtectionConditionRequestUriQueryValue {
    exactMatch?: pulumi.Input<string>;
    exactNotMatch?: pulumi.Input<string>;
    pireRegexMatch?: pulumi.Input<string>;
    pireRegexNotMatch?: pulumi.Input<string>;
    prefixMatch?: pulumi.Input<string>;
    prefixNotMatch?: pulumi.Input<string>;
}

export interface SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIp {
    geoIpMatch?: pulumi.Input<inputs.SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpGeoIpMatch>;
    geoIpNotMatch?: pulumi.Input<inputs.SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpGeoIpNotMatch>;
    ipRangesMatch?: pulumi.Input<inputs.SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpIpRangesMatch>;
    ipRangesNotMatch?: pulumi.Input<inputs.SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpIpRangesNotMatch>;
}

export interface SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpGeoIpMatch {
    locations?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpGeoIpNotMatch {
    locations?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpIpRangesMatch {
    ipRanges?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface SwsSecurityProfileSecurityRuleSmartProtectionConditionSourceIpIpRangesNotMatch {
    ipRanges?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VpcAddressDnsRecord {
    /**
     * DNS zone id to create record at.
     */
    dnsZoneId: pulumi.Input<string>;
    /**
     * FQDN for record to address
     */
    fqdn: pulumi.Input<string>;
    /**
     * If PTR record is needed
     */
    ptr?: pulumi.Input<boolean>;
    /**
     * TTL of DNS record
     */
    ttl?: pulumi.Input<number>;
}

export interface VpcAddressExternalIpv4Address {
    /**
     * Allocated IP address.
     */
    address?: pulumi.Input<string>;
    /**
     * Enable DDOS protection. Possible values are: "qrator"
     */
    ddosProtectionProvider?: pulumi.Input<string>;
    /**
     * Wanted outgoing smtp capability.
     *
     * > **NOTE:** Either one `address` or `zoneId` arguments can be specified.
     * > **NOTE:** Either one `ddosProtectionProvider` or `outgoingSmtpCapability` arguments can be specified.
     * > **NOTE:** Change any argument in `externalIpv4Address` will cause an address recreate
     */
    outgoingSmtpCapability?: pulumi.Input<string>;
    /**
     * Zone for allocating address.
     */
    zoneId?: pulumi.Input<string>;
}

export interface VpcDefaultSecurityGroupEgress {
    /**
     * Description of the security group.
     */
    description?: pulumi.Input<string>;
    /**
     * (Optional) - Minimum port number.
     */
    fromPort?: pulumi.Input<number>;
    /**
     * Id of the security group.
     */
    id?: pulumi.Input<string>;
    /**
     * Labels to assign to this security group.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Optional) - Port number (if applied to a single port).
     */
    port?: pulumi.Input<number>;
    /**
     * (Optional) - Special-purpose targets. `selfSecurityGroup` refers to this particular security group. `loadbalancerHealthchecks` represents [loadbalancer health check nodes](https://cloud.yandex.com/docs/network-load-balancer/concepts/health-check).
     */
    predefinedTarget?: pulumi.Input<string>;
    /**
     * (Required) - One of `ANY`, `TCP`, `UDP`, `ICMP`, `IPV6_ICMP`.
     */
    protocol: pulumi.Input<string>;
    /**
     * (Optional) - Target security group ID for this rule.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * (Optional) - Maximum port number.
     */
    toPort?: pulumi.Input<number>;
    /**
     * (Optional) - The blocks of IPv4 addresses for this rule.
     */
    v4CidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Optional) - The blocks of IPv6 addresses for this rule. `v6CidrBlocks` argument is currently not supported. It will be available in the future.
     */
    v6CidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VpcDefaultSecurityGroupIngress {
    /**
     * Description of the security group.
     */
    description?: pulumi.Input<string>;
    /**
     * (Optional) - Minimum port number.
     */
    fromPort?: pulumi.Input<number>;
    /**
     * Id of the security group.
     */
    id?: pulumi.Input<string>;
    /**
     * Labels to assign to this security group.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Optional) - Port number (if applied to a single port).
     */
    port?: pulumi.Input<number>;
    /**
     * (Optional) - Special-purpose targets. `selfSecurityGroup` refers to this particular security group. `loadbalancerHealthchecks` represents [loadbalancer health check nodes](https://cloud.yandex.com/docs/network-load-balancer/concepts/health-check).
     */
    predefinedTarget?: pulumi.Input<string>;
    /**
     * (Required) - One of `ANY`, `TCP`, `UDP`, `ICMP`, `IPV6_ICMP`.
     */
    protocol: pulumi.Input<string>;
    /**
     * (Optional) - Target security group ID for this rule.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * (Optional) - Maximum port number.
     */
    toPort?: pulumi.Input<number>;
    /**
     * (Optional) - The blocks of IPv4 addresses for this rule.
     */
    v4CidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Optional) - The blocks of IPv6 addresses for this rule. `v6CidrBlocks` argument is currently not supported. It will be available in the future.
     */
    v6CidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VpcGatewaySharedEgressGateway {
}

export interface VpcRouteTableStaticRoute {
    /**
     * Route prefix in CIDR notation.
     */
    destinationPrefix?: pulumi.Input<string>;
    /**
     * ID of the gateway used ad next hop.
     *
     * > **NOTE:** Only one of `nextHopAddress` or `gatewayId` should be specified.
     */
    gatewayId?: pulumi.Input<string>;
    /**
     * Address of the next hop.
     */
    nextHopAddress?: pulumi.Input<string>;
}

export interface VpcSecurityGroupEgress {
    /**
     * Description of the security group.
     */
    description?: pulumi.Input<string>;
    /**
     * (Optional) - Minimum port number.
     */
    fromPort?: pulumi.Input<number>;
    /**
     * Id of the rule.
     */
    id?: pulumi.Input<string>;
    /**
     * Labels to assign to this security group.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Optional) - Port number (if applied to a single port).
     */
    port?: pulumi.Input<number>;
    /**
     * (Optional) - Special-purpose targets. `selfSecurityGroup` refers to this particular security group. `loadbalancerHealthchecks` represents [loadbalancer health check nodes](https://cloud.yandex.com/docs/network-load-balancer/concepts/health-check).
     */
    predefinedTarget?: pulumi.Input<string>;
    /**
     * (Required) - One of `ANY`, `TCP`, `UDP`, `ICMP`, `IPV6_ICMP`.
     */
    protocol: pulumi.Input<string>;
    /**
     * (Optional) - Target security group ID for this rule.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * (Optional) - Maximum port number.
     */
    toPort?: pulumi.Input<number>;
    /**
     * (Optional) - The blocks of IPv4 addresses for this rule.
     */
    v4CidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Optional) - The blocks of IPv6 addresses for this rule. `v6CidrBlocks` argument is currently not supported. It will be available in the future.
     */
    v6CidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VpcSecurityGroupIngress {
    /**
     * Description of the security group.
     */
    description?: pulumi.Input<string>;
    /**
     * (Optional) - Minimum port number.
     */
    fromPort?: pulumi.Input<number>;
    /**
     * Id of the rule.
     */
    id?: pulumi.Input<string>;
    /**
     * Labels to assign to this security group.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * (Optional) - Port number (if applied to a single port).
     */
    port?: pulumi.Input<number>;
    /**
     * (Optional) - Special-purpose targets. `selfSecurityGroup` refers to this particular security group. `loadbalancerHealthchecks` represents [loadbalancer health check nodes](https://cloud.yandex.com/docs/network-load-balancer/concepts/health-check).
     */
    predefinedTarget?: pulumi.Input<string>;
    /**
     * (Required) - One of `ANY`, `TCP`, `UDP`, `ICMP`, `IPV6_ICMP`.
     */
    protocol: pulumi.Input<string>;
    /**
     * (Optional) - Target security group ID for this rule.
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * (Optional) - Maximum port number.
     */
    toPort?: pulumi.Input<number>;
    /**
     * (Optional) - The blocks of IPv4 addresses for this rule.
     */
    v4CidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Optional) - The blocks of IPv6 addresses for this rule. `v6CidrBlocks` argument is currently not supported. It will be available in the future.
     */
    v6CidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface VpcSubnetDhcpOptions {
    /**
     * Domain name.
     */
    domainName?: pulumi.Input<string>;
    /**
     * Domain name server IP addresses.
     */
    domainNameServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * NTP server IP addresses.
     */
    ntpServers?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface YdbDatabaseDedicatedLocation {
    /**
     * Region for the Yandex Database cluster.
     * The structure is documented below.
     */
    region?: pulumi.Input<inputs.YdbDatabaseDedicatedLocationRegion>;
}

export interface YdbDatabaseDedicatedLocationRegion {
    /**
     * Region ID for the Yandex Database cluster.
     */
    id: pulumi.Input<string>;
}

export interface YdbDatabaseDedicatedScalePolicy {
    /**
     * Fixed scaling policy for the Yandex Database cluster.
     * The structure is documented below.
     *
     * > **NOTE:** Currently, only `fixedScale` is supported.
     */
    fixedScale: pulumi.Input<inputs.YdbDatabaseDedicatedScalePolicyFixedScale>;
}

export interface YdbDatabaseDedicatedScalePolicyFixedScale {
    /**
     * Number of instances for the Yandex Database cluster.
     */
    size: pulumi.Input<number>;
}

export interface YdbDatabaseDedicatedStorageConfig {
    /**
     * Amount of storage groups of selected type for the Yandex Database cluster.
     */
    groupCount: pulumi.Input<number>;
    /**
     * Storage type ID for the Yandex Database cluster.
     * Available presets can be obtained via `yc ydb storage-type list` command.
     */
    storageTypeId: pulumi.Input<string>;
}

export interface YdbDatabaseServerlessServerlessDatabase {
    enableThrottlingRcuLimit?: pulumi.Input<boolean>;
    provisionedRcuLimit?: pulumi.Input<number>;
    storageSizeLimit?: pulumi.Input<number>;
    throttlingRcuLimit?: pulumi.Input<number>;
}

export interface YdbTableChangefeedConsumer {
    important?: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    startingMessageTimestampMs?: pulumi.Input<number>;
    supportedCodecs?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface YdbTableColumn {
    /**
     * Column group
     */
    family?: pulumi.Input<string>;
    /**
     * Column family name
     */
    name: pulumi.Input<string>;
    /**
     * A column cannot have the NULL data type. (	Default: false	)
     */
    notNull?: pulumi.Input<boolean>;
    /**
     * Column data type. YQL data types are used.
     */
    type: pulumi.Input<string>;
}

export interface YdbTableFamily {
    /**
     * Data codec (acceptable values: off, lz4).
     */
    compression: pulumi.Input<string>;
    /**
     * Type of storage device for column data in this group (acceptable values: ssd, rot (from HDD spindle rotation)).
     */
    data: pulumi.Input<string>;
    /**
     * Column family name
     */
    name: pulumi.Input<string>;
}

export interface YdbTablePartitioningSettings {
    autoPartitioningByLoad?: pulumi.Input<boolean>;
    autoPartitioningBySizeEnabled?: pulumi.Input<boolean>;
    autoPartitioningMaxPartitionsCount?: pulumi.Input<number>;
    autoPartitioningMinPartitionsCount?: pulumi.Input<number>;
    autoPartitioningPartitionSizeMb?: pulumi.Input<number>;
    partitionAtKeys?: pulumi.Input<pulumi.Input<inputs.YdbTablePartitioningSettingsPartitionAtKey>[]>;
    uniformPartitions?: pulumi.Input<number>;
}

export interface YdbTablePartitioningSettingsPartitionAtKey {
    keys: pulumi.Input<pulumi.Input<string>[]>;
}

export interface YdbTableTtl {
    /**
     * Column name for TTL
     */
    columnName: pulumi.Input<string>;
    /**
     * Interval in the ISO 8601 format
     */
    expireInterval: pulumi.Input<string>;
    unit?: pulumi.Input<string>;
}

export interface YdbTopicConsumer {
    important?: pulumi.Input<boolean>;
    /**
     * Topic name. Type: string, required. Default value: "".
     */
    name: pulumi.Input<string>;
    startingMessageTimestampMs?: pulumi.Input<number>;
    /**
     * Supported data encodings. Types: array[string]. Default value: ["gzip", "raw", "zstd"].
     */
    supportedCodecs?: pulumi.Input<pulumi.Input<string>[]>;
}
