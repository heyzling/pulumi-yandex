// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Allows creation and management of Cloud resources for an existing Yandex.Cloud Organization. See [the official documentation](https://cloud.yandex.com/docs/resource-manager/concepts/resources-hierarchy) for additional info.
 * Note: deletion of clouds may take up to 30 minutes as it requires a lot of communication between cloud services.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@pulumi/yandex";
 *
 * const cloud1 = new yandex.ResourcemanagerCloud("cloud1", {organizationId: "my_organization_id"});
 * ```
 * <!--End PulumiCodeChooser -->
 */
export class ResourcemanagerCloud extends pulumi.CustomResource {
    /**
     * Get an existing ResourcemanagerCloud resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResourcemanagerCloudState, opts?: pulumi.CustomResourceOptions): ResourcemanagerCloud {
        return new ResourcemanagerCloud(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/resourcemanagerCloud:ResourcemanagerCloud';

    /**
     * Returns true if the given object is an instance of ResourcemanagerCloud.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ResourcemanagerCloud {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResourcemanagerCloud.__pulumiType;
    }

    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * A description of the Cloud.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A set of key/value label pairs to assign to the Cloud.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The name of the Cloud.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Yandex.Cloud Organization that the cloud belongs to. If value is omitted, the default provider Organization ID is used.
     */
    public readonly organizationId!: pulumi.Output<string>;

    /**
     * Create a ResourcemanagerCloud resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ResourcemanagerCloudArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ResourcemanagerCloudArgs | ResourcemanagerCloudState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ResourcemanagerCloudState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["organizationId"] = state ? state.organizationId : undefined;
        } else {
            const args = argsOrState as ResourcemanagerCloudArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["organizationId"] = args ? args.organizationId : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResourcemanagerCloud.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ResourcemanagerCloud resources.
 */
export interface ResourcemanagerCloudState {
    createdAt?: pulumi.Input<string>;
    /**
     * A description of the Cloud.
     */
    description?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs to assign to the Cloud.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the Cloud.
     */
    name?: pulumi.Input<string>;
    /**
     * Yandex.Cloud Organization that the cloud belongs to. If value is omitted, the default provider Organization ID is used.
     */
    organizationId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ResourcemanagerCloud resource.
 */
export interface ResourcemanagerCloudArgs {
    /**
     * A description of the Cloud.
     */
    description?: pulumi.Input<string>;
    /**
     * A set of key/value label pairs to assign to the Cloud.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the Cloud.
     */
    name?: pulumi.Input<string>;
    /**
     * Yandex.Cloud Organization that the cloud belongs to. If value is omitted, the default provider Organization ID is used.
     */
    organizationId?: pulumi.Input<string>;
}
