// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Allows management
 * of [Yandex.Cloud Attach and Detach VM](https://yandex.cloud/docs/backup/operations/policy-vm/attach-and-detach-vm).
 *
 * > **NOTE:\_** Cloud Backup Provider must be activated in order to manipulate with policies.
 * Active it either by UI Console or by `yc` command.
 *
 * ## Example Usage
 *
 * The configuration of Backup Policy Bindings consists of the following attributes:
 *
 * - `policyId`
 * - `instanceId`
 *
 * Please, note the basic example below:
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as yandex from "@pulumi/yandex";
 *
 * const testSa = new yandex.IamServiceAccount("testSa", {});
 * const testBinding = new yandex.ResourcemanagerFolderIamMember("testBinding", {
 *     folderId: testSa.folderId,
 *     role: "backup.editor",
 *     member: pulumi.interpolate`serviceAccount:${testSa.id}`,
 * });
 * const testBackupNetwork = new yandex.VpcNetwork("testBackupNetwork", {});
 * const testBackupSubnet = new yandex.VpcSubnet("testBackupSubnet", {
 *     zone: "ru-central1-a",
 *     networkId: testBackupNetwork.id,
 *     v4CidrBlocks: ["192.168.0.0/24"],
 * });
 * // https://yandex.cloud/ru/docs/backup/concepts/vm-connection#vm-network-access
 * const testBackupSecurityGroup = new yandex.VpcSecurityGroup("testBackupSecurityGroup", {
 *     networkId: testBackupNetwork.id,
 *     egresses: [
 *         {
 *             protocol: "TCP",
 *             fromPort: 7770,
 *             toPort: 7800,
 *             v4CidrBlocks: ["84.47.172.0/24"],
 *         },
 *         {
 *             protocol: "TCP",
 *             port: 443,
 *             v4CidrBlocks: [
 *                 "213.180.204.0/24",
 *                 "213.180.193.0/24",
 *                 "178.176.128.0/24",
 *                 "84.201.181.0/24",
 *                 "84.47.172.0/24",
 *             ],
 *         },
 *         {
 *             protocol: "TCP",
 *             port: 80,
 *             v4CidrBlocks: [
 *                 "213.180.204.0/24",
 *                 "213.180.193.0/24",
 *             ],
 *         },
 *         {
 *             protocol: "TCP",
 *             port: 8443,
 *             v4CidrBlocks: ["84.47.172.0/24"],
 *         },
 *         {
 *             protocol: "TCP",
 *             port: 44445,
 *             v4CidrBlocks: ["51.250.1.0/24"],
 *         },
 *     ],
 * });
 * const ubuntu = yandex.getComputeImage({
 *     family: "ubuntu-2004-lts",
 * });
 * const testBackupCompute = new yandex.ComputeInstance("testBackupCompute", {
 *     platformId: "standard-v1",
 *     zone: "ru-central1-a",
 *     serviceAccountId: testSa.id,
 *     networkInterfaces: [{
 *         subnetId: testBackupSubnet.id,
 *         securityGroupIds: [testBackupSecurityGroup.id],
 *         nat: true,
 *     }],
 *     bootDisk: {
 *         initializeParams: {
 *             imageId: ubuntu.then(ubuntu => ubuntu.id),
 *         },
 *     },
 *     resources: {
 *         cores: 2,
 *         memory: 4,
 *     },
 *     metadata: {
 *         "user-data": `#cloud-config
 * packages:
 *   - curl
 *   - perl
 *   - jq
 * runcmd:
 *   - curl https://storage.yandexcloud.net/backup-distributions/agent_installer.sh | sudo bash
 * `,
 *     },
 * });
 * const testBackupPolicy = yandex.getBackupPolicy({
 *     name: "Default daily",
 * });
 * const testBackupBinding = new yandex.BackupPolicyBindings("testBackupBinding", {
 *     instanceId: testBackupCompute.id,
 *     policyId: testBackupPolicy.then(testBackupPolicy => testBackupPolicy.id),
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export class BackupPolicyBindings extends pulumi.CustomResource {
    /**
     * Get an existing BackupPolicyBindings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BackupPolicyBindingsState, opts?: pulumi.CustomResourceOptions): BackupPolicyBindings {
        return new BackupPolicyBindings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'yandex:index/backupPolicyBindings:BackupPolicyBindings';

    /**
     * Returns true if the given object is an instance of BackupPolicyBindings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BackupPolicyBindings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BackupPolicyBindings.__pulumiType;
    }

    /**
     * (Computed) - Creation timestamp of the Yandex Cloud Policy Bindings.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * (Computed) - Boolean flag that specifies whether the policy application is enabled. May be `false`
     * if `processing` flag is `true`.
     */
    public /*out*/ readonly enabled!: pulumi.Output<boolean>;
    /**
     * — Compute Cloud instance ID.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * — Backup Policy ID.
     */
    public readonly policyId!: pulumi.Output<string>;
    /**
     * (Computed) - Boolean flag that specifies whether the policy is in the process of binding to an instance.
     */
    public /*out*/ readonly processing!: pulumi.Output<boolean>;

    /**
     * Create a BackupPolicyBindings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BackupPolicyBindingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BackupPolicyBindingsArgs | BackupPolicyBindingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BackupPolicyBindingsState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["policyId"] = state ? state.policyId : undefined;
            resourceInputs["processing"] = state ? state.processing : undefined;
        } else {
            const args = argsOrState as BackupPolicyBindingsArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.policyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policyId'");
            }
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["policyId"] = args ? args.policyId : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["enabled"] = undefined /*out*/;
            resourceInputs["processing"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BackupPolicyBindings.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BackupPolicyBindings resources.
 */
export interface BackupPolicyBindingsState {
    /**
     * (Computed) - Creation timestamp of the Yandex Cloud Policy Bindings.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * (Computed) - Boolean flag that specifies whether the policy application is enabled. May be `false`
     * if `processing` flag is `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * — Compute Cloud instance ID.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * — Backup Policy ID.
     */
    policyId?: pulumi.Input<string>;
    /**
     * (Computed) - Boolean flag that specifies whether the policy is in the process of binding to an instance.
     */
    processing?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a BackupPolicyBindings resource.
 */
export interface BackupPolicyBindingsArgs {
    /**
     * — Compute Cloud instance ID.
     */
    instanceId: pulumi.Input<string>;
    /**
     * — Backup Policy ID.
     */
    policyId: pulumi.Input<string>;
}
