// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getComputePlacementGroup(args?: GetComputePlacementGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetComputePlacementGroupResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getComputePlacementGroup:getComputePlacementGroup", {
        "description": args.description,
        "folderId": args.folderId,
        "groupId": args.groupId,
        "labels": args.labels,
        "name": args.name,
        "placementStrategy": args.placementStrategy,
    }, opts);
}

/**
 * A collection of arguments for invoking getComputePlacementGroup.
 */
export interface GetComputePlacementGroupArgs {
    description?: string;
    folderId?: string;
    groupId?: string;
    labels?: {[key: string]: string};
    name?: string;
    placementStrategy?: {[key: string]: any};
}

/**
 * A collection of values returned by getComputePlacementGroup.
 */
export interface GetComputePlacementGroupResult {
    readonly createdAt: string;
    readonly description?: string;
    readonly folderId: string;
    readonly groupId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly labels?: {[key: string]: string};
    readonly name?: string;
    readonly placementStrategy?: {[key: string]: any};
}
export function getComputePlacementGroupOutput(args?: GetComputePlacementGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetComputePlacementGroupResult> {
    return pulumi.output(args).apply((a: any) => getComputePlacementGroup(a, opts))
}

/**
 * A collection of arguments for invoking getComputePlacementGroup.
 */
export interface GetComputePlacementGroupOutputArgs {
    description?: pulumi.Input<string>;
    folderId?: pulumi.Input<string>;
    groupId?: pulumi.Input<string>;
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    name?: pulumi.Input<string>;
    placementStrategy?: pulumi.Input<{[key: string]: any}>;
}
