// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getCmCertificateContent(args?: GetCmCertificateContentArgs, opts?: pulumi.InvokeOptions): Promise<GetCmCertificateContentResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getCmCertificateContent:getCmCertificateContent", {
        "certificateId": args.certificateId,
        "folderId": args.folderId,
        "name": args.name,
        "privateKeyFormat": args.privateKeyFormat,
        "waitValidation": args.waitValidation,
    }, opts);
}

/**
 * A collection of arguments for invoking getCmCertificateContent.
 */
export interface GetCmCertificateContentArgs {
    certificateId?: string;
    folderId?: string;
    name?: string;
    privateKeyFormat?: string;
    waitValidation?: boolean;
}

/**
 * A collection of values returned by getCmCertificateContent.
 */
export interface GetCmCertificateContentResult {
    readonly certificateId?: string;
    readonly certificates: string[];
    readonly folderId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name?: string;
    readonly privateKey: string;
    readonly privateKeyFormat?: string;
    readonly waitValidation?: boolean;
}
export function getCmCertificateContentOutput(args?: GetCmCertificateContentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCmCertificateContentResult> {
    return pulumi.output(args).apply((a: any) => getCmCertificateContent(a, opts))
}

/**
 * A collection of arguments for invoking getCmCertificateContent.
 */
export interface GetCmCertificateContentOutputArgs {
    certificateId?: pulumi.Input<string>;
    folderId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    privateKeyFormat?: pulumi.Input<string>;
    waitValidation?: pulumi.Input<boolean>;
}
