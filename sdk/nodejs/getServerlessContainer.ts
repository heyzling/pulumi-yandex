// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getServerlessContainer(args?: GetServerlessContainerArgs, opts?: pulumi.InvokeOptions): Promise<GetServerlessContainerResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getServerlessContainer:getServerlessContainer", {
        "connectivity": args.connectivity,
        "containerId": args.containerId,
        "folderId": args.folderId,
        "name": args.name,
        "secrets": args.secrets,
        "storageMounts": args.storageMounts,
    }, opts);
}

/**
 * A collection of arguments for invoking getServerlessContainer.
 */
export interface GetServerlessContainerArgs {
    connectivity?: inputs.GetServerlessContainerConnectivity;
    containerId?: string;
    folderId?: string;
    name?: string;
    secrets?: inputs.GetServerlessContainerSecret[];
    storageMounts?: inputs.GetServerlessContainerStorageMount[];
}

/**
 * A collection of values returned by getServerlessContainer.
 */
export interface GetServerlessContainerResult {
    readonly concurrency: number;
    readonly connectivity?: outputs.GetServerlessContainerConnectivity;
    readonly containerId?: string;
    readonly coreFraction: number;
    readonly cores: number;
    readonly createdAt: string;
    readonly description: string;
    readonly executionTimeout: string;
    readonly folderId?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly images: outputs.GetServerlessContainerImage[];
    readonly labels: {[key: string]: string};
    readonly logOptions: outputs.GetServerlessContainerLogOption[];
    readonly memory: number;
    readonly name?: string;
    readonly revisionId: string;
    readonly secrets: outputs.GetServerlessContainerSecret[];
    readonly serviceAccountId: string;
    readonly storageMounts: outputs.GetServerlessContainerStorageMount[];
    readonly url: string;
}
export function getServerlessContainerOutput(args?: GetServerlessContainerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServerlessContainerResult> {
    return pulumi.output(args).apply((a: any) => getServerlessContainer(a, opts))
}

/**
 * A collection of arguments for invoking getServerlessContainer.
 */
export interface GetServerlessContainerOutputArgs {
    connectivity?: pulumi.Input<inputs.GetServerlessContainerConnectivityArgs>;
    containerId?: pulumi.Input<string>;
    folderId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    secrets?: pulumi.Input<pulumi.Input<inputs.GetServerlessContainerSecretArgs>[]>;
    storageMounts?: pulumi.Input<pulumi.Input<inputs.GetServerlessContainerStorageMountArgs>[]>;
}
