// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getMdbKafkaUser(args: GetMdbKafkaUserArgs, opts?: pulumi.InvokeOptions): Promise<GetMdbKafkaUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("yandex:index/getMdbKafkaUser:getMdbKafkaUser", {
        "clusterId": args.clusterId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getMdbKafkaUser.
 */
export interface GetMdbKafkaUserArgs {
    clusterId: string;
    name: string;
}

/**
 * A collection of values returned by getMdbKafkaUser.
 */
export interface GetMdbKafkaUserResult {
    readonly clusterId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly password: string;
    readonly permissions: outputs.GetMdbKafkaUserPermission[];
}
export function getMdbKafkaUserOutput(args: GetMdbKafkaUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMdbKafkaUserResult> {
    return pulumi.output(args).apply((a: any) => getMdbKafkaUser(a, opts))
}

/**
 * A collection of arguments for invoking getMdbKafkaUser.
 */
export interface GetMdbKafkaUserOutputArgs {
    clusterId: pulumi.Input<string>;
    name: pulumi.Input<string>;
}
