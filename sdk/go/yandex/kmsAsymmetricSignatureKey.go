// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a Yandex KMS asymmetric signature key that can be used for cryptographic operation.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := yandex.NewKmsAsymmetricSignatureKey(ctx, "key-a", &yandex.KmsAsymmetricSignatureKeyArgs{
//				Description:        pulumi.String("description for key"),
//				SignatureAlgorithm: pulumi.String("RSA_2048_SIGN_PSS_SHA_256"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// A KMS asymmetric signature key can be imported using the `id` of the resource, e.g.
//
// ```sh
// $ pulumi import yandex:index/kmsAsymmetricSignatureKey:KmsAsymmetricSignatureKey top-secret kms_asymmetric_signature_key_id
// ```
type KmsAsymmetricSignatureKey struct {
	pulumi.CustomResourceState

	// Creation timestamp of the key.
	CreatedAt          pulumi.StringOutput  `pulumi:"createdAt"`
	DeletionProtection pulumi.BoolPtrOutput `pulumi:"deletionProtection"`
	// An optional description of the key.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The ID of the folder that the resource belongs to. If it
	// is not provided, the default provider folder is used.
	FolderId pulumi.StringOutput `pulumi:"folderId"`
	// A set of key/value label pairs to assign to the key.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Name of the key.
	Name pulumi.StringOutput `pulumi:"name"`
	// Signature algorithm to be used with a new key. The default value is `RSA_2048_SIGN_PSS_SHA_256`.
	SignatureAlgorithm pulumi.StringPtrOutput `pulumi:"signatureAlgorithm"`
	// The status of the key.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewKmsAsymmetricSignatureKey registers a new resource with the given unique name, arguments, and options.
func NewKmsAsymmetricSignatureKey(ctx *pulumi.Context,
	name string, args *KmsAsymmetricSignatureKeyArgs, opts ...pulumi.ResourceOption) (*KmsAsymmetricSignatureKey, error) {
	if args == nil {
		args = &KmsAsymmetricSignatureKeyArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource KmsAsymmetricSignatureKey
	err := ctx.RegisterResource("yandex:index/kmsAsymmetricSignatureKey:KmsAsymmetricSignatureKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKmsAsymmetricSignatureKey gets an existing KmsAsymmetricSignatureKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKmsAsymmetricSignatureKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KmsAsymmetricSignatureKeyState, opts ...pulumi.ResourceOption) (*KmsAsymmetricSignatureKey, error) {
	var resource KmsAsymmetricSignatureKey
	err := ctx.ReadResource("yandex:index/kmsAsymmetricSignatureKey:KmsAsymmetricSignatureKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KmsAsymmetricSignatureKey resources.
type kmsAsymmetricSignatureKeyState struct {
	// Creation timestamp of the key.
	CreatedAt          *string `pulumi:"createdAt"`
	DeletionProtection *bool   `pulumi:"deletionProtection"`
	// An optional description of the key.
	Description *string `pulumi:"description"`
	// The ID of the folder that the resource belongs to. If it
	// is not provided, the default provider folder is used.
	FolderId *string `pulumi:"folderId"`
	// A set of key/value label pairs to assign to the key.
	Labels map[string]string `pulumi:"labels"`
	// Name of the key.
	Name *string `pulumi:"name"`
	// Signature algorithm to be used with a new key. The default value is `RSA_2048_SIGN_PSS_SHA_256`.
	SignatureAlgorithm *string `pulumi:"signatureAlgorithm"`
	// The status of the key.
	Status *string `pulumi:"status"`
}

type KmsAsymmetricSignatureKeyState struct {
	// Creation timestamp of the key.
	CreatedAt          pulumi.StringPtrInput
	DeletionProtection pulumi.BoolPtrInput
	// An optional description of the key.
	Description pulumi.StringPtrInput
	// The ID of the folder that the resource belongs to. If it
	// is not provided, the default provider folder is used.
	FolderId pulumi.StringPtrInput
	// A set of key/value label pairs to assign to the key.
	Labels pulumi.StringMapInput
	// Name of the key.
	Name pulumi.StringPtrInput
	// Signature algorithm to be used with a new key. The default value is `RSA_2048_SIGN_PSS_SHA_256`.
	SignatureAlgorithm pulumi.StringPtrInput
	// The status of the key.
	Status pulumi.StringPtrInput
}

func (KmsAsymmetricSignatureKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*kmsAsymmetricSignatureKeyState)(nil)).Elem()
}

type kmsAsymmetricSignatureKeyArgs struct {
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// An optional description of the key.
	Description *string `pulumi:"description"`
	// The ID of the folder that the resource belongs to. If it
	// is not provided, the default provider folder is used.
	FolderId *string `pulumi:"folderId"`
	// A set of key/value label pairs to assign to the key.
	Labels map[string]string `pulumi:"labels"`
	// Name of the key.
	Name *string `pulumi:"name"`
	// Signature algorithm to be used with a new key. The default value is `RSA_2048_SIGN_PSS_SHA_256`.
	SignatureAlgorithm *string `pulumi:"signatureAlgorithm"`
}

// The set of arguments for constructing a KmsAsymmetricSignatureKey resource.
type KmsAsymmetricSignatureKeyArgs struct {
	DeletionProtection pulumi.BoolPtrInput
	// An optional description of the key.
	Description pulumi.StringPtrInput
	// The ID of the folder that the resource belongs to. If it
	// is not provided, the default provider folder is used.
	FolderId pulumi.StringPtrInput
	// A set of key/value label pairs to assign to the key.
	Labels pulumi.StringMapInput
	// Name of the key.
	Name pulumi.StringPtrInput
	// Signature algorithm to be used with a new key. The default value is `RSA_2048_SIGN_PSS_SHA_256`.
	SignatureAlgorithm pulumi.StringPtrInput
}

func (KmsAsymmetricSignatureKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kmsAsymmetricSignatureKeyArgs)(nil)).Elem()
}

type KmsAsymmetricSignatureKeyInput interface {
	pulumi.Input

	ToKmsAsymmetricSignatureKeyOutput() KmsAsymmetricSignatureKeyOutput
	ToKmsAsymmetricSignatureKeyOutputWithContext(ctx context.Context) KmsAsymmetricSignatureKeyOutput
}

func (*KmsAsymmetricSignatureKey) ElementType() reflect.Type {
	return reflect.TypeOf((**KmsAsymmetricSignatureKey)(nil)).Elem()
}

func (i *KmsAsymmetricSignatureKey) ToKmsAsymmetricSignatureKeyOutput() KmsAsymmetricSignatureKeyOutput {
	return i.ToKmsAsymmetricSignatureKeyOutputWithContext(context.Background())
}

func (i *KmsAsymmetricSignatureKey) ToKmsAsymmetricSignatureKeyOutputWithContext(ctx context.Context) KmsAsymmetricSignatureKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsAsymmetricSignatureKeyOutput)
}

// KmsAsymmetricSignatureKeyArrayInput is an input type that accepts KmsAsymmetricSignatureKeyArray and KmsAsymmetricSignatureKeyArrayOutput values.
// You can construct a concrete instance of `KmsAsymmetricSignatureKeyArrayInput` via:
//
//	KmsAsymmetricSignatureKeyArray{ KmsAsymmetricSignatureKeyArgs{...} }
type KmsAsymmetricSignatureKeyArrayInput interface {
	pulumi.Input

	ToKmsAsymmetricSignatureKeyArrayOutput() KmsAsymmetricSignatureKeyArrayOutput
	ToKmsAsymmetricSignatureKeyArrayOutputWithContext(context.Context) KmsAsymmetricSignatureKeyArrayOutput
}

type KmsAsymmetricSignatureKeyArray []KmsAsymmetricSignatureKeyInput

func (KmsAsymmetricSignatureKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KmsAsymmetricSignatureKey)(nil)).Elem()
}

func (i KmsAsymmetricSignatureKeyArray) ToKmsAsymmetricSignatureKeyArrayOutput() KmsAsymmetricSignatureKeyArrayOutput {
	return i.ToKmsAsymmetricSignatureKeyArrayOutputWithContext(context.Background())
}

func (i KmsAsymmetricSignatureKeyArray) ToKmsAsymmetricSignatureKeyArrayOutputWithContext(ctx context.Context) KmsAsymmetricSignatureKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsAsymmetricSignatureKeyArrayOutput)
}

// KmsAsymmetricSignatureKeyMapInput is an input type that accepts KmsAsymmetricSignatureKeyMap and KmsAsymmetricSignatureKeyMapOutput values.
// You can construct a concrete instance of `KmsAsymmetricSignatureKeyMapInput` via:
//
//	KmsAsymmetricSignatureKeyMap{ "key": KmsAsymmetricSignatureKeyArgs{...} }
type KmsAsymmetricSignatureKeyMapInput interface {
	pulumi.Input

	ToKmsAsymmetricSignatureKeyMapOutput() KmsAsymmetricSignatureKeyMapOutput
	ToKmsAsymmetricSignatureKeyMapOutputWithContext(context.Context) KmsAsymmetricSignatureKeyMapOutput
}

type KmsAsymmetricSignatureKeyMap map[string]KmsAsymmetricSignatureKeyInput

func (KmsAsymmetricSignatureKeyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KmsAsymmetricSignatureKey)(nil)).Elem()
}

func (i KmsAsymmetricSignatureKeyMap) ToKmsAsymmetricSignatureKeyMapOutput() KmsAsymmetricSignatureKeyMapOutput {
	return i.ToKmsAsymmetricSignatureKeyMapOutputWithContext(context.Background())
}

func (i KmsAsymmetricSignatureKeyMap) ToKmsAsymmetricSignatureKeyMapOutputWithContext(ctx context.Context) KmsAsymmetricSignatureKeyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsAsymmetricSignatureKeyMapOutput)
}

type KmsAsymmetricSignatureKeyOutput struct{ *pulumi.OutputState }

func (KmsAsymmetricSignatureKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KmsAsymmetricSignatureKey)(nil)).Elem()
}

func (o KmsAsymmetricSignatureKeyOutput) ToKmsAsymmetricSignatureKeyOutput() KmsAsymmetricSignatureKeyOutput {
	return o
}

func (o KmsAsymmetricSignatureKeyOutput) ToKmsAsymmetricSignatureKeyOutputWithContext(ctx context.Context) KmsAsymmetricSignatureKeyOutput {
	return o
}

// Creation timestamp of the key.
func (o KmsAsymmetricSignatureKeyOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsAsymmetricSignatureKey) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o KmsAsymmetricSignatureKeyOutput) DeletionProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KmsAsymmetricSignatureKey) pulumi.BoolPtrOutput { return v.DeletionProtection }).(pulumi.BoolPtrOutput)
}

// An optional description of the key.
func (o KmsAsymmetricSignatureKeyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KmsAsymmetricSignatureKey) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The ID of the folder that the resource belongs to. If it
// is not provided, the default provider folder is used.
func (o KmsAsymmetricSignatureKeyOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsAsymmetricSignatureKey) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

// A set of key/value label pairs to assign to the key.
func (o KmsAsymmetricSignatureKeyOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KmsAsymmetricSignatureKey) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the key.
func (o KmsAsymmetricSignatureKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsAsymmetricSignatureKey) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Signature algorithm to be used with a new key. The default value is `RSA_2048_SIGN_PSS_SHA_256`.
func (o KmsAsymmetricSignatureKeyOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KmsAsymmetricSignatureKey) pulumi.StringPtrOutput { return v.SignatureAlgorithm }).(pulumi.StringPtrOutput)
}

// The status of the key.
func (o KmsAsymmetricSignatureKeyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsAsymmetricSignatureKey) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type KmsAsymmetricSignatureKeyArrayOutput struct{ *pulumi.OutputState }

func (KmsAsymmetricSignatureKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KmsAsymmetricSignatureKey)(nil)).Elem()
}

func (o KmsAsymmetricSignatureKeyArrayOutput) ToKmsAsymmetricSignatureKeyArrayOutput() KmsAsymmetricSignatureKeyArrayOutput {
	return o
}

func (o KmsAsymmetricSignatureKeyArrayOutput) ToKmsAsymmetricSignatureKeyArrayOutputWithContext(ctx context.Context) KmsAsymmetricSignatureKeyArrayOutput {
	return o
}

func (o KmsAsymmetricSignatureKeyArrayOutput) Index(i pulumi.IntInput) KmsAsymmetricSignatureKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KmsAsymmetricSignatureKey {
		return vs[0].([]*KmsAsymmetricSignatureKey)[vs[1].(int)]
	}).(KmsAsymmetricSignatureKeyOutput)
}

type KmsAsymmetricSignatureKeyMapOutput struct{ *pulumi.OutputState }

func (KmsAsymmetricSignatureKeyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KmsAsymmetricSignatureKey)(nil)).Elem()
}

func (o KmsAsymmetricSignatureKeyMapOutput) ToKmsAsymmetricSignatureKeyMapOutput() KmsAsymmetricSignatureKeyMapOutput {
	return o
}

func (o KmsAsymmetricSignatureKeyMapOutput) ToKmsAsymmetricSignatureKeyMapOutputWithContext(ctx context.Context) KmsAsymmetricSignatureKeyMapOutput {
	return o
}

func (o KmsAsymmetricSignatureKeyMapOutput) MapIndex(k pulumi.StringInput) KmsAsymmetricSignatureKeyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KmsAsymmetricSignatureKey {
		return vs[0].(map[string]*KmsAsymmetricSignatureKey)[vs[1].(string)]
	}).(KmsAsymmetricSignatureKeyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KmsAsymmetricSignatureKeyInput)(nil)).Elem(), &KmsAsymmetricSignatureKey{})
	pulumi.RegisterInputType(reflect.TypeOf((*KmsAsymmetricSignatureKeyArrayInput)(nil)).Elem(), KmsAsymmetricSignatureKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KmsAsymmetricSignatureKeyMapInput)(nil)).Elem(), KmsAsymmetricSignatureKeyMap{})
	pulumi.RegisterOutputType(KmsAsymmetricSignatureKeyOutput{})
	pulumi.RegisterOutputType(KmsAsymmetricSignatureKeyArrayOutput{})
	pulumi.RegisterOutputType(KmsAsymmetricSignatureKeyMapOutput{})
}
