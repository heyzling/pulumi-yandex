// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupOrganizationmanagerUserSshKey(ctx *pulumi.Context, args *LookupOrganizationmanagerUserSshKeyArgs, opts ...pulumi.InvokeOption) (*LookupOrganizationmanagerUserSshKeyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupOrganizationmanagerUserSshKeyResult
	err := ctx.Invoke("yandex:index/getOrganizationmanagerUserSshKey:getOrganizationmanagerUserSshKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOrganizationmanagerUserSshKey.
type LookupOrganizationmanagerUserSshKeyArgs struct {
	Data           *string `pulumi:"data"`
	ExpiresAt      *string `pulumi:"expiresAt"`
	Name           *string `pulumi:"name"`
	OrganizationId *string `pulumi:"organizationId"`
	SubjectId      *string `pulumi:"subjectId"`
	UserSshKeyId   string  `pulumi:"userSshKeyId"`
}

// A collection of values returned by getOrganizationmanagerUserSshKey.
type LookupOrganizationmanagerUserSshKeyResult struct {
	CreatedAt   string  `pulumi:"createdAt"`
	Data        *string `pulumi:"data"`
	ExpiresAt   *string `pulumi:"expiresAt"`
	Fingerprint string  `pulumi:"fingerprint"`
	// The provider-assigned unique ID for this managed resource.
	Id             string  `pulumi:"id"`
	Name           *string `pulumi:"name"`
	OrganizationId *string `pulumi:"organizationId"`
	SubjectId      *string `pulumi:"subjectId"`
	UserSshKeyId   string  `pulumi:"userSshKeyId"`
}

func LookupOrganizationmanagerUserSshKeyOutput(ctx *pulumi.Context, args LookupOrganizationmanagerUserSshKeyOutputArgs, opts ...pulumi.InvokeOption) LookupOrganizationmanagerUserSshKeyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupOrganizationmanagerUserSshKeyResult, error) {
			args := v.(LookupOrganizationmanagerUserSshKeyArgs)
			r, err := LookupOrganizationmanagerUserSshKey(ctx, &args, opts...)
			var s LookupOrganizationmanagerUserSshKeyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupOrganizationmanagerUserSshKeyResultOutput)
}

// A collection of arguments for invoking getOrganizationmanagerUserSshKey.
type LookupOrganizationmanagerUserSshKeyOutputArgs struct {
	Data           pulumi.StringPtrInput `pulumi:"data"`
	ExpiresAt      pulumi.StringPtrInput `pulumi:"expiresAt"`
	Name           pulumi.StringPtrInput `pulumi:"name"`
	OrganizationId pulumi.StringPtrInput `pulumi:"organizationId"`
	SubjectId      pulumi.StringPtrInput `pulumi:"subjectId"`
	UserSshKeyId   pulumi.StringInput    `pulumi:"userSshKeyId"`
}

func (LookupOrganizationmanagerUserSshKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrganizationmanagerUserSshKeyArgs)(nil)).Elem()
}

// A collection of values returned by getOrganizationmanagerUserSshKey.
type LookupOrganizationmanagerUserSshKeyResultOutput struct{ *pulumi.OutputState }

func (LookupOrganizationmanagerUserSshKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrganizationmanagerUserSshKeyResult)(nil)).Elem()
}

func (o LookupOrganizationmanagerUserSshKeyResultOutput) ToLookupOrganizationmanagerUserSshKeyResultOutput() LookupOrganizationmanagerUserSshKeyResultOutput {
	return o
}

func (o LookupOrganizationmanagerUserSshKeyResultOutput) ToLookupOrganizationmanagerUserSshKeyResultOutputWithContext(ctx context.Context) LookupOrganizationmanagerUserSshKeyResultOutput {
	return o
}

func (o LookupOrganizationmanagerUserSshKeyResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationmanagerUserSshKeyResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o LookupOrganizationmanagerUserSshKeyResultOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOrganizationmanagerUserSshKeyResult) *string { return v.Data }).(pulumi.StringPtrOutput)
}

func (o LookupOrganizationmanagerUserSshKeyResultOutput) ExpiresAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOrganizationmanagerUserSshKeyResult) *string { return v.ExpiresAt }).(pulumi.StringPtrOutput)
}

func (o LookupOrganizationmanagerUserSshKeyResultOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationmanagerUserSshKeyResult) string { return v.Fingerprint }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupOrganizationmanagerUserSshKeyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationmanagerUserSshKeyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupOrganizationmanagerUserSshKeyResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOrganizationmanagerUserSshKeyResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupOrganizationmanagerUserSshKeyResultOutput) OrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOrganizationmanagerUserSshKeyResult) *string { return v.OrganizationId }).(pulumi.StringPtrOutput)
}

func (o LookupOrganizationmanagerUserSshKeyResultOutput) SubjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOrganizationmanagerUserSshKeyResult) *string { return v.SubjectId }).(pulumi.StringPtrOutput)
}

func (o LookupOrganizationmanagerUserSshKeyResultOutput) UserSshKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrganizationmanagerUserSshKeyResult) string { return v.UserSshKeyId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOrganizationmanagerUserSshKeyResultOutput{})
}
