// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := yandex.NewKmsAsymmetricEncryptionKey(ctx, "key-a", &yandex.KmsAsymmetricEncryptionKeyArgs{
//				Description:         pulumi.String("description for key"),
//				EncryptionAlgorithm: pulumi.String("RSA_2048_ENC_OAEP_SHA_256"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// A KMS asymmetric encryption key can be imported using the `id` of the resource, e.g.
//
// ```sh
// $ pulumi import yandex:index/kmsAsymmetricEncryptionKey:KmsAsymmetricEncryptionKey top-secret kms_asymmetric_encryption_key_id
// ```
type KmsAsymmetricEncryptionKey struct {
	pulumi.CustomResourceState

	// Creation timestamp of the key.
	CreatedAt          pulumi.StringOutput  `pulumi:"createdAt"`
	DeletionProtection pulumi.BoolPtrOutput `pulumi:"deletionProtection"`
	// An optional description of the key.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Encryption algorithm to be used with a new key. The default value is `RSA_2048_ENC_OAEP_SHA_256`.
	EncryptionAlgorithm pulumi.StringPtrOutput `pulumi:"encryptionAlgorithm"`
	// The ID of the folder that the resource belongs to. If it
	// is not provided, the default provider folder is used.
	FolderId pulumi.StringOutput `pulumi:"folderId"`
	// A set of key/value label pairs to assign to the key.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Name of the key.
	Name pulumi.StringOutput `pulumi:"name"`
	// The status of the key.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewKmsAsymmetricEncryptionKey registers a new resource with the given unique name, arguments, and options.
func NewKmsAsymmetricEncryptionKey(ctx *pulumi.Context,
	name string, args *KmsAsymmetricEncryptionKeyArgs, opts ...pulumi.ResourceOption) (*KmsAsymmetricEncryptionKey, error) {
	if args == nil {
		args = &KmsAsymmetricEncryptionKeyArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource KmsAsymmetricEncryptionKey
	err := ctx.RegisterResource("yandex:index/kmsAsymmetricEncryptionKey:KmsAsymmetricEncryptionKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKmsAsymmetricEncryptionKey gets an existing KmsAsymmetricEncryptionKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKmsAsymmetricEncryptionKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KmsAsymmetricEncryptionKeyState, opts ...pulumi.ResourceOption) (*KmsAsymmetricEncryptionKey, error) {
	var resource KmsAsymmetricEncryptionKey
	err := ctx.ReadResource("yandex:index/kmsAsymmetricEncryptionKey:KmsAsymmetricEncryptionKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KmsAsymmetricEncryptionKey resources.
type kmsAsymmetricEncryptionKeyState struct {
	// Creation timestamp of the key.
	CreatedAt          *string `pulumi:"createdAt"`
	DeletionProtection *bool   `pulumi:"deletionProtection"`
	// An optional description of the key.
	Description *string `pulumi:"description"`
	// Encryption algorithm to be used with a new key. The default value is `RSA_2048_ENC_OAEP_SHA_256`.
	EncryptionAlgorithm *string `pulumi:"encryptionAlgorithm"`
	// The ID of the folder that the resource belongs to. If it
	// is not provided, the default provider folder is used.
	FolderId *string `pulumi:"folderId"`
	// A set of key/value label pairs to assign to the key.
	Labels map[string]string `pulumi:"labels"`
	// Name of the key.
	Name *string `pulumi:"name"`
	// The status of the key.
	Status *string `pulumi:"status"`
}

type KmsAsymmetricEncryptionKeyState struct {
	// Creation timestamp of the key.
	CreatedAt          pulumi.StringPtrInput
	DeletionProtection pulumi.BoolPtrInput
	// An optional description of the key.
	Description pulumi.StringPtrInput
	// Encryption algorithm to be used with a new key. The default value is `RSA_2048_ENC_OAEP_SHA_256`.
	EncryptionAlgorithm pulumi.StringPtrInput
	// The ID of the folder that the resource belongs to. If it
	// is not provided, the default provider folder is used.
	FolderId pulumi.StringPtrInput
	// A set of key/value label pairs to assign to the key.
	Labels pulumi.StringMapInput
	// Name of the key.
	Name pulumi.StringPtrInput
	// The status of the key.
	Status pulumi.StringPtrInput
}

func (KmsAsymmetricEncryptionKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*kmsAsymmetricEncryptionKeyState)(nil)).Elem()
}

type kmsAsymmetricEncryptionKeyArgs struct {
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// An optional description of the key.
	Description *string `pulumi:"description"`
	// Encryption algorithm to be used with a new key. The default value is `RSA_2048_ENC_OAEP_SHA_256`.
	EncryptionAlgorithm *string `pulumi:"encryptionAlgorithm"`
	// The ID of the folder that the resource belongs to. If it
	// is not provided, the default provider folder is used.
	FolderId *string `pulumi:"folderId"`
	// A set of key/value label pairs to assign to the key.
	Labels map[string]string `pulumi:"labels"`
	// Name of the key.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a KmsAsymmetricEncryptionKey resource.
type KmsAsymmetricEncryptionKeyArgs struct {
	DeletionProtection pulumi.BoolPtrInput
	// An optional description of the key.
	Description pulumi.StringPtrInput
	// Encryption algorithm to be used with a new key. The default value is `RSA_2048_ENC_OAEP_SHA_256`.
	EncryptionAlgorithm pulumi.StringPtrInput
	// The ID of the folder that the resource belongs to. If it
	// is not provided, the default provider folder is used.
	FolderId pulumi.StringPtrInput
	// A set of key/value label pairs to assign to the key.
	Labels pulumi.StringMapInput
	// Name of the key.
	Name pulumi.StringPtrInput
}

func (KmsAsymmetricEncryptionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kmsAsymmetricEncryptionKeyArgs)(nil)).Elem()
}

type KmsAsymmetricEncryptionKeyInput interface {
	pulumi.Input

	ToKmsAsymmetricEncryptionKeyOutput() KmsAsymmetricEncryptionKeyOutput
	ToKmsAsymmetricEncryptionKeyOutputWithContext(ctx context.Context) KmsAsymmetricEncryptionKeyOutput
}

func (*KmsAsymmetricEncryptionKey) ElementType() reflect.Type {
	return reflect.TypeOf((**KmsAsymmetricEncryptionKey)(nil)).Elem()
}

func (i *KmsAsymmetricEncryptionKey) ToKmsAsymmetricEncryptionKeyOutput() KmsAsymmetricEncryptionKeyOutput {
	return i.ToKmsAsymmetricEncryptionKeyOutputWithContext(context.Background())
}

func (i *KmsAsymmetricEncryptionKey) ToKmsAsymmetricEncryptionKeyOutputWithContext(ctx context.Context) KmsAsymmetricEncryptionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsAsymmetricEncryptionKeyOutput)
}

// KmsAsymmetricEncryptionKeyArrayInput is an input type that accepts KmsAsymmetricEncryptionKeyArray and KmsAsymmetricEncryptionKeyArrayOutput values.
// You can construct a concrete instance of `KmsAsymmetricEncryptionKeyArrayInput` via:
//
//	KmsAsymmetricEncryptionKeyArray{ KmsAsymmetricEncryptionKeyArgs{...} }
type KmsAsymmetricEncryptionKeyArrayInput interface {
	pulumi.Input

	ToKmsAsymmetricEncryptionKeyArrayOutput() KmsAsymmetricEncryptionKeyArrayOutput
	ToKmsAsymmetricEncryptionKeyArrayOutputWithContext(context.Context) KmsAsymmetricEncryptionKeyArrayOutput
}

type KmsAsymmetricEncryptionKeyArray []KmsAsymmetricEncryptionKeyInput

func (KmsAsymmetricEncryptionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KmsAsymmetricEncryptionKey)(nil)).Elem()
}

func (i KmsAsymmetricEncryptionKeyArray) ToKmsAsymmetricEncryptionKeyArrayOutput() KmsAsymmetricEncryptionKeyArrayOutput {
	return i.ToKmsAsymmetricEncryptionKeyArrayOutputWithContext(context.Background())
}

func (i KmsAsymmetricEncryptionKeyArray) ToKmsAsymmetricEncryptionKeyArrayOutputWithContext(ctx context.Context) KmsAsymmetricEncryptionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsAsymmetricEncryptionKeyArrayOutput)
}

// KmsAsymmetricEncryptionKeyMapInput is an input type that accepts KmsAsymmetricEncryptionKeyMap and KmsAsymmetricEncryptionKeyMapOutput values.
// You can construct a concrete instance of `KmsAsymmetricEncryptionKeyMapInput` via:
//
//	KmsAsymmetricEncryptionKeyMap{ "key": KmsAsymmetricEncryptionKeyArgs{...} }
type KmsAsymmetricEncryptionKeyMapInput interface {
	pulumi.Input

	ToKmsAsymmetricEncryptionKeyMapOutput() KmsAsymmetricEncryptionKeyMapOutput
	ToKmsAsymmetricEncryptionKeyMapOutputWithContext(context.Context) KmsAsymmetricEncryptionKeyMapOutput
}

type KmsAsymmetricEncryptionKeyMap map[string]KmsAsymmetricEncryptionKeyInput

func (KmsAsymmetricEncryptionKeyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KmsAsymmetricEncryptionKey)(nil)).Elem()
}

func (i KmsAsymmetricEncryptionKeyMap) ToKmsAsymmetricEncryptionKeyMapOutput() KmsAsymmetricEncryptionKeyMapOutput {
	return i.ToKmsAsymmetricEncryptionKeyMapOutputWithContext(context.Background())
}

func (i KmsAsymmetricEncryptionKeyMap) ToKmsAsymmetricEncryptionKeyMapOutputWithContext(ctx context.Context) KmsAsymmetricEncryptionKeyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KmsAsymmetricEncryptionKeyMapOutput)
}

type KmsAsymmetricEncryptionKeyOutput struct{ *pulumi.OutputState }

func (KmsAsymmetricEncryptionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KmsAsymmetricEncryptionKey)(nil)).Elem()
}

func (o KmsAsymmetricEncryptionKeyOutput) ToKmsAsymmetricEncryptionKeyOutput() KmsAsymmetricEncryptionKeyOutput {
	return o
}

func (o KmsAsymmetricEncryptionKeyOutput) ToKmsAsymmetricEncryptionKeyOutputWithContext(ctx context.Context) KmsAsymmetricEncryptionKeyOutput {
	return o
}

// Creation timestamp of the key.
func (o KmsAsymmetricEncryptionKeyOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsAsymmetricEncryptionKey) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o KmsAsymmetricEncryptionKeyOutput) DeletionProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KmsAsymmetricEncryptionKey) pulumi.BoolPtrOutput { return v.DeletionProtection }).(pulumi.BoolPtrOutput)
}

// An optional description of the key.
func (o KmsAsymmetricEncryptionKeyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KmsAsymmetricEncryptionKey) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Encryption algorithm to be used with a new key. The default value is `RSA_2048_ENC_OAEP_SHA_256`.
func (o KmsAsymmetricEncryptionKeyOutput) EncryptionAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KmsAsymmetricEncryptionKey) pulumi.StringPtrOutput { return v.EncryptionAlgorithm }).(pulumi.StringPtrOutput)
}

// The ID of the folder that the resource belongs to. If it
// is not provided, the default provider folder is used.
func (o KmsAsymmetricEncryptionKeyOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsAsymmetricEncryptionKey) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

// A set of key/value label pairs to assign to the key.
func (o KmsAsymmetricEncryptionKeyOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KmsAsymmetricEncryptionKey) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Name of the key.
func (o KmsAsymmetricEncryptionKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsAsymmetricEncryptionKey) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The status of the key.
func (o KmsAsymmetricEncryptionKeyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *KmsAsymmetricEncryptionKey) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type KmsAsymmetricEncryptionKeyArrayOutput struct{ *pulumi.OutputState }

func (KmsAsymmetricEncryptionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KmsAsymmetricEncryptionKey)(nil)).Elem()
}

func (o KmsAsymmetricEncryptionKeyArrayOutput) ToKmsAsymmetricEncryptionKeyArrayOutput() KmsAsymmetricEncryptionKeyArrayOutput {
	return o
}

func (o KmsAsymmetricEncryptionKeyArrayOutput) ToKmsAsymmetricEncryptionKeyArrayOutputWithContext(ctx context.Context) KmsAsymmetricEncryptionKeyArrayOutput {
	return o
}

func (o KmsAsymmetricEncryptionKeyArrayOutput) Index(i pulumi.IntInput) KmsAsymmetricEncryptionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KmsAsymmetricEncryptionKey {
		return vs[0].([]*KmsAsymmetricEncryptionKey)[vs[1].(int)]
	}).(KmsAsymmetricEncryptionKeyOutput)
}

type KmsAsymmetricEncryptionKeyMapOutput struct{ *pulumi.OutputState }

func (KmsAsymmetricEncryptionKeyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KmsAsymmetricEncryptionKey)(nil)).Elem()
}

func (o KmsAsymmetricEncryptionKeyMapOutput) ToKmsAsymmetricEncryptionKeyMapOutput() KmsAsymmetricEncryptionKeyMapOutput {
	return o
}

func (o KmsAsymmetricEncryptionKeyMapOutput) ToKmsAsymmetricEncryptionKeyMapOutputWithContext(ctx context.Context) KmsAsymmetricEncryptionKeyMapOutput {
	return o
}

func (o KmsAsymmetricEncryptionKeyMapOutput) MapIndex(k pulumi.StringInput) KmsAsymmetricEncryptionKeyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KmsAsymmetricEncryptionKey {
		return vs[0].(map[string]*KmsAsymmetricEncryptionKey)[vs[1].(string)]
	}).(KmsAsymmetricEncryptionKeyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KmsAsymmetricEncryptionKeyInput)(nil)).Elem(), &KmsAsymmetricEncryptionKey{})
	pulumi.RegisterInputType(reflect.TypeOf((*KmsAsymmetricEncryptionKeyArrayInput)(nil)).Elem(), KmsAsymmetricEncryptionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KmsAsymmetricEncryptionKeyMapInput)(nil)).Elem(), KmsAsymmetricEncryptionKeyMap{})
	pulumi.RegisterOutputType(KmsAsymmetricEncryptionKeyOutput{})
	pulumi.RegisterOutputType(KmsAsymmetricEncryptionKeyArrayOutput{})
	pulumi.RegisterOutputType(KmsAsymmetricEncryptionKeyMapOutput{})
}
