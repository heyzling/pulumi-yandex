// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"errors"
	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a PostgreSQL cluster within the Yandex.Cloud. For more information, see
// [the official documentation](https://cloud.yandex.com/docs/managed-postgresql/).
// [How to connect to the DB](https://cloud.yandex.com/en-ru/docs/managed-postgresql/quickstart#connect). To connect, use port 6432. The port number is not configurable.
//
// ## Example Usage
//
// Example of creating a Single Node PostgreSQL.
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooVpcNetwork, err := yandex.NewVpcNetwork(ctx, "fooVpcNetwork", nil)
//			if err != nil {
//				return err
//			}
//			fooVpcSubnet, err := yandex.NewVpcSubnet(ctx, "fooVpcSubnet", &yandex.VpcSubnetArgs{
//				Zone:      pulumi.String("ru-central1-a"),
//				NetworkId: fooVpcNetwork.ID(),
//				V4CidrBlocks: pulumi.StringArray{
//					pulumi.String("10.5.0.0/24"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = yandex.NewMdbPostgresqlCluster(ctx, "fooMdbPostgresqlCluster", &yandex.MdbPostgresqlClusterArgs{
//				Environment: pulumi.String("PRESTABLE"),
//				NetworkId:   fooVpcNetwork.ID(),
//				Config: &yandex.MdbPostgresqlClusterConfigArgs{
//					Version: pulumi.String("15"),
//					Resources: &yandex.MdbPostgresqlClusterConfigResourcesArgs{
//						ResourcePresetId: pulumi.String("s2.micro"),
//						DiskTypeId:       pulumi.String("network-ssd"),
//						DiskSize:         pulumi.Int(16),
//					},
//					PostgresqlConfig: pulumi.StringMap{
//						"max_connections":                pulumi.String("395"),
//						"enable_parallel_hash":           pulumi.String("true"),
//						"autovacuum_vacuum_scale_factor": pulumi.String("0.34"),
//						"default_transaction_isolation":  pulumi.String("TRANSACTION_ISOLATION_READ_COMMITTED"),
//						"shared_preload_libraries":       pulumi.String("SHARED_PRELOAD_LIBRARIES_AUTO_EXPLAIN,SHARED_PRELOAD_LIBRARIES_PG_HINT_PLAN"),
//					},
//				},
//				MaintenanceWindow: &yandex.MdbPostgresqlClusterMaintenanceWindowArgs{
//					Type: pulumi.String("WEEKLY"),
//					Day:  pulumi.String("SAT"),
//					Hour: pulumi.Int(12),
//				},
//				Hosts: yandex.MdbPostgresqlClusterHostArray{
//					&yandex.MdbPostgresqlClusterHostArgs{
//						Zone:     pulumi.String("ru-central1-a"),
//						SubnetId: fooVpcSubnet.ID(),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// Example of creating a High-Availability (HA) PostgreSQL Cluster.
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooVpcNetwork, err := yandex.NewVpcNetwork(ctx, "fooVpcNetwork", nil)
//			if err != nil {
//				return err
//			}
//			fooVpcSubnet, err := yandex.NewVpcSubnet(ctx, "fooVpcSubnet", &yandex.VpcSubnetArgs{
//				Zone:      pulumi.String("ru-central1-a"),
//				NetworkId: fooVpcNetwork.ID(),
//				V4CidrBlocks: pulumi.StringArray{
//					pulumi.String("10.1.0.0/24"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			bar, err := yandex.NewVpcSubnet(ctx, "bar", &yandex.VpcSubnetArgs{
//				Zone:      pulumi.String("ru-central1-b"),
//				NetworkId: fooVpcNetwork.ID(),
//				V4CidrBlocks: pulumi.StringArray{
//					pulumi.String("10.2.0.0/24"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = yandex.NewMdbPostgresqlCluster(ctx, "fooMdbPostgresqlCluster", &yandex.MdbPostgresqlClusterArgs{
//				Environment: pulumi.String("PRESTABLE"),
//				NetworkId:   fooVpcNetwork.ID(),
//				Config: &yandex.MdbPostgresqlClusterConfigArgs{
//					Version: pulumi.String("15"),
//					Resources: &yandex.MdbPostgresqlClusterConfigResourcesArgs{
//						ResourcePresetId: pulumi.String("s2.micro"),
//						DiskTypeId:       pulumi.String("network-ssd"),
//						DiskSize:         pulumi.Int(16),
//					},
//				},
//				MaintenanceWindow: &yandex.MdbPostgresqlClusterMaintenanceWindowArgs{
//					Type: pulumi.String("ANYTIME"),
//				},
//				Hosts: yandex.MdbPostgresqlClusterHostArray{
//					&yandex.MdbPostgresqlClusterHostArgs{
//						Zone:     pulumi.String("ru-central1-a"),
//						SubnetId: fooVpcSubnet.ID(),
//					},
//					&yandex.MdbPostgresqlClusterHostArgs{
//						Zone:     pulumi.String("ru-central1-b"),
//						SubnetId: bar.ID(),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// Example of creating a High-Availability (HA) PostgreSQL Cluster with priority and set master.
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooVpcNetwork, err := yandex.NewVpcNetwork(ctx, "fooVpcNetwork", nil)
//			if err != nil {
//				return err
//			}
//			vpcSubnet, err := yandex.NewVpcSubnet(ctx, "vpcSubnet", &yandex.VpcSubnetArgs{
//				Zone:      pulumi.String("ru-central1-a"),
//				NetworkId: fooVpcNetwork.ID(),
//				V4CidrBlocks: pulumi.StringArray{
//					pulumi.String("10.1.0.0/24"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = yandex.NewMdbPostgresqlCluster(ctx, "fooMdbPostgresqlCluster", &yandex.MdbPostgresqlClusterArgs{
//				Description:    pulumi.String("test High-Availability (HA) PostgreSQL Cluster with priority and set master"),
//				Environment:    pulumi.String("PRESTABLE"),
//				NetworkId:      fooVpcNetwork.ID(),
//				HostMasterName: pulumi.String("host_name_c_2"),
//				Config: &yandex.MdbPostgresqlClusterConfigArgs{
//					Version: pulumi.String("15"),
//					Resources: &yandex.MdbPostgresqlClusterConfigResourcesArgs{
//						ResourcePresetId: pulumi.String("s2.micro"),
//						DiskSize:         pulumi.Int(10),
//						DiskTypeId:       pulumi.String("network-ssd"),
//					},
//				},
//				Hosts: yandex.MdbPostgresqlClusterHostArray{
//					&yandex.MdbPostgresqlClusterHostArgs{
//						Zone:     pulumi.String("ru-central1-a"),
//						Name:     pulumi.String("host_name_a"),
//						Priority: pulumi.Int(2),
//						SubnetId: vpcSubnet.ID(),
//					},
//					&yandex.MdbPostgresqlClusterHostArgs{
//						Zone:                  pulumi.String("ru-central1-b"),
//						Name:                  pulumi.String("host_name_b"),
//						ReplicationSourceName: pulumi.String("host_name_c"),
//						SubnetId:              index / vpcSubnetVpcSubnet.Id,
//					},
//					&yandex.MdbPostgresqlClusterHostArgs{
//						Zone:     pulumi.String("ru-central1-c"),
//						Name:     pulumi.String("host_name_c"),
//						SubnetId: yandexIndex / vpcSubnetVpcSubnet.Id,
//					},
//					&yandex.MdbPostgresqlClusterHostArgs{
//						Zone:     pulumi.String("ru-central1-c"),
//						Name:     pulumi.String("host_name_c_2"),
//						SubnetId: yandexIndex / vpcSubnetVpcSubnet.Id,
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = yandex.NewVpcSubnet(ctx, "index/vpcSubnetVpcSubnet", &yandex.VpcSubnetArgs{
//				Zone:      pulumi.String("ru-central1-b"),
//				NetworkId: fooVpcNetwork.ID(),
//				V4CidrBlocks: pulumi.StringArray{
//					pulumi.String("10.2.0.0/24"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = yandex.NewVpcSubnet(ctx, "yandexIndex/vpcSubnetVpcSubnet", &yandex.VpcSubnetArgs{
//				Zone:      pulumi.String("ru-central1-c"),
//				NetworkId: fooVpcNetwork.ID(),
//				V4CidrBlocks: pulumi.StringArray{
//					pulumi.String("10.3.0.0/24"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// Example of creating a Single Node PostgreSQL from backup.
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooVpcNetwork, err := yandex.NewVpcNetwork(ctx, "fooVpcNetwork", nil)
//			if err != nil {
//				return err
//			}
//			fooVpcSubnet, err := yandex.NewVpcSubnet(ctx, "fooVpcSubnet", &yandex.VpcSubnetArgs{
//				Zone:      pulumi.String("ru-central1-a"),
//				NetworkId: fooVpcNetwork.ID(),
//				V4CidrBlocks: pulumi.StringArray{
//					pulumi.String("10.5.0.0/24"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = yandex.NewMdbPostgresqlCluster(ctx, "fooMdbPostgresqlCluster", &yandex.MdbPostgresqlClusterArgs{
//				Environment: pulumi.String("PRESTABLE"),
//				NetworkId:   fooVpcNetwork.ID(),
//				Restore: &yandex.MdbPostgresqlClusterRestoreArgs{
//					BackupId: pulumi.String("c9q99999999999999994cm:base_000000010000005F000000B4"),
//					Time:     pulumi.String("2021-02-11T15:04:05"),
//				},
//				Config: &yandex.MdbPostgresqlClusterConfigArgs{
//					Version: pulumi.String("15"),
//					Resources: &yandex.MdbPostgresqlClusterConfigResourcesArgs{
//						ResourcePresetId: pulumi.String("s2.micro"),
//						DiskTypeId:       pulumi.String("network-ssd"),
//						DiskSize:         pulumi.Int(16),
//					},
//					PostgresqlConfig: pulumi.StringMap{
//						"max_connections":                pulumi.String("395"),
//						"enable_parallel_hash":           pulumi.String("true"),
//						"autovacuum_vacuum_scale_factor": pulumi.String("0.34"),
//						"default_transaction_isolation":  pulumi.String("TRANSACTION_ISOLATION_READ_COMMITTED"),
//						"shared_preload_libraries":       pulumi.String("SHARED_PRELOAD_LIBRARIES_AUTO_EXPLAIN,SHARED_PRELOAD_LIBRARIES_PG_HINT_PLAN"),
//					},
//				},
//				Hosts: yandex.MdbPostgresqlClusterHostArray{
//					&yandex.MdbPostgresqlClusterHostArgs{
//						Zone:     pulumi.String("ru-central1-a"),
//						SubnetId: fooVpcSubnet.ID(),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## PostgreSQL cluster settings
//
// More information about config:
// * https://cloud.yandex.com/docs/managed-postgresql/concepts/settings-list
// * https://www.postgresql.org/docs/current/runtime-config-connection.html
// * https://www.postgresql.org/docs/current/runtime-config-resource.html
// * https://www.postgresql.org/docs/current/runtime-config-wal.html
// * https://www.postgresql.org/docs/current/runtime-config-query.html
// * https://www.postgresql.org/docs/current/runtime-config-logging.html
// * https://www.postgresql.org/docs/current/runtime-config-autovacuum.html
// * https://www.postgresql.org/docs/current/runtime-config-client.html
// * https://www.postgresql.org/docs/current/runtime-config-locks.html
// * https://www.postgresql.org/docs/current/runtime-config-compatible.html
//
// |  Setting name and type \ PostgreSQL version  | 11 | 12 | 13 | 14 | 15 |
// |  ------------------------------------------  | -- | -- | -- | -- | -- |
// |  archiveTimeout : integer  | supported | supported | supported | supported | supported |
// |  arrayNulls : boolean  | supported | supported | supported | supported | supported |
// |  autoExplainLogAnalyze : boolean  | supported | supported | supported | supported | supported |
// |  autoExplainLogBuffers : boolean  | supported | supported | supported | supported | supported |
// |  autoExplainLogMinDuration : integer  | supported | supported | supported | supported | supported |
// |  autoExplainLogNestedStatements : boolean  | supported | supported | supported | supported | supported |
// |  autoExplainLogTiming : boolean  | supported | supported | supported | supported | supported |
// |  autoExplainLogTriggers : boolean  | supported | supported | supported | supported | supported |
// |  autoExplainLogVerbose : boolean  | supported | supported | supported | supported | supported |
// |  autoExplainSampleRate : float  | supported | supported | supported | supported | supported |
// |  autovacuumAnalyzeScaleFactor : float  | supported | supported | supported | supported | supported |
// |  autovacuumMaxWorkers : integer  | supported | supported | supported | supported | supported |
// |  autovacuumNaptime : integer  | supported | supported | supported | supported | supported |
// |  autovacuumVacuumCostDelay : integer  | supported | supported | supported | supported | supported |
// |  autovacuumVacuumCostLimit : integer  | supported | supported | supported | supported | supported |
// |  autovacuumVacuumInsertScaleFactor : float  | - | - | supported | supported | supported |
// |  autovacuumVacuumInsertThreshold : integer  | - | - | supported | supported | supported |
// |  autovacuumVacuumScaleFactor : float  | supported | supported | supported | supported | supported |
// |  autovacuumWorkMem : integer  | supported | supported | supported | supported | supported |
// |  backendFlushAfter : integer  | supported | supported | supported | supported | supported |
// |  backslashQuote : one of<br>  - 0: "BACKSLASH_QUOTE_UNSPECIFIED"<br>  - 1: "BACKSLASH_QUOTE"<br>  - 2: "BACKSLASH_QUOTE_ON"<br>  - 3: "BACKSLASH_QUOTE_OFF"<br>  - 4: "BACKSLASH_QUOTE_SAFE_ENCODING"  | supported | supported | supported | supported | supported |
// |  bgwriterDelay : integer  | supported | supported | supported | supported | supported |
// |  bgwriterFlushAfter : integer  | supported | supported | supported | supported | supported |
// |  bgwriterLruMaxpages : integer  | supported | supported | supported | supported | supported |
// |  bgwriterLruMultiplier : float  | supported | supported | supported | supported | supported |
// |  byteaOutput : one of<br>  - 0: "BYTEA_OUTPUT_UNSPECIFIED"<br>  - 1: "BYTEA_OUTPUT_HEX"<br>  - 2: "BYTEA_OUTPUT_ESCAPED"  | supported | supported | supported | supported | supported |
// |  checkpointCompletionTarget : float  | supported | supported | supported | supported | supported |
// |  checkpointFlushAfter : integer  | supported | supported | supported | supported | supported |
// |  checkpointTimeout : integer  | supported | supported | supported | supported | supported |
// |  clientMinMessages : one of<br>  - 0: "LOG_LEVEL_UNSPECIFIED"<br>  - 1: "LOG_LEVEL_DEBUG5"<br>  - 2: "LOG_LEVEL_DEBUG4"<br>  - 3: "LOG_LEVEL_DEBUG3"<br>  - 4: "LOG_LEVEL_DEBUG2"<br>  - 5: "LOG_LEVEL_DEBUG1"<br>  - 6: "LOG_LEVEL_LOG"<br>  - 7: "LOG_LEVEL_NOTICE"<br>  - 8: "LOG_LEVEL_WARNING"<br>  - 9: "LOG_LEVEL_ERROR"<br>  - 10: "LOG_LEVEL_FATAL"<br>  - 11: "LOG_LEVEL_PANIC"  | supported | supported | supported | supported | supported |
// |  constraintExclusion : one of<br>  - 0: "CONSTRAINT_EXCLUSION_UNSPECIFIED"<br>  - 1: "CONSTRAINT_EXCLUSION_ON"<br>  - 2: "CONSTRAINT_EXCLUSION_OFF"<br>  - 3: "CONSTRAINT_EXCLUSION_PARTITION"  | supported | supported | supported | supported | supported |
// |  cursorTupleFraction : float  | supported | supported | supported | supported | supported |
// |  deadlockTimeout : integer  | supported | supported | supported | supported | supported |
// |  defaultStatisticsTarget : integer  | supported | supported | supported | supported | supported |
// |  defaultTransactionIsolation : one of<br>  - 0: "TRANSACTION_ISOLATION_UNSPECIFIED"<br>  - 1: "TRANSACTION_ISOLATION_READ_UNCOMMITTED"<br>  - 2: "TRANSACTION_ISOLATION_READ_COMMITTED"<br>  - 3: "TRANSACTION_ISOLATION_REPEATABLE_READ"<br>  - 4: "TRANSACTION_ISOLATION_SERIALIZABLE"  | supported | supported | supported | supported | supported |
// |  defaultTransactionReadOnly : boolean  | supported | supported | supported | supported | supported |
// |  defaultWithOids : boolean  | supported | - | - | - | - |
// |  effectiveCacheSize : integer  | supported | supported | supported | supported | supported |
// |  effectiveIoConcurrency : integer  | supported | supported | supported | supported | supported |
// |  enableBitmapscan : boolean  | supported | supported | supported | supported | supported |
// |  enableHashagg : boolean  | supported | supported | supported | supported | supported |
// |  enableHashjoin : boolean  | supported | supported | supported | supported | supported |
// |  enableIncrementalSort : boolean  | - | - | supported | supported | supported |
// |  enableIndexonlyscan : boolean  | supported | supported | supported | supported | supported |
// |  enableIndexscan : boolean  | supported | supported | supported | supported | supported |
// |  enableMaterial : boolean  | supported | supported | supported | supported | supported |
// |  enableMergejoin : boolean  | supported | supported | supported | supported | supported |
// |  enableNestloop : boolean  | supported | supported | supported | supported | supported |
// |  enableParallelAppend : boolean  | supported | supported | supported | supported | supported |
// |  enableParallelHash : boolean  | supported | supported | supported | supported | supported |
// |  enablePartitionPruning : boolean  | supported | supported | supported | supported | supported |
// |  enablePartitionwiseAggregate : boolean  | supported | supported | supported | supported | supported |
// |  enablePartitionwiseJoin : boolean  | supported | supported | supported | supported | supported |
// |  enableSeqscan : boolean  | supported | supported | supported | supported | supported |
// |  enableSort : boolean  | supported | supported | supported | supported | supported |
// |  enableTidscan : boolean  | supported | supported | supported | supported | supported |
// |  escapeStringWarning : boolean  | supported | supported | supported | supported | supported |
// |  exitOnError : boolean  | supported | supported | supported | supported | supported |
// |  forceParallelMode : one of<br>  - 0: "FORCE_PARALLEL_MODE_UNSPECIFIED"<br>  - 1: "FORCE_PARALLEL_MODE_ON"<br>  - 2: "FORCE_PARALLEL_MODE_OFF"<br>  - 3: "FORCE_PARALLEL_MODE_REGRESS"  | supported | supported | supported | supported | supported |
// |  fromCollapseLimit : integer  | supported | supported | supported | supported | supported |
// |  ginPendingListLimit : integer  | supported | supported | supported | supported | supported |
// |  hashMemMultiplier : float  | - | - | supported | supported | supported |
// |  idleInTransactionSessionTimeout : integer  | supported | supported | supported | supported | supported |
// |  jit : boolean  | supported | supported | supported | supported | supported |
// |  joinCollapseLimit : integer  | supported | supported | supported | supported | supported |
// |  loCompatPrivileges : boolean  | supported | supported | supported | supported | supported |
// |  lockTimeout : integer  | supported | supported | supported | supported | supported |
// |  logCheckpoints : boolean  | supported | supported | supported | supported | supported |
// |  logConnections : boolean  | supported | supported | supported | supported | supported |
// |  logDisconnections : boolean  | supported | supported | supported | supported | supported |
// |  logDuration : boolean  | supported | supported | supported | supported | supported |
// |  logErrorVerbosity : one of<br>  - 0: "LOG_ERROR_VERBOSITY_UNSPECIFIED"<br>  - 1: "LOG_ERROR_VERBOSITY_TERSE"<br>  - 2: "LOG_ERROR_VERBOSITY_DEFAULT"<br>  - 3: "LOG_ERROR_VERBOSITY_VERBOSE"  | supported | supported | supported | supported | supported |
// |  logLockWaits : boolean  | supported | supported | supported | supported | supported |
// |  logMinDurationSample : integer  | - | - | supported | supported | supported |
// |  logMinDurationStatement : integer  | supported | supported | supported | supported | supported |
// |  logMinErrorStatement : one of<br>  - 0: "LOG_LEVEL_UNSPECIFIED"<br>  - 1: "LOG_LEVEL_DEBUG5"<br>  - 2: "LOG_LEVEL_DEBUG4"<br>  - 3: "LOG_LEVEL_DEBUG3"<br>  - 4: "LOG_LEVEL_DEBUG2"<br>  - 5: "LOG_LEVEL_DEBUG1"<br>  - 6: "LOG_LEVEL_LOG"<br>  - 7: "LOG_LEVEL_NOTICE"<br>  - 8: "LOG_LEVEL_WARNING"<br>  - 9: "LOG_LEVEL_ERROR"<br>  - 10: "LOG_LEVEL_FATAL"<br>  - 11: "LOG_LEVEL_PANIC"  | supported | supported | supported | supported | supported |
// |  logMinMessages : one of<br>  - 0: "LOG_LEVEL_UNSPECIFIED"<br>  - 1: "LOG_LEVEL_DEBUG5"<br>  - 2: "LOG_LEVEL_DEBUG4"<br>  - 3: "LOG_LEVEL_DEBUG3"<br>  - 4: "LOG_LEVEL_DEBUG2"<br>  - 5: "LOG_LEVEL_DEBUG1"<br>  - 6: "LOG_LEVEL_LOG"<br>  - 7: "LOG_LEVEL_NOTICE"<br>  - 8: "LOG_LEVEL_WARNING"<br>  - 9: "LOG_LEVEL_ERROR"<br>  - 10: "LOG_LEVEL_FATAL"<br>  - 11: "LOG_LEVEL_PANIC"  | supported | supported | supported | supported | supported |
// |  logParameterMaxLength : integer  | - | - | supported | supported | supported |
// |  logParameterMaxLengthOnError : integer  | - | - | supported | supported | supported |
// |  logStatement : one of<br>  - 0: "LOG_STATEMENT_UNSPECIFIED"<br>  - 1: "LOG_STATEMENT_NONE"<br>  - 2: "LOG_STATEMENT_DDL"<br>  - 3: "LOG_STATEMENT_MOD"<br>  - 4: "LOG_STATEMENT_ALL"  | supported | supported | supported | supported | supported |
// |  logStatementSampleRate : float  | - | - | supported | supported | supported |
// |  logTempFiles : integer  | supported | supported | supported | supported | supported |
// |  logTransactionSampleRate : float  | - | supported | supported | supported | supported |
// |  logicalDecodingWorkMem : integer  | - | - | supported | supported | supported |
// |  maintenanceIoConcurrency : integer  | - | - | supported | supported | supported |
// |  maintenanceWorkMem : integer  | supported | supported | supported | supported | supported |
// |  maxConnections : integer  | supported | supported | supported | supported | supported |
// |  maxLocksPerTransaction : integer  | supported | supported | supported | supported | supported |
// |  maxParallelMaintenanceWorkers : integer  | supported | supported | supported | supported | supported |
// |  maxParallelWorkers : integer  | supported | supported | supported | supported | supported |
// |  maxParallelWorkersPerGather : integer  | supported | supported | supported | supported | supported |
// |  maxPredLocksPerTransaction : integer  | supported | supported | supported | supported | supported |
// |  maxPreparedTransactions : integer  | supported | supported | supported | supported | supported |
// |  maxSlotWalKeepSize : integer  | - | - | supported | supported | supported |
// |  maxStandbyStreamingDelay : integer  | supported | supported | supported | supported | supported |
// |  maxWalSize : integer  | supported | supported | supported | supported | supported |
// |  maxWorkerProcesses : integer  | supported | supported | supported | supported | supported |
// |  minWalSize : integer  | supported | supported | supported | supported | supported |
// |  oldSnapshotThreshold : integer  | supported | supported | supported | supported | supported |
// |  operatorPrecedenceWarning : boolean  | supported | supported | supported | - | - |
// |  parallelLeaderParticipation : boolean  | supported | supported | supported | supported | supported |
// |  pgHintPlanDebugPrint : one of<br>  - 0: "PG_HINT_PLAN_DEBUG_PRINT_UNSPECIFIED"<br>  - 1: "PG_HINT_PLAN_DEBUG_PRINT_OFF"<br>  - 2: "PG_HINT_PLAN_DEBUG_PRINT_ON"<br>  - 3: "PG_HINT_PLAN_DEBUG_PRINT_DETAILED"<br>  - 4: "PG_HINT_PLAN_DEBUG_PRINT_VERBOSE"  | supported | supported | supported | supported | supported |
// |  pgHintPlanEnableHint : boolean  | supported | supported | supported | supported | supported |
// |  pgHintPlanEnableHintTable : boolean  | supported | supported | supported | supported | supported |
// |  pgHintPlanMessageLevel : one of<br>  - 0: "LOG_LEVEL_UNSPECIFIED"<br>  - 1: "LOG_LEVEL_DEBUG5"<br>  - 2: "LOG_LEVEL_DEBUG4"<br>  - 3: "LOG_LEVEL_DEBUG3"<br>  - 4: "LOG_LEVEL_DEBUG2"<br>  - 5: "LOG_LEVEL_DEBUG1"<br>  - 6: "LOG_LEVEL_LOG"<br>  - 7: "LOG_LEVEL_NOTICE"<br>  - 8: "LOG_LEVEL_WARNING"<br>  - 9: "LOG_LEVEL_ERROR"<br>  - 10: "LOG_LEVEL_FATAL"<br>  - 11: "LOG_LEVEL_PANIC"  | supported | supported | supported | supported | supported |
// |  planCacheMode : one of<br>  - 0: "PLAN_CACHE_MODE_UNSPECIFIED"<br>  - 1: "PLAN_CACHE_MODE_AUTO"<br>  - 2: "PLAN_CACHE_MODE_FORCE_CUSTOM_PLAN"<br>  - 3: "PLAN_CACHE_MODE_FORCE_GENERIC_PLAN"  | - | supported | supported | supported | supported |
// |  quoteAllIdentifiers : boolean  | supported | supported | supported | supported | supported |
// |  randomPageCost : float  | supported | supported | supported | supported | supported |
// |  rowSecurity : boolean  | supported | supported | supported | supported | supported |
// |  searchPath : text  | supported | supported | supported | supported | supported |
// |  seqPageCost : float  | supported | supported | supported | supported | supported |
// |  sharedBuffers : integer  | supported | supported | supported | supported | supported |
// |  sharedPreloadLibraries : override if not set. one of<br> - "SHARED_PRELOAD_LIBRARIES_AUTO_EXPLAIN<br> - "SHARED_PRELOAD_LIBRARIES_PG_HINT_PLAN"<br> - "SHARED_PRELOAD_LIBRARIES_AUTO_EXPLAIN"<br> - "SHARED_PRELOAD_LIBRARIES_PG_HINT_PLAN"<br> - NO value  | supported | supported | supported | supported | supported |
// |  standardConformingStrings : boolean  | supported | supported | supported | supported | supported |
// |  statementTimeout : integer  | supported | supported | supported | supported | supported |
// |  synchronizeSeqscans : boolean  | supported | supported | supported | supported | supported |
// |  synchronousCommit : one of<br>  - 0: "SYNCHRONOUS_COMMIT_UNSPECIFIED"<br>  - 1: "SYNCHRONOUS_COMMIT_ON"<br>  - 2: "SYNCHRONOUS_COMMIT_OFF"<br>  - 3: "SYNCHRONOUS_COMMIT_LOCAL"<br>  - 4: "SYNCHRONOUS_COMMIT_REMOTE_WRITE"<br>  - 5: "SYNCHRONOUS_COMMIT_REMOTE_APPLY"  | supported | supported | supported | supported | supported |
// |  tempBuffers : integer  | supported | supported | supported | supported | supported |
// |  tempFileLimit : integer  | supported | supported | supported | supported | supported |
// |  timezone : text  | supported | supported | supported | supported | supported |
// |  trackActivityQuerySize : integer  | supported | supported | supported | supported | supported |
// |  transformNullEquals : boolean  | supported | supported | supported | supported | supported |
// |  vacuumCleanupIndexScaleFactor : float  | supported | supported | supported | - | - |
// |  vacuumCostDelay : integer  | supported | supported | supported | supported | supported |
// |  vacuumCostLimit : integer  | supported | supported | supported | supported | supported |
// |  vacuumCostPageDirty : integer  | supported | supported | supported | supported | supported |
// |  vacuumCostPageHit : integer  | supported | supported | supported | supported | supported |
// |  vacuumCostPageMiss : integer  | supported | supported | supported | supported | supported |
// |  walKeepSize : integer  | - | - | supported | supported | supported |
// |  walLevel : one of<br>  - 0: "WAL_LEVEL_UNSPECIFIED"<br>  - 1: "WAL_LEVEL_REPLICA"<br>  - 2: "WAL_LEVEL_LOGICAL"  | supported | supported | supported | supported | supported |
// |  workMem : integer  | supported | supported | supported | supported | supported |
// |  xmlbinary : one of<br>  - 0: "XML_BINARY_UNSPECIFIED"<br>  - 1: "XML_BINARY_BASE64"<br>  - 2: "XML_BINARY_HEX"  | supported | supported | supported | supported | supported |
// |  xmloption : one of<br>  - 0: "XML_OPTION_UNSPECIFIED"<br>  - 1: "XML_OPTION_DOCUMENT"<br>  - 2: "XML_OPTION_CONTENT"  | supported | supported | supported | supported | supported |
//
// ## Import
//
// A cluster can be imported using the `id` of the resource, e.g.
//
// ```sh
// $ pulumi import yandex:index/mdbPostgresqlCluster:MdbPostgresqlCluster foo cluster_id
// ```
type MdbPostgresqlCluster struct {
	pulumi.CustomResourceState

	// Configuration of the PostgreSQL cluster. The structure is documented below.
	Config MdbPostgresqlClusterConfigOutput `pulumi:"config"`
	// Timestamp of cluster creation.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Deprecated: to manage databases, please switch to using a separate resource type yandex_mdb_postgresql_database
	Databases MdbPostgresqlClusterDatabaseArrayOutput `pulumi:"databases"`
	// Inhibits deletion of the cluster.  Can be either `true` or `false`.
	//
	// ***
	DeletionProtection pulumi.BoolOutput `pulumi:"deletionProtection"`
	// Description of the PostgreSQL cluster.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Deployment environment of the PostgreSQL cluster.
	Environment pulumi.StringOutput `pulumi:"environment"`
	// The ID of the folder that the resource belongs to. If it is unset, the default provider `folderId` is used for create.
	FolderId pulumi.StringOutput `pulumi:"folderId"`
	// Aggregated health of the cluster.
	Health       pulumi.StringOutput      `pulumi:"health"`
	HostGroupIds pulumi.StringArrayOutput `pulumi:"hostGroupIds"`
	// It sets name of master host. It works only when `host.name` is set.
	HostMasterName pulumi.StringOutput `pulumi:"hostMasterName"`
	// A host of the PostgreSQL cluster. The structure is documented below.
	Hosts MdbPostgresqlClusterHostArrayOutput `pulumi:"hosts"`
	// A set of key/value label pairs to assign to the PostgreSQL cluster.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Maintenance policy of the PostgreSQL cluster. The structure is documented below.
	MaintenanceWindow MdbPostgresqlClusterMaintenanceWindowOutput `pulumi:"maintenanceWindow"`
	// Name of the PostgreSQL cluster. Provided by the client when the cluster is created.
	Name pulumi.StringOutput `pulumi:"name"`
	// ID of the network, to which the PostgreSQL cluster belongs.
	//
	// ***
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
	// The cluster will be created from the specified backup. The structure is documented below.
	//
	// ***
	Restore MdbPostgresqlClusterRestorePtrOutput `pulumi:"restore"`
	// A set of ids of security groups assigned to hosts of the cluster.
	SecurityGroupIds pulumi.StringArrayOutput `pulumi:"securityGroupIds"`
	// Status of the cluster.
	Status pulumi.StringOutput `pulumi:"status"`
	// To manage users, please switch to using a separate resource type `MdbPostgresqlUser`.
	//
	// Deprecated: to manage users, please switch to using a separate resource type yandex_mdb_postgresql_user
	Users MdbPostgresqlClusterUserArrayOutput `pulumi:"users"`
}

// NewMdbPostgresqlCluster registers a new resource with the given unique name, arguments, and options.
func NewMdbPostgresqlCluster(ctx *pulumi.Context,
	name string, args *MdbPostgresqlClusterArgs, opts ...pulumi.ResourceOption) (*MdbPostgresqlCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Config == nil {
		return nil, errors.New("invalid value for required argument 'Config'")
	}
	if args.Environment == nil {
		return nil, errors.New("invalid value for required argument 'Environment'")
	}
	if args.Hosts == nil {
		return nil, errors.New("invalid value for required argument 'Hosts'")
	}
	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MdbPostgresqlCluster
	err := ctx.RegisterResource("yandex:index/mdbPostgresqlCluster:MdbPostgresqlCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMdbPostgresqlCluster gets an existing MdbPostgresqlCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMdbPostgresqlCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MdbPostgresqlClusterState, opts ...pulumi.ResourceOption) (*MdbPostgresqlCluster, error) {
	var resource MdbPostgresqlCluster
	err := ctx.ReadResource("yandex:index/mdbPostgresqlCluster:MdbPostgresqlCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MdbPostgresqlCluster resources.
type mdbPostgresqlClusterState struct {
	// Configuration of the PostgreSQL cluster. The structure is documented below.
	Config *MdbPostgresqlClusterConfig `pulumi:"config"`
	// Timestamp of cluster creation.
	CreatedAt *string `pulumi:"createdAt"`
	// Deprecated: to manage databases, please switch to using a separate resource type yandex_mdb_postgresql_database
	Databases []MdbPostgresqlClusterDatabase `pulumi:"databases"`
	// Inhibits deletion of the cluster.  Can be either `true` or `false`.
	//
	// ***
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// Description of the PostgreSQL cluster.
	Description *string `pulumi:"description"`
	// Deployment environment of the PostgreSQL cluster.
	Environment *string `pulumi:"environment"`
	// The ID of the folder that the resource belongs to. If it is unset, the default provider `folderId` is used for create.
	FolderId *string `pulumi:"folderId"`
	// Aggregated health of the cluster.
	Health       *string  `pulumi:"health"`
	HostGroupIds []string `pulumi:"hostGroupIds"`
	// It sets name of master host. It works only when `host.name` is set.
	HostMasterName *string `pulumi:"hostMasterName"`
	// A host of the PostgreSQL cluster. The structure is documented below.
	Hosts []MdbPostgresqlClusterHost `pulumi:"hosts"`
	// A set of key/value label pairs to assign to the PostgreSQL cluster.
	Labels map[string]string `pulumi:"labels"`
	// Maintenance policy of the PostgreSQL cluster. The structure is documented below.
	MaintenanceWindow *MdbPostgresqlClusterMaintenanceWindow `pulumi:"maintenanceWindow"`
	// Name of the PostgreSQL cluster. Provided by the client when the cluster is created.
	Name *string `pulumi:"name"`
	// ID of the network, to which the PostgreSQL cluster belongs.
	//
	// ***
	NetworkId *string `pulumi:"networkId"`
	// The cluster will be created from the specified backup. The structure is documented below.
	//
	// ***
	Restore *MdbPostgresqlClusterRestore `pulumi:"restore"`
	// A set of ids of security groups assigned to hosts of the cluster.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// Status of the cluster.
	Status *string `pulumi:"status"`
	// To manage users, please switch to using a separate resource type `MdbPostgresqlUser`.
	//
	// Deprecated: to manage users, please switch to using a separate resource type yandex_mdb_postgresql_user
	Users []MdbPostgresqlClusterUser `pulumi:"users"`
}

type MdbPostgresqlClusterState struct {
	// Configuration of the PostgreSQL cluster. The structure is documented below.
	Config MdbPostgresqlClusterConfigPtrInput
	// Timestamp of cluster creation.
	CreatedAt pulumi.StringPtrInput
	// Deprecated: to manage databases, please switch to using a separate resource type yandex_mdb_postgresql_database
	Databases MdbPostgresqlClusterDatabaseArrayInput
	// Inhibits deletion of the cluster.  Can be either `true` or `false`.
	//
	// ***
	DeletionProtection pulumi.BoolPtrInput
	// Description of the PostgreSQL cluster.
	Description pulumi.StringPtrInput
	// Deployment environment of the PostgreSQL cluster.
	Environment pulumi.StringPtrInput
	// The ID of the folder that the resource belongs to. If it is unset, the default provider `folderId` is used for create.
	FolderId pulumi.StringPtrInput
	// Aggregated health of the cluster.
	Health       pulumi.StringPtrInput
	HostGroupIds pulumi.StringArrayInput
	// It sets name of master host. It works only when `host.name` is set.
	HostMasterName pulumi.StringPtrInput
	// A host of the PostgreSQL cluster. The structure is documented below.
	Hosts MdbPostgresqlClusterHostArrayInput
	// A set of key/value label pairs to assign to the PostgreSQL cluster.
	Labels pulumi.StringMapInput
	// Maintenance policy of the PostgreSQL cluster. The structure is documented below.
	MaintenanceWindow MdbPostgresqlClusterMaintenanceWindowPtrInput
	// Name of the PostgreSQL cluster. Provided by the client when the cluster is created.
	Name pulumi.StringPtrInput
	// ID of the network, to which the PostgreSQL cluster belongs.
	//
	// ***
	NetworkId pulumi.StringPtrInput
	// The cluster will be created from the specified backup. The structure is documented below.
	//
	// ***
	Restore MdbPostgresqlClusterRestorePtrInput
	// A set of ids of security groups assigned to hosts of the cluster.
	SecurityGroupIds pulumi.StringArrayInput
	// Status of the cluster.
	Status pulumi.StringPtrInput
	// To manage users, please switch to using a separate resource type `MdbPostgresqlUser`.
	//
	// Deprecated: to manage users, please switch to using a separate resource type yandex_mdb_postgresql_user
	Users MdbPostgresqlClusterUserArrayInput
}

func (MdbPostgresqlClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*mdbPostgresqlClusterState)(nil)).Elem()
}

type mdbPostgresqlClusterArgs struct {
	// Configuration of the PostgreSQL cluster. The structure is documented below.
	Config MdbPostgresqlClusterConfig `pulumi:"config"`
	// Deprecated: to manage databases, please switch to using a separate resource type yandex_mdb_postgresql_database
	Databases []MdbPostgresqlClusterDatabase `pulumi:"databases"`
	// Inhibits deletion of the cluster.  Can be either `true` or `false`.
	//
	// ***
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// Description of the PostgreSQL cluster.
	Description *string `pulumi:"description"`
	// Deployment environment of the PostgreSQL cluster.
	Environment string `pulumi:"environment"`
	// The ID of the folder that the resource belongs to. If it is unset, the default provider `folderId` is used for create.
	FolderId     *string  `pulumi:"folderId"`
	HostGroupIds []string `pulumi:"hostGroupIds"`
	// It sets name of master host. It works only when `host.name` is set.
	HostMasterName *string `pulumi:"hostMasterName"`
	// A host of the PostgreSQL cluster. The structure is documented below.
	Hosts []MdbPostgresqlClusterHost `pulumi:"hosts"`
	// A set of key/value label pairs to assign to the PostgreSQL cluster.
	Labels map[string]string `pulumi:"labels"`
	// Maintenance policy of the PostgreSQL cluster. The structure is documented below.
	MaintenanceWindow *MdbPostgresqlClusterMaintenanceWindow `pulumi:"maintenanceWindow"`
	// Name of the PostgreSQL cluster. Provided by the client when the cluster is created.
	Name *string `pulumi:"name"`
	// ID of the network, to which the PostgreSQL cluster belongs.
	//
	// ***
	NetworkId string `pulumi:"networkId"`
	// The cluster will be created from the specified backup. The structure is documented below.
	//
	// ***
	Restore *MdbPostgresqlClusterRestore `pulumi:"restore"`
	// A set of ids of security groups assigned to hosts of the cluster.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// To manage users, please switch to using a separate resource type `MdbPostgresqlUser`.
	//
	// Deprecated: to manage users, please switch to using a separate resource type yandex_mdb_postgresql_user
	Users []MdbPostgresqlClusterUser `pulumi:"users"`
}

// The set of arguments for constructing a MdbPostgresqlCluster resource.
type MdbPostgresqlClusterArgs struct {
	// Configuration of the PostgreSQL cluster. The structure is documented below.
	Config MdbPostgresqlClusterConfigInput
	// Deprecated: to manage databases, please switch to using a separate resource type yandex_mdb_postgresql_database
	Databases MdbPostgresqlClusterDatabaseArrayInput
	// Inhibits deletion of the cluster.  Can be either `true` or `false`.
	//
	// ***
	DeletionProtection pulumi.BoolPtrInput
	// Description of the PostgreSQL cluster.
	Description pulumi.StringPtrInput
	// Deployment environment of the PostgreSQL cluster.
	Environment pulumi.StringInput
	// The ID of the folder that the resource belongs to. If it is unset, the default provider `folderId` is used for create.
	FolderId     pulumi.StringPtrInput
	HostGroupIds pulumi.StringArrayInput
	// It sets name of master host. It works only when `host.name` is set.
	HostMasterName pulumi.StringPtrInput
	// A host of the PostgreSQL cluster. The structure is documented below.
	Hosts MdbPostgresqlClusterHostArrayInput
	// A set of key/value label pairs to assign to the PostgreSQL cluster.
	Labels pulumi.StringMapInput
	// Maintenance policy of the PostgreSQL cluster. The structure is documented below.
	MaintenanceWindow MdbPostgresqlClusterMaintenanceWindowPtrInput
	// Name of the PostgreSQL cluster. Provided by the client when the cluster is created.
	Name pulumi.StringPtrInput
	// ID of the network, to which the PostgreSQL cluster belongs.
	//
	// ***
	NetworkId pulumi.StringInput
	// The cluster will be created from the specified backup. The structure is documented below.
	//
	// ***
	Restore MdbPostgresqlClusterRestorePtrInput
	// A set of ids of security groups assigned to hosts of the cluster.
	SecurityGroupIds pulumi.StringArrayInput
	// To manage users, please switch to using a separate resource type `MdbPostgresqlUser`.
	//
	// Deprecated: to manage users, please switch to using a separate resource type yandex_mdb_postgresql_user
	Users MdbPostgresqlClusterUserArrayInput
}

func (MdbPostgresqlClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mdbPostgresqlClusterArgs)(nil)).Elem()
}

type MdbPostgresqlClusterInput interface {
	pulumi.Input

	ToMdbPostgresqlClusterOutput() MdbPostgresqlClusterOutput
	ToMdbPostgresqlClusterOutputWithContext(ctx context.Context) MdbPostgresqlClusterOutput
}

func (*MdbPostgresqlCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbPostgresqlCluster)(nil)).Elem()
}

func (i *MdbPostgresqlCluster) ToMdbPostgresqlClusterOutput() MdbPostgresqlClusterOutput {
	return i.ToMdbPostgresqlClusterOutputWithContext(context.Background())
}

func (i *MdbPostgresqlCluster) ToMdbPostgresqlClusterOutputWithContext(ctx context.Context) MdbPostgresqlClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterOutput)
}

// MdbPostgresqlClusterArrayInput is an input type that accepts MdbPostgresqlClusterArray and MdbPostgresqlClusterArrayOutput values.
// You can construct a concrete instance of `MdbPostgresqlClusterArrayInput` via:
//
//	MdbPostgresqlClusterArray{ MdbPostgresqlClusterArgs{...} }
type MdbPostgresqlClusterArrayInput interface {
	pulumi.Input

	ToMdbPostgresqlClusterArrayOutput() MdbPostgresqlClusterArrayOutput
	ToMdbPostgresqlClusterArrayOutputWithContext(context.Context) MdbPostgresqlClusterArrayOutput
}

type MdbPostgresqlClusterArray []MdbPostgresqlClusterInput

func (MdbPostgresqlClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MdbPostgresqlCluster)(nil)).Elem()
}

func (i MdbPostgresqlClusterArray) ToMdbPostgresqlClusterArrayOutput() MdbPostgresqlClusterArrayOutput {
	return i.ToMdbPostgresqlClusterArrayOutputWithContext(context.Background())
}

func (i MdbPostgresqlClusterArray) ToMdbPostgresqlClusterArrayOutputWithContext(ctx context.Context) MdbPostgresqlClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterArrayOutput)
}

// MdbPostgresqlClusterMapInput is an input type that accepts MdbPostgresqlClusterMap and MdbPostgresqlClusterMapOutput values.
// You can construct a concrete instance of `MdbPostgresqlClusterMapInput` via:
//
//	MdbPostgresqlClusterMap{ "key": MdbPostgresqlClusterArgs{...} }
type MdbPostgresqlClusterMapInput interface {
	pulumi.Input

	ToMdbPostgresqlClusterMapOutput() MdbPostgresqlClusterMapOutput
	ToMdbPostgresqlClusterMapOutputWithContext(context.Context) MdbPostgresqlClusterMapOutput
}

type MdbPostgresqlClusterMap map[string]MdbPostgresqlClusterInput

func (MdbPostgresqlClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MdbPostgresqlCluster)(nil)).Elem()
}

func (i MdbPostgresqlClusterMap) ToMdbPostgresqlClusterMapOutput() MdbPostgresqlClusterMapOutput {
	return i.ToMdbPostgresqlClusterMapOutputWithContext(context.Background())
}

func (i MdbPostgresqlClusterMap) ToMdbPostgresqlClusterMapOutputWithContext(ctx context.Context) MdbPostgresqlClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlClusterMapOutput)
}

type MdbPostgresqlClusterOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbPostgresqlCluster)(nil)).Elem()
}

func (o MdbPostgresqlClusterOutput) ToMdbPostgresqlClusterOutput() MdbPostgresqlClusterOutput {
	return o
}

func (o MdbPostgresqlClusterOutput) ToMdbPostgresqlClusterOutputWithContext(ctx context.Context) MdbPostgresqlClusterOutput {
	return o
}

// Configuration of the PostgreSQL cluster. The structure is documented below.
func (o MdbPostgresqlClusterOutput) Config() MdbPostgresqlClusterConfigOutput {
	return o.ApplyT(func(v *MdbPostgresqlCluster) MdbPostgresqlClusterConfigOutput { return v.Config }).(MdbPostgresqlClusterConfigOutput)
}

// Timestamp of cluster creation.
func (o MdbPostgresqlClusterOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbPostgresqlCluster) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Deprecated: to manage databases, please switch to using a separate resource type yandex_mdb_postgresql_database
func (o MdbPostgresqlClusterOutput) Databases() MdbPostgresqlClusterDatabaseArrayOutput {
	return o.ApplyT(func(v *MdbPostgresqlCluster) MdbPostgresqlClusterDatabaseArrayOutput { return v.Databases }).(MdbPostgresqlClusterDatabaseArrayOutput)
}

// Inhibits deletion of the cluster.  Can be either `true` or `false`.
//
// ***
func (o MdbPostgresqlClusterOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v *MdbPostgresqlCluster) pulumi.BoolOutput { return v.DeletionProtection }).(pulumi.BoolOutput)
}

// Description of the PostgreSQL cluster.
func (o MdbPostgresqlClusterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlCluster) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Deployment environment of the PostgreSQL cluster.
func (o MdbPostgresqlClusterOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbPostgresqlCluster) pulumi.StringOutput { return v.Environment }).(pulumi.StringOutput)
}

// The ID of the folder that the resource belongs to. If it is unset, the default provider `folderId` is used for create.
func (o MdbPostgresqlClusterOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbPostgresqlCluster) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

// Aggregated health of the cluster.
func (o MdbPostgresqlClusterOutput) Health() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbPostgresqlCluster) pulumi.StringOutput { return v.Health }).(pulumi.StringOutput)
}

func (o MdbPostgresqlClusterOutput) HostGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MdbPostgresqlCluster) pulumi.StringArrayOutput { return v.HostGroupIds }).(pulumi.StringArrayOutput)
}

// It sets name of master host. It works only when `host.name` is set.
func (o MdbPostgresqlClusterOutput) HostMasterName() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbPostgresqlCluster) pulumi.StringOutput { return v.HostMasterName }).(pulumi.StringOutput)
}

// A host of the PostgreSQL cluster. The structure is documented below.
func (o MdbPostgresqlClusterOutput) Hosts() MdbPostgresqlClusterHostArrayOutput {
	return o.ApplyT(func(v *MdbPostgresqlCluster) MdbPostgresqlClusterHostArrayOutput { return v.Hosts }).(MdbPostgresqlClusterHostArrayOutput)
}

// A set of key/value label pairs to assign to the PostgreSQL cluster.
func (o MdbPostgresqlClusterOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MdbPostgresqlCluster) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Maintenance policy of the PostgreSQL cluster. The structure is documented below.
func (o MdbPostgresqlClusterOutput) MaintenanceWindow() MdbPostgresqlClusterMaintenanceWindowOutput {
	return o.ApplyT(func(v *MdbPostgresqlCluster) MdbPostgresqlClusterMaintenanceWindowOutput { return v.MaintenanceWindow }).(MdbPostgresqlClusterMaintenanceWindowOutput)
}

// Name of the PostgreSQL cluster. Provided by the client when the cluster is created.
func (o MdbPostgresqlClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbPostgresqlCluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// ID of the network, to which the PostgreSQL cluster belongs.
//
// ***
func (o MdbPostgresqlClusterOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbPostgresqlCluster) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

// The cluster will be created from the specified backup. The structure is documented below.
//
// ***
func (o MdbPostgresqlClusterOutput) Restore() MdbPostgresqlClusterRestorePtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlCluster) MdbPostgresqlClusterRestorePtrOutput { return v.Restore }).(MdbPostgresqlClusterRestorePtrOutput)
}

// A set of ids of security groups assigned to hosts of the cluster.
func (o MdbPostgresqlClusterOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MdbPostgresqlCluster) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// Status of the cluster.
func (o MdbPostgresqlClusterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbPostgresqlCluster) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// To manage users, please switch to using a separate resource type `MdbPostgresqlUser`.
//
// Deprecated: to manage users, please switch to using a separate resource type yandex_mdb_postgresql_user
func (o MdbPostgresqlClusterOutput) Users() MdbPostgresqlClusterUserArrayOutput {
	return o.ApplyT(func(v *MdbPostgresqlCluster) MdbPostgresqlClusterUserArrayOutput { return v.Users }).(MdbPostgresqlClusterUserArrayOutput)
}

type MdbPostgresqlClusterArrayOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MdbPostgresqlCluster)(nil)).Elem()
}

func (o MdbPostgresqlClusterArrayOutput) ToMdbPostgresqlClusterArrayOutput() MdbPostgresqlClusterArrayOutput {
	return o
}

func (o MdbPostgresqlClusterArrayOutput) ToMdbPostgresqlClusterArrayOutputWithContext(ctx context.Context) MdbPostgresqlClusterArrayOutput {
	return o
}

func (o MdbPostgresqlClusterArrayOutput) Index(i pulumi.IntInput) MdbPostgresqlClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MdbPostgresqlCluster {
		return vs[0].([]*MdbPostgresqlCluster)[vs[1].(int)]
	}).(MdbPostgresqlClusterOutput)
}

type MdbPostgresqlClusterMapOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MdbPostgresqlCluster)(nil)).Elem()
}

func (o MdbPostgresqlClusterMapOutput) ToMdbPostgresqlClusterMapOutput() MdbPostgresqlClusterMapOutput {
	return o
}

func (o MdbPostgresqlClusterMapOutput) ToMdbPostgresqlClusterMapOutputWithContext(ctx context.Context) MdbPostgresqlClusterMapOutput {
	return o
}

func (o MdbPostgresqlClusterMapOutput) MapIndex(k pulumi.StringInput) MdbPostgresqlClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MdbPostgresqlCluster {
		return vs[0].(map[string]*MdbPostgresqlCluster)[vs[1].(string)]
	}).(MdbPostgresqlClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MdbPostgresqlClusterInput)(nil)).Elem(), &MdbPostgresqlCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*MdbPostgresqlClusterArrayInput)(nil)).Elem(), MdbPostgresqlClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MdbPostgresqlClusterMapInput)(nil)).Elem(), MdbPostgresqlClusterMap{})
	pulumi.RegisterOutputType(MdbPostgresqlClusterOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlClusterArrayOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlClusterMapOutput{})
}
