// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupYdbDatabaseServerless(ctx *pulumi.Context, args *LookupYdbDatabaseServerlessArgs, opts ...pulumi.InvokeOption) (*LookupYdbDatabaseServerlessResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupYdbDatabaseServerlessResult
	err := ctx.Invoke("yandex:index/getYdbDatabaseServerless:getYdbDatabaseServerless", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getYdbDatabaseServerless.
type LookupYdbDatabaseServerlessArgs struct {
	DatabaseId          *string                                      `pulumi:"databaseId"`
	DeletionProtection  *bool                                        `pulumi:"deletionProtection"`
	FolderId            *string                                      `pulumi:"folderId"`
	Name                *string                                      `pulumi:"name"`
	ServerlessDatabases []GetYdbDatabaseServerlessServerlessDatabase `pulumi:"serverlessDatabases"`
}

// A collection of values returned by getYdbDatabaseServerless.
type LookupYdbDatabaseServerlessResult struct {
	CreatedAt           string  `pulumi:"createdAt"`
	DatabaseId          *string `pulumi:"databaseId"`
	DatabasePath        string  `pulumi:"databasePath"`
	DeletionProtection  bool    `pulumi:"deletionProtection"`
	Description         string  `pulumi:"description"`
	DocumentApiEndpoint string  `pulumi:"documentApiEndpoint"`
	FolderId            *string `pulumi:"folderId"`
	// The provider-assigned unique ID for this managed resource.
	Id                  string                                       `pulumi:"id"`
	Labels              map[string]string                            `pulumi:"labels"`
	LocationId          string                                       `pulumi:"locationId"`
	Name                *string                                      `pulumi:"name"`
	ServerlessDatabases []GetYdbDatabaseServerlessServerlessDatabase `pulumi:"serverlessDatabases"`
	Status              string                                       `pulumi:"status"`
	TlsEnabled          bool                                         `pulumi:"tlsEnabled"`
	YdbApiEndpoint      string                                       `pulumi:"ydbApiEndpoint"`
	YdbFullEndpoint     string                                       `pulumi:"ydbFullEndpoint"`
}

func LookupYdbDatabaseServerlessOutput(ctx *pulumi.Context, args LookupYdbDatabaseServerlessOutputArgs, opts ...pulumi.InvokeOption) LookupYdbDatabaseServerlessResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupYdbDatabaseServerlessResult, error) {
			args := v.(LookupYdbDatabaseServerlessArgs)
			r, err := LookupYdbDatabaseServerless(ctx, &args, opts...)
			var s LookupYdbDatabaseServerlessResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupYdbDatabaseServerlessResultOutput)
}

// A collection of arguments for invoking getYdbDatabaseServerless.
type LookupYdbDatabaseServerlessOutputArgs struct {
	DatabaseId          pulumi.StringPtrInput                                `pulumi:"databaseId"`
	DeletionProtection  pulumi.BoolPtrInput                                  `pulumi:"deletionProtection"`
	FolderId            pulumi.StringPtrInput                                `pulumi:"folderId"`
	Name                pulumi.StringPtrInput                                `pulumi:"name"`
	ServerlessDatabases GetYdbDatabaseServerlessServerlessDatabaseArrayInput `pulumi:"serverlessDatabases"`
}

func (LookupYdbDatabaseServerlessOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupYdbDatabaseServerlessArgs)(nil)).Elem()
}

// A collection of values returned by getYdbDatabaseServerless.
type LookupYdbDatabaseServerlessResultOutput struct{ *pulumi.OutputState }

func (LookupYdbDatabaseServerlessResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupYdbDatabaseServerlessResult)(nil)).Elem()
}

func (o LookupYdbDatabaseServerlessResultOutput) ToLookupYdbDatabaseServerlessResultOutput() LookupYdbDatabaseServerlessResultOutput {
	return o
}

func (o LookupYdbDatabaseServerlessResultOutput) ToLookupYdbDatabaseServerlessResultOutputWithContext(ctx context.Context) LookupYdbDatabaseServerlessResultOutput {
	return o
}

func (o LookupYdbDatabaseServerlessResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupYdbDatabaseServerlessResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o LookupYdbDatabaseServerlessResultOutput) DatabaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupYdbDatabaseServerlessResult) *string { return v.DatabaseId }).(pulumi.StringPtrOutput)
}

func (o LookupYdbDatabaseServerlessResultOutput) DatabasePath() pulumi.StringOutput {
	return o.ApplyT(func(v LookupYdbDatabaseServerlessResult) string { return v.DatabasePath }).(pulumi.StringOutput)
}

func (o LookupYdbDatabaseServerlessResultOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupYdbDatabaseServerlessResult) bool { return v.DeletionProtection }).(pulumi.BoolOutput)
}

func (o LookupYdbDatabaseServerlessResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupYdbDatabaseServerlessResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupYdbDatabaseServerlessResultOutput) DocumentApiEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupYdbDatabaseServerlessResult) string { return v.DocumentApiEndpoint }).(pulumi.StringOutput)
}

func (o LookupYdbDatabaseServerlessResultOutput) FolderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupYdbDatabaseServerlessResult) *string { return v.FolderId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupYdbDatabaseServerlessResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupYdbDatabaseServerlessResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupYdbDatabaseServerlessResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupYdbDatabaseServerlessResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupYdbDatabaseServerlessResultOutput) LocationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupYdbDatabaseServerlessResult) string { return v.LocationId }).(pulumi.StringOutput)
}

func (o LookupYdbDatabaseServerlessResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupYdbDatabaseServerlessResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupYdbDatabaseServerlessResultOutput) ServerlessDatabases() GetYdbDatabaseServerlessServerlessDatabaseArrayOutput {
	return o.ApplyT(func(v LookupYdbDatabaseServerlessResult) []GetYdbDatabaseServerlessServerlessDatabase {
		return v.ServerlessDatabases
	}).(GetYdbDatabaseServerlessServerlessDatabaseArrayOutput)
}

func (o LookupYdbDatabaseServerlessResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupYdbDatabaseServerlessResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupYdbDatabaseServerlessResultOutput) TlsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupYdbDatabaseServerlessResult) bool { return v.TlsEnabled }).(pulumi.BoolOutput)
}

func (o LookupYdbDatabaseServerlessResultOutput) YdbApiEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupYdbDatabaseServerlessResult) string { return v.YdbApiEndpoint }).(pulumi.StringOutput)
}

func (o LookupYdbDatabaseServerlessResultOutput) YdbFullEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupYdbDatabaseServerlessResult) string { return v.YdbFullEndpoint }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupYdbDatabaseServerlessResultOutput{})
}
