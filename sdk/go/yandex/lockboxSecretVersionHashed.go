// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"errors"
	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Yandex Cloud Lockbox secret version resource (with values hashed in state). For more information, see
// [the official documentation](https://cloud.yandex.com/en/docs/lockbox/).
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			mySecret, err := yandex.NewLockboxSecret(ctx, "mySecret", nil)
//			if err != nil {
//				return err
//			}
//			_, err = yandex.NewLockboxSecretVersionHashed(ctx, "myVersion", &yandex.LockboxSecretVersionHashedArgs{
//				SecretId:   mySecret.ID(),
//				Key1:       pulumi.String("key1"),
//				TextValue1: pulumi.String("sensitive value 1"),
//				Key2:       pulumi.String("k2"),
//				TextValue2: pulumi.String("sensitive value 2"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
type LockboxSecretVersionHashed struct {
	pulumi.CustomResourceState

	// The Yandex Cloud Lockbox secret version description.
	// * `key_<NUMBER>` - (Optional) Each of the entry keys in the Yandex Cloud Lockbox secret version.
	// * `text_value_<NUMBER>` - (Optional) Each of the entry values in the Yandex Cloud Lockbox secret version.
	//
	// The `<NUMBER>` can range from `1` to `10`. If you only need one entry, use `key1`/`textValue1`.
	// If you need a second entry, use `key2`/`textValue2`, and so on.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	Key1        pulumi.StringPtrOutput `pulumi:"key1"`
	Key10       pulumi.StringPtrOutput `pulumi:"key10"`
	Key2        pulumi.StringPtrOutput `pulumi:"key2"`
	Key3        pulumi.StringPtrOutput `pulumi:"key3"`
	Key4        pulumi.StringPtrOutput `pulumi:"key4"`
	Key5        pulumi.StringPtrOutput `pulumi:"key5"`
	Key6        pulumi.StringPtrOutput `pulumi:"key6"`
	Key7        pulumi.StringPtrOutput `pulumi:"key7"`
	Key8        pulumi.StringPtrOutput `pulumi:"key8"`
	Key9        pulumi.StringPtrOutput `pulumi:"key9"`
	// The Yandex Cloud Lockbox secret ID where to add the version.
	SecretId    pulumi.StringOutput    `pulumi:"secretId"`
	TextValue1  pulumi.StringPtrOutput `pulumi:"textValue1"`
	TextValue10 pulumi.StringPtrOutput `pulumi:"textValue10"`
	TextValue2  pulumi.StringPtrOutput `pulumi:"textValue2"`
	TextValue3  pulumi.StringPtrOutput `pulumi:"textValue3"`
	TextValue4  pulumi.StringPtrOutput `pulumi:"textValue4"`
	TextValue5  pulumi.StringPtrOutput `pulumi:"textValue5"`
	TextValue6  pulumi.StringPtrOutput `pulumi:"textValue6"`
	TextValue7  pulumi.StringPtrOutput `pulumi:"textValue7"`
	TextValue8  pulumi.StringPtrOutput `pulumi:"textValue8"`
	TextValue9  pulumi.StringPtrOutput `pulumi:"textValue9"`
}

// NewLockboxSecretVersionHashed registers a new resource with the given unique name, arguments, and options.
func NewLockboxSecretVersionHashed(ctx *pulumi.Context,
	name string, args *LockboxSecretVersionHashedArgs, opts ...pulumi.ResourceOption) (*LockboxSecretVersionHashed, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SecretId == nil {
		return nil, errors.New("invalid value for required argument 'SecretId'")
	}
	if args.TextValue1 != nil {
		args.TextValue1 = pulumi.ToSecret(args.TextValue1).(pulumi.StringPtrInput)
	}
	if args.TextValue10 != nil {
		args.TextValue10 = pulumi.ToSecret(args.TextValue10).(pulumi.StringPtrInput)
	}
	if args.TextValue2 != nil {
		args.TextValue2 = pulumi.ToSecret(args.TextValue2).(pulumi.StringPtrInput)
	}
	if args.TextValue3 != nil {
		args.TextValue3 = pulumi.ToSecret(args.TextValue3).(pulumi.StringPtrInput)
	}
	if args.TextValue4 != nil {
		args.TextValue4 = pulumi.ToSecret(args.TextValue4).(pulumi.StringPtrInput)
	}
	if args.TextValue5 != nil {
		args.TextValue5 = pulumi.ToSecret(args.TextValue5).(pulumi.StringPtrInput)
	}
	if args.TextValue6 != nil {
		args.TextValue6 = pulumi.ToSecret(args.TextValue6).(pulumi.StringPtrInput)
	}
	if args.TextValue7 != nil {
		args.TextValue7 = pulumi.ToSecret(args.TextValue7).(pulumi.StringPtrInput)
	}
	if args.TextValue8 != nil {
		args.TextValue8 = pulumi.ToSecret(args.TextValue8).(pulumi.StringPtrInput)
	}
	if args.TextValue9 != nil {
		args.TextValue9 = pulumi.ToSecret(args.TextValue9).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"textValue1",
		"textValue10",
		"textValue2",
		"textValue3",
		"textValue4",
		"textValue5",
		"textValue6",
		"textValue7",
		"textValue8",
		"textValue9",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LockboxSecretVersionHashed
	err := ctx.RegisterResource("yandex:index/lockboxSecretVersionHashed:LockboxSecretVersionHashed", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLockboxSecretVersionHashed gets an existing LockboxSecretVersionHashed resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLockboxSecretVersionHashed(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LockboxSecretVersionHashedState, opts ...pulumi.ResourceOption) (*LockboxSecretVersionHashed, error) {
	var resource LockboxSecretVersionHashed
	err := ctx.ReadResource("yandex:index/lockboxSecretVersionHashed:LockboxSecretVersionHashed", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LockboxSecretVersionHashed resources.
type lockboxSecretVersionHashedState struct {
	// The Yandex Cloud Lockbox secret version description.
	// * `key_<NUMBER>` - (Optional) Each of the entry keys in the Yandex Cloud Lockbox secret version.
	// * `text_value_<NUMBER>` - (Optional) Each of the entry values in the Yandex Cloud Lockbox secret version.
	//
	// The `<NUMBER>` can range from `1` to `10`. If you only need one entry, use `key1`/`textValue1`.
	// If you need a second entry, use `key2`/`textValue2`, and so on.
	Description *string `pulumi:"description"`
	Key1        *string `pulumi:"key1"`
	Key10       *string `pulumi:"key10"`
	Key2        *string `pulumi:"key2"`
	Key3        *string `pulumi:"key3"`
	Key4        *string `pulumi:"key4"`
	Key5        *string `pulumi:"key5"`
	Key6        *string `pulumi:"key6"`
	Key7        *string `pulumi:"key7"`
	Key8        *string `pulumi:"key8"`
	Key9        *string `pulumi:"key9"`
	// The Yandex Cloud Lockbox secret ID where to add the version.
	SecretId    *string `pulumi:"secretId"`
	TextValue1  *string `pulumi:"textValue1"`
	TextValue10 *string `pulumi:"textValue10"`
	TextValue2  *string `pulumi:"textValue2"`
	TextValue3  *string `pulumi:"textValue3"`
	TextValue4  *string `pulumi:"textValue4"`
	TextValue5  *string `pulumi:"textValue5"`
	TextValue6  *string `pulumi:"textValue6"`
	TextValue7  *string `pulumi:"textValue7"`
	TextValue8  *string `pulumi:"textValue8"`
	TextValue9  *string `pulumi:"textValue9"`
}

type LockboxSecretVersionHashedState struct {
	// The Yandex Cloud Lockbox secret version description.
	// * `key_<NUMBER>` - (Optional) Each of the entry keys in the Yandex Cloud Lockbox secret version.
	// * `text_value_<NUMBER>` - (Optional) Each of the entry values in the Yandex Cloud Lockbox secret version.
	//
	// The `<NUMBER>` can range from `1` to `10`. If you only need one entry, use `key1`/`textValue1`.
	// If you need a second entry, use `key2`/`textValue2`, and so on.
	Description pulumi.StringPtrInput
	Key1        pulumi.StringPtrInput
	Key10       pulumi.StringPtrInput
	Key2        pulumi.StringPtrInput
	Key3        pulumi.StringPtrInput
	Key4        pulumi.StringPtrInput
	Key5        pulumi.StringPtrInput
	Key6        pulumi.StringPtrInput
	Key7        pulumi.StringPtrInput
	Key8        pulumi.StringPtrInput
	Key9        pulumi.StringPtrInput
	// The Yandex Cloud Lockbox secret ID where to add the version.
	SecretId    pulumi.StringPtrInput
	TextValue1  pulumi.StringPtrInput
	TextValue10 pulumi.StringPtrInput
	TextValue2  pulumi.StringPtrInput
	TextValue3  pulumi.StringPtrInput
	TextValue4  pulumi.StringPtrInput
	TextValue5  pulumi.StringPtrInput
	TextValue6  pulumi.StringPtrInput
	TextValue7  pulumi.StringPtrInput
	TextValue8  pulumi.StringPtrInput
	TextValue9  pulumi.StringPtrInput
}

func (LockboxSecretVersionHashedState) ElementType() reflect.Type {
	return reflect.TypeOf((*lockboxSecretVersionHashedState)(nil)).Elem()
}

type lockboxSecretVersionHashedArgs struct {
	// The Yandex Cloud Lockbox secret version description.
	// * `key_<NUMBER>` - (Optional) Each of the entry keys in the Yandex Cloud Lockbox secret version.
	// * `text_value_<NUMBER>` - (Optional) Each of the entry values in the Yandex Cloud Lockbox secret version.
	//
	// The `<NUMBER>` can range from `1` to `10`. If you only need one entry, use `key1`/`textValue1`.
	// If you need a second entry, use `key2`/`textValue2`, and so on.
	Description *string `pulumi:"description"`
	Key1        *string `pulumi:"key1"`
	Key10       *string `pulumi:"key10"`
	Key2        *string `pulumi:"key2"`
	Key3        *string `pulumi:"key3"`
	Key4        *string `pulumi:"key4"`
	Key5        *string `pulumi:"key5"`
	Key6        *string `pulumi:"key6"`
	Key7        *string `pulumi:"key7"`
	Key8        *string `pulumi:"key8"`
	Key9        *string `pulumi:"key9"`
	// The Yandex Cloud Lockbox secret ID where to add the version.
	SecretId    string  `pulumi:"secretId"`
	TextValue1  *string `pulumi:"textValue1"`
	TextValue10 *string `pulumi:"textValue10"`
	TextValue2  *string `pulumi:"textValue2"`
	TextValue3  *string `pulumi:"textValue3"`
	TextValue4  *string `pulumi:"textValue4"`
	TextValue5  *string `pulumi:"textValue5"`
	TextValue6  *string `pulumi:"textValue6"`
	TextValue7  *string `pulumi:"textValue7"`
	TextValue8  *string `pulumi:"textValue8"`
	TextValue9  *string `pulumi:"textValue9"`
}

// The set of arguments for constructing a LockboxSecretVersionHashed resource.
type LockboxSecretVersionHashedArgs struct {
	// The Yandex Cloud Lockbox secret version description.
	// * `key_<NUMBER>` - (Optional) Each of the entry keys in the Yandex Cloud Lockbox secret version.
	// * `text_value_<NUMBER>` - (Optional) Each of the entry values in the Yandex Cloud Lockbox secret version.
	//
	// The `<NUMBER>` can range from `1` to `10`. If you only need one entry, use `key1`/`textValue1`.
	// If you need a second entry, use `key2`/`textValue2`, and so on.
	Description pulumi.StringPtrInput
	Key1        pulumi.StringPtrInput
	Key10       pulumi.StringPtrInput
	Key2        pulumi.StringPtrInput
	Key3        pulumi.StringPtrInput
	Key4        pulumi.StringPtrInput
	Key5        pulumi.StringPtrInput
	Key6        pulumi.StringPtrInput
	Key7        pulumi.StringPtrInput
	Key8        pulumi.StringPtrInput
	Key9        pulumi.StringPtrInput
	// The Yandex Cloud Lockbox secret ID where to add the version.
	SecretId    pulumi.StringInput
	TextValue1  pulumi.StringPtrInput
	TextValue10 pulumi.StringPtrInput
	TextValue2  pulumi.StringPtrInput
	TextValue3  pulumi.StringPtrInput
	TextValue4  pulumi.StringPtrInput
	TextValue5  pulumi.StringPtrInput
	TextValue6  pulumi.StringPtrInput
	TextValue7  pulumi.StringPtrInput
	TextValue8  pulumi.StringPtrInput
	TextValue9  pulumi.StringPtrInput
}

func (LockboxSecretVersionHashedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lockboxSecretVersionHashedArgs)(nil)).Elem()
}

type LockboxSecretVersionHashedInput interface {
	pulumi.Input

	ToLockboxSecretVersionHashedOutput() LockboxSecretVersionHashedOutput
	ToLockboxSecretVersionHashedOutputWithContext(ctx context.Context) LockboxSecretVersionHashedOutput
}

func (*LockboxSecretVersionHashed) ElementType() reflect.Type {
	return reflect.TypeOf((**LockboxSecretVersionHashed)(nil)).Elem()
}

func (i *LockboxSecretVersionHashed) ToLockboxSecretVersionHashedOutput() LockboxSecretVersionHashedOutput {
	return i.ToLockboxSecretVersionHashedOutputWithContext(context.Background())
}

func (i *LockboxSecretVersionHashed) ToLockboxSecretVersionHashedOutputWithContext(ctx context.Context) LockboxSecretVersionHashedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LockboxSecretVersionHashedOutput)
}

// LockboxSecretVersionHashedArrayInput is an input type that accepts LockboxSecretVersionHashedArray and LockboxSecretVersionHashedArrayOutput values.
// You can construct a concrete instance of `LockboxSecretVersionHashedArrayInput` via:
//
//	LockboxSecretVersionHashedArray{ LockboxSecretVersionHashedArgs{...} }
type LockboxSecretVersionHashedArrayInput interface {
	pulumi.Input

	ToLockboxSecretVersionHashedArrayOutput() LockboxSecretVersionHashedArrayOutput
	ToLockboxSecretVersionHashedArrayOutputWithContext(context.Context) LockboxSecretVersionHashedArrayOutput
}

type LockboxSecretVersionHashedArray []LockboxSecretVersionHashedInput

func (LockboxSecretVersionHashedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LockboxSecretVersionHashed)(nil)).Elem()
}

func (i LockboxSecretVersionHashedArray) ToLockboxSecretVersionHashedArrayOutput() LockboxSecretVersionHashedArrayOutput {
	return i.ToLockboxSecretVersionHashedArrayOutputWithContext(context.Background())
}

func (i LockboxSecretVersionHashedArray) ToLockboxSecretVersionHashedArrayOutputWithContext(ctx context.Context) LockboxSecretVersionHashedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LockboxSecretVersionHashedArrayOutput)
}

// LockboxSecretVersionHashedMapInput is an input type that accepts LockboxSecretVersionHashedMap and LockboxSecretVersionHashedMapOutput values.
// You can construct a concrete instance of `LockboxSecretVersionHashedMapInput` via:
//
//	LockboxSecretVersionHashedMap{ "key": LockboxSecretVersionHashedArgs{...} }
type LockboxSecretVersionHashedMapInput interface {
	pulumi.Input

	ToLockboxSecretVersionHashedMapOutput() LockboxSecretVersionHashedMapOutput
	ToLockboxSecretVersionHashedMapOutputWithContext(context.Context) LockboxSecretVersionHashedMapOutput
}

type LockboxSecretVersionHashedMap map[string]LockboxSecretVersionHashedInput

func (LockboxSecretVersionHashedMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LockboxSecretVersionHashed)(nil)).Elem()
}

func (i LockboxSecretVersionHashedMap) ToLockboxSecretVersionHashedMapOutput() LockboxSecretVersionHashedMapOutput {
	return i.ToLockboxSecretVersionHashedMapOutputWithContext(context.Background())
}

func (i LockboxSecretVersionHashedMap) ToLockboxSecretVersionHashedMapOutputWithContext(ctx context.Context) LockboxSecretVersionHashedMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LockboxSecretVersionHashedMapOutput)
}

type LockboxSecretVersionHashedOutput struct{ *pulumi.OutputState }

func (LockboxSecretVersionHashedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LockboxSecretVersionHashed)(nil)).Elem()
}

func (o LockboxSecretVersionHashedOutput) ToLockboxSecretVersionHashedOutput() LockboxSecretVersionHashedOutput {
	return o
}

func (o LockboxSecretVersionHashedOutput) ToLockboxSecretVersionHashedOutputWithContext(ctx context.Context) LockboxSecretVersionHashedOutput {
	return o
}

// The Yandex Cloud Lockbox secret version description.
// * `key_<NUMBER>` - (Optional) Each of the entry keys in the Yandex Cloud Lockbox secret version.
// * `text_value_<NUMBER>` - (Optional) Each of the entry values in the Yandex Cloud Lockbox secret version.
//
// The `<NUMBER>` can range from `1` to `10`. If you only need one entry, use `key1`/`textValue1`.
// If you need a second entry, use `key2`/`textValue2`, and so on.
func (o LockboxSecretVersionHashedOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LockboxSecretVersionHashed) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LockboxSecretVersionHashedOutput) Key1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LockboxSecretVersionHashed) pulumi.StringPtrOutput { return v.Key1 }).(pulumi.StringPtrOutput)
}

func (o LockboxSecretVersionHashedOutput) Key10() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LockboxSecretVersionHashed) pulumi.StringPtrOutput { return v.Key10 }).(pulumi.StringPtrOutput)
}

func (o LockboxSecretVersionHashedOutput) Key2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LockboxSecretVersionHashed) pulumi.StringPtrOutput { return v.Key2 }).(pulumi.StringPtrOutput)
}

func (o LockboxSecretVersionHashedOutput) Key3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LockboxSecretVersionHashed) pulumi.StringPtrOutput { return v.Key3 }).(pulumi.StringPtrOutput)
}

func (o LockboxSecretVersionHashedOutput) Key4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LockboxSecretVersionHashed) pulumi.StringPtrOutput { return v.Key4 }).(pulumi.StringPtrOutput)
}

func (o LockboxSecretVersionHashedOutput) Key5() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LockboxSecretVersionHashed) pulumi.StringPtrOutput { return v.Key5 }).(pulumi.StringPtrOutput)
}

func (o LockboxSecretVersionHashedOutput) Key6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LockboxSecretVersionHashed) pulumi.StringPtrOutput { return v.Key6 }).(pulumi.StringPtrOutput)
}

func (o LockboxSecretVersionHashedOutput) Key7() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LockboxSecretVersionHashed) pulumi.StringPtrOutput { return v.Key7 }).(pulumi.StringPtrOutput)
}

func (o LockboxSecretVersionHashedOutput) Key8() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LockboxSecretVersionHashed) pulumi.StringPtrOutput { return v.Key8 }).(pulumi.StringPtrOutput)
}

func (o LockboxSecretVersionHashedOutput) Key9() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LockboxSecretVersionHashed) pulumi.StringPtrOutput { return v.Key9 }).(pulumi.StringPtrOutput)
}

// The Yandex Cloud Lockbox secret ID where to add the version.
func (o LockboxSecretVersionHashedOutput) SecretId() pulumi.StringOutput {
	return o.ApplyT(func(v *LockboxSecretVersionHashed) pulumi.StringOutput { return v.SecretId }).(pulumi.StringOutput)
}

func (o LockboxSecretVersionHashedOutput) TextValue1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LockboxSecretVersionHashed) pulumi.StringPtrOutput { return v.TextValue1 }).(pulumi.StringPtrOutput)
}

func (o LockboxSecretVersionHashedOutput) TextValue10() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LockboxSecretVersionHashed) pulumi.StringPtrOutput { return v.TextValue10 }).(pulumi.StringPtrOutput)
}

func (o LockboxSecretVersionHashedOutput) TextValue2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LockboxSecretVersionHashed) pulumi.StringPtrOutput { return v.TextValue2 }).(pulumi.StringPtrOutput)
}

func (o LockboxSecretVersionHashedOutput) TextValue3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LockboxSecretVersionHashed) pulumi.StringPtrOutput { return v.TextValue3 }).(pulumi.StringPtrOutput)
}

func (o LockboxSecretVersionHashedOutput) TextValue4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LockboxSecretVersionHashed) pulumi.StringPtrOutput { return v.TextValue4 }).(pulumi.StringPtrOutput)
}

func (o LockboxSecretVersionHashedOutput) TextValue5() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LockboxSecretVersionHashed) pulumi.StringPtrOutput { return v.TextValue5 }).(pulumi.StringPtrOutput)
}

func (o LockboxSecretVersionHashedOutput) TextValue6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LockboxSecretVersionHashed) pulumi.StringPtrOutput { return v.TextValue6 }).(pulumi.StringPtrOutput)
}

func (o LockboxSecretVersionHashedOutput) TextValue7() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LockboxSecretVersionHashed) pulumi.StringPtrOutput { return v.TextValue7 }).(pulumi.StringPtrOutput)
}

func (o LockboxSecretVersionHashedOutput) TextValue8() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LockboxSecretVersionHashed) pulumi.StringPtrOutput { return v.TextValue8 }).(pulumi.StringPtrOutput)
}

func (o LockboxSecretVersionHashedOutput) TextValue9() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LockboxSecretVersionHashed) pulumi.StringPtrOutput { return v.TextValue9 }).(pulumi.StringPtrOutput)
}

type LockboxSecretVersionHashedArrayOutput struct{ *pulumi.OutputState }

func (LockboxSecretVersionHashedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LockboxSecretVersionHashed)(nil)).Elem()
}

func (o LockboxSecretVersionHashedArrayOutput) ToLockboxSecretVersionHashedArrayOutput() LockboxSecretVersionHashedArrayOutput {
	return o
}

func (o LockboxSecretVersionHashedArrayOutput) ToLockboxSecretVersionHashedArrayOutputWithContext(ctx context.Context) LockboxSecretVersionHashedArrayOutput {
	return o
}

func (o LockboxSecretVersionHashedArrayOutput) Index(i pulumi.IntInput) LockboxSecretVersionHashedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LockboxSecretVersionHashed {
		return vs[0].([]*LockboxSecretVersionHashed)[vs[1].(int)]
	}).(LockboxSecretVersionHashedOutput)
}

type LockboxSecretVersionHashedMapOutput struct{ *pulumi.OutputState }

func (LockboxSecretVersionHashedMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LockboxSecretVersionHashed)(nil)).Elem()
}

func (o LockboxSecretVersionHashedMapOutput) ToLockboxSecretVersionHashedMapOutput() LockboxSecretVersionHashedMapOutput {
	return o
}

func (o LockboxSecretVersionHashedMapOutput) ToLockboxSecretVersionHashedMapOutputWithContext(ctx context.Context) LockboxSecretVersionHashedMapOutput {
	return o
}

func (o LockboxSecretVersionHashedMapOutput) MapIndex(k pulumi.StringInput) LockboxSecretVersionHashedOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LockboxSecretVersionHashed {
		return vs[0].(map[string]*LockboxSecretVersionHashed)[vs[1].(string)]
	}).(LockboxSecretVersionHashedOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LockboxSecretVersionHashedInput)(nil)).Elem(), &LockboxSecretVersionHashed{})
	pulumi.RegisterInputType(reflect.TypeOf((*LockboxSecretVersionHashedArrayInput)(nil)).Elem(), LockboxSecretVersionHashedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LockboxSecretVersionHashedMapInput)(nil)).Elem(), LockboxSecretVersionHashedMap{})
	pulumi.RegisterOutputType(LockboxSecretVersionHashedOutput{})
	pulumi.RegisterOutputType(LockboxSecretVersionHashedArrayOutput{})
	pulumi.RegisterOutputType(LockboxSecretVersionHashedMapOutput{})
}
