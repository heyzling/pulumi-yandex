// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupContainerRepositoryLifecyclePolicy(ctx *pulumi.Context, args *LookupContainerRepositoryLifecyclePolicyArgs, opts ...pulumi.InvokeOption) (*LookupContainerRepositoryLifecyclePolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupContainerRepositoryLifecyclePolicyResult
	err := ctx.Invoke("yandex:index/getContainerRepositoryLifecyclePolicy:getContainerRepositoryLifecyclePolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getContainerRepositoryLifecyclePolicy.
type LookupContainerRepositoryLifecyclePolicyArgs struct {
	LifecyclePolicyId *string `pulumi:"lifecyclePolicyId"`
	Name              *string `pulumi:"name"`
	RepositoryId      *string `pulumi:"repositoryId"`
}

// A collection of values returned by getContainerRepositoryLifecyclePolicy.
type LookupContainerRepositoryLifecyclePolicyResult struct {
	CreatedAt   string `pulumi:"createdAt"`
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id                string                                      `pulumi:"id"`
	LifecyclePolicyId string                                      `pulumi:"lifecyclePolicyId"`
	Name              string                                      `pulumi:"name"`
	RepositoryId      string                                      `pulumi:"repositoryId"`
	Rules             []GetContainerRepositoryLifecyclePolicyRule `pulumi:"rules"`
	Status            string                                      `pulumi:"status"`
}

func LookupContainerRepositoryLifecyclePolicyOutput(ctx *pulumi.Context, args LookupContainerRepositoryLifecyclePolicyOutputArgs, opts ...pulumi.InvokeOption) LookupContainerRepositoryLifecyclePolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupContainerRepositoryLifecyclePolicyResult, error) {
			args := v.(LookupContainerRepositoryLifecyclePolicyArgs)
			r, err := LookupContainerRepositoryLifecyclePolicy(ctx, &args, opts...)
			var s LookupContainerRepositoryLifecyclePolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupContainerRepositoryLifecyclePolicyResultOutput)
}

// A collection of arguments for invoking getContainerRepositoryLifecyclePolicy.
type LookupContainerRepositoryLifecyclePolicyOutputArgs struct {
	LifecyclePolicyId pulumi.StringPtrInput `pulumi:"lifecyclePolicyId"`
	Name              pulumi.StringPtrInput `pulumi:"name"`
	RepositoryId      pulumi.StringPtrInput `pulumi:"repositoryId"`
}

func (LookupContainerRepositoryLifecyclePolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContainerRepositoryLifecyclePolicyArgs)(nil)).Elem()
}

// A collection of values returned by getContainerRepositoryLifecyclePolicy.
type LookupContainerRepositoryLifecyclePolicyResultOutput struct{ *pulumi.OutputState }

func (LookupContainerRepositoryLifecyclePolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContainerRepositoryLifecyclePolicyResult)(nil)).Elem()
}

func (o LookupContainerRepositoryLifecyclePolicyResultOutput) ToLookupContainerRepositoryLifecyclePolicyResultOutput() LookupContainerRepositoryLifecyclePolicyResultOutput {
	return o
}

func (o LookupContainerRepositoryLifecyclePolicyResultOutput) ToLookupContainerRepositoryLifecyclePolicyResultOutputWithContext(ctx context.Context) LookupContainerRepositoryLifecyclePolicyResultOutput {
	return o
}

func (o LookupContainerRepositoryLifecyclePolicyResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerRepositoryLifecyclePolicyResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o LookupContainerRepositoryLifecyclePolicyResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerRepositoryLifecyclePolicyResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupContainerRepositoryLifecyclePolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerRepositoryLifecyclePolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupContainerRepositoryLifecyclePolicyResultOutput) LifecyclePolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerRepositoryLifecyclePolicyResult) string { return v.LifecyclePolicyId }).(pulumi.StringOutput)
}

func (o LookupContainerRepositoryLifecyclePolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerRepositoryLifecyclePolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupContainerRepositoryLifecyclePolicyResultOutput) RepositoryId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerRepositoryLifecyclePolicyResult) string { return v.RepositoryId }).(pulumi.StringOutput)
}

func (o LookupContainerRepositoryLifecyclePolicyResultOutput) Rules() GetContainerRepositoryLifecyclePolicyRuleArrayOutput {
	return o.ApplyT(func(v LookupContainerRepositoryLifecyclePolicyResult) []GetContainerRepositoryLifecyclePolicyRule {
		return v.Rules
	}).(GetContainerRepositoryLifecyclePolicyRuleArrayOutput)
}

func (o LookupContainerRepositoryLifecyclePolicyResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerRepositoryLifecyclePolicyResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupContainerRepositoryLifecyclePolicyResultOutput{})
}
