// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"errors"
	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a PostgreSQL database within the Yandex.Cloud. For more information, see
// [the official documentation](https://cloud.yandex.com/docs/managed-postgresql/).
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			fooVpcNetwork, err := yandex.NewVpcNetwork(ctx, "fooVpcNetwork", nil)
//			if err != nil {
//				return err
//			}
//			fooVpcSubnet, err := yandex.NewVpcSubnet(ctx, "fooVpcSubnet", &yandex.VpcSubnetArgs{
//				Zone:      pulumi.String("ru-central1-a"),
//				NetworkId: fooVpcNetwork.ID(),
//				V4CidrBlocks: pulumi.StringArray{
//					pulumi.String("10.5.0.0/24"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			fooMdbPostgresqlCluster, err := yandex.NewMdbPostgresqlCluster(ctx, "fooMdbPostgresqlCluster", &yandex.MdbPostgresqlClusterArgs{
//				Environment: pulumi.String("PRESTABLE"),
//				NetworkId:   fooVpcNetwork.ID(),
//				Config: &yandex.MdbPostgresqlClusterConfigArgs{
//					Version: pulumi.String("15"),
//					Resources: &yandex.MdbPostgresqlClusterConfigResourcesArgs{
//						ResourcePresetId: pulumi.String("s2.micro"),
//						DiskTypeId:       pulumi.String("network-ssd"),
//						DiskSize:         pulumi.Int(16),
//					},
//				},
//				Hosts: yandex.MdbPostgresqlClusterHostArray{
//					&yandex.MdbPostgresqlClusterHostArgs{
//						Zone:     pulumi.String("ru-central1-a"),
//						SubnetId: fooVpcSubnet.ID(),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = yandex.NewMdbPostgresqlDatabase(ctx, "fooMdbPostgresqlDatabase", &yandex.MdbPostgresqlDatabaseArgs{
//				ClusterId: fooMdbPostgresqlCluster.ID(),
//				Owner:     pulumi.Any(yandex_mdb_postgresql_user.Alice.Name),
//				LcCollate: pulumi.String("en_US.UTF-8"),
//				LcType:    pulumi.String("en_US.UTF-8"),
//				Extensions: yandex.MdbPostgresqlDatabaseExtensionArray{
//					&yandex.MdbPostgresqlDatabaseExtensionArgs{
//						Name: pulumi.String("uuid-ossp"),
//					},
//					&yandex.MdbPostgresqlDatabaseExtensionArgs{
//						Name: pulumi.String("xml2"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = yandex.NewMdbPostgresqlUser(ctx, "fooMdbPostgresqlUser", &yandex.MdbPostgresqlUserArgs{
//				ClusterId: fooMdbPostgresqlCluster.ID(),
//				Password:  pulumi.String("password"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// A PostgreSQL database can be imported using the following format:
//
// ```sh
// $ pulumi import yandex:index/mdbPostgresqlDatabase:MdbPostgresqlDatabase foo {{cluster_id}}:{{database_name}}
// ```
type MdbPostgresqlDatabase struct {
	pulumi.CustomResourceState

	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// Inhibits deletion of the database. Can either be `true`, `false` or `unspecified`.
	DeletionProtection pulumi.StringPtrOutput `pulumi:"deletionProtection"`
	// Set of database extensions. The structure is documented below
	Extensions MdbPostgresqlDatabaseExtensionArrayOutput `pulumi:"extensions"`
	// POSIX locale for string sorting order. Forbidden to change in an existing database.
	LcCollate pulumi.StringPtrOutput `pulumi:"lcCollate"`
	// POSIX locale for character classification. Forbidden to change in an existing database.
	LcType pulumi.StringPtrOutput `pulumi:"lcType"`
	// The name of the database.
	Name pulumi.StringOutput `pulumi:"name"`
	// Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
	Owner pulumi.StringOutput `pulumi:"owner"`
	// Name of the template database.
	TemplateDb pulumi.StringPtrOutput `pulumi:"templateDb"`
}

// NewMdbPostgresqlDatabase registers a new resource with the given unique name, arguments, and options.
func NewMdbPostgresqlDatabase(ctx *pulumi.Context,
	name string, args *MdbPostgresqlDatabaseArgs, opts ...pulumi.ResourceOption) (*MdbPostgresqlDatabase, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.Owner == nil {
		return nil, errors.New("invalid value for required argument 'Owner'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MdbPostgresqlDatabase
	err := ctx.RegisterResource("yandex:index/mdbPostgresqlDatabase:MdbPostgresqlDatabase", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMdbPostgresqlDatabase gets an existing MdbPostgresqlDatabase resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMdbPostgresqlDatabase(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MdbPostgresqlDatabaseState, opts ...pulumi.ResourceOption) (*MdbPostgresqlDatabase, error) {
	var resource MdbPostgresqlDatabase
	err := ctx.ReadResource("yandex:index/mdbPostgresqlDatabase:MdbPostgresqlDatabase", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MdbPostgresqlDatabase resources.
type mdbPostgresqlDatabaseState struct {
	ClusterId *string `pulumi:"clusterId"`
	// Inhibits deletion of the database. Can either be `true`, `false` or `unspecified`.
	DeletionProtection *string `pulumi:"deletionProtection"`
	// Set of database extensions. The structure is documented below
	Extensions []MdbPostgresqlDatabaseExtension `pulumi:"extensions"`
	// POSIX locale for string sorting order. Forbidden to change in an existing database.
	LcCollate *string `pulumi:"lcCollate"`
	// POSIX locale for character classification. Forbidden to change in an existing database.
	LcType *string `pulumi:"lcType"`
	// The name of the database.
	Name *string `pulumi:"name"`
	// Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
	Owner *string `pulumi:"owner"`
	// Name of the template database.
	TemplateDb *string `pulumi:"templateDb"`
}

type MdbPostgresqlDatabaseState struct {
	ClusterId pulumi.StringPtrInput
	// Inhibits deletion of the database. Can either be `true`, `false` or `unspecified`.
	DeletionProtection pulumi.StringPtrInput
	// Set of database extensions. The structure is documented below
	Extensions MdbPostgresqlDatabaseExtensionArrayInput
	// POSIX locale for string sorting order. Forbidden to change in an existing database.
	LcCollate pulumi.StringPtrInput
	// POSIX locale for character classification. Forbidden to change in an existing database.
	LcType pulumi.StringPtrInput
	// The name of the database.
	Name pulumi.StringPtrInput
	// Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
	Owner pulumi.StringPtrInput
	// Name of the template database.
	TemplateDb pulumi.StringPtrInput
}

func (MdbPostgresqlDatabaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*mdbPostgresqlDatabaseState)(nil)).Elem()
}

type mdbPostgresqlDatabaseArgs struct {
	ClusterId string `pulumi:"clusterId"`
	// Inhibits deletion of the database. Can either be `true`, `false` or `unspecified`.
	DeletionProtection *string `pulumi:"deletionProtection"`
	// Set of database extensions. The structure is documented below
	Extensions []MdbPostgresqlDatabaseExtension `pulumi:"extensions"`
	// POSIX locale for string sorting order. Forbidden to change in an existing database.
	LcCollate *string `pulumi:"lcCollate"`
	// POSIX locale for character classification. Forbidden to change in an existing database.
	LcType *string `pulumi:"lcType"`
	// The name of the database.
	Name *string `pulumi:"name"`
	// Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
	Owner string `pulumi:"owner"`
	// Name of the template database.
	TemplateDb *string `pulumi:"templateDb"`
}

// The set of arguments for constructing a MdbPostgresqlDatabase resource.
type MdbPostgresqlDatabaseArgs struct {
	ClusterId pulumi.StringInput
	// Inhibits deletion of the database. Can either be `true`, `false` or `unspecified`.
	DeletionProtection pulumi.StringPtrInput
	// Set of database extensions. The structure is documented below
	Extensions MdbPostgresqlDatabaseExtensionArrayInput
	// POSIX locale for string sorting order. Forbidden to change in an existing database.
	LcCollate pulumi.StringPtrInput
	// POSIX locale for character classification. Forbidden to change in an existing database.
	LcType pulumi.StringPtrInput
	// The name of the database.
	Name pulumi.StringPtrInput
	// Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
	Owner pulumi.StringInput
	// Name of the template database.
	TemplateDb pulumi.StringPtrInput
}

func (MdbPostgresqlDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mdbPostgresqlDatabaseArgs)(nil)).Elem()
}

type MdbPostgresqlDatabaseInput interface {
	pulumi.Input

	ToMdbPostgresqlDatabaseOutput() MdbPostgresqlDatabaseOutput
	ToMdbPostgresqlDatabaseOutputWithContext(ctx context.Context) MdbPostgresqlDatabaseOutput
}

func (*MdbPostgresqlDatabase) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbPostgresqlDatabase)(nil)).Elem()
}

func (i *MdbPostgresqlDatabase) ToMdbPostgresqlDatabaseOutput() MdbPostgresqlDatabaseOutput {
	return i.ToMdbPostgresqlDatabaseOutputWithContext(context.Background())
}

func (i *MdbPostgresqlDatabase) ToMdbPostgresqlDatabaseOutputWithContext(ctx context.Context) MdbPostgresqlDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlDatabaseOutput)
}

// MdbPostgresqlDatabaseArrayInput is an input type that accepts MdbPostgresqlDatabaseArray and MdbPostgresqlDatabaseArrayOutput values.
// You can construct a concrete instance of `MdbPostgresqlDatabaseArrayInput` via:
//
//	MdbPostgresqlDatabaseArray{ MdbPostgresqlDatabaseArgs{...} }
type MdbPostgresqlDatabaseArrayInput interface {
	pulumi.Input

	ToMdbPostgresqlDatabaseArrayOutput() MdbPostgresqlDatabaseArrayOutput
	ToMdbPostgresqlDatabaseArrayOutputWithContext(context.Context) MdbPostgresqlDatabaseArrayOutput
}

type MdbPostgresqlDatabaseArray []MdbPostgresqlDatabaseInput

func (MdbPostgresqlDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MdbPostgresqlDatabase)(nil)).Elem()
}

func (i MdbPostgresqlDatabaseArray) ToMdbPostgresqlDatabaseArrayOutput() MdbPostgresqlDatabaseArrayOutput {
	return i.ToMdbPostgresqlDatabaseArrayOutputWithContext(context.Background())
}

func (i MdbPostgresqlDatabaseArray) ToMdbPostgresqlDatabaseArrayOutputWithContext(ctx context.Context) MdbPostgresqlDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlDatabaseArrayOutput)
}

// MdbPostgresqlDatabaseMapInput is an input type that accepts MdbPostgresqlDatabaseMap and MdbPostgresqlDatabaseMapOutput values.
// You can construct a concrete instance of `MdbPostgresqlDatabaseMapInput` via:
//
//	MdbPostgresqlDatabaseMap{ "key": MdbPostgresqlDatabaseArgs{...} }
type MdbPostgresqlDatabaseMapInput interface {
	pulumi.Input

	ToMdbPostgresqlDatabaseMapOutput() MdbPostgresqlDatabaseMapOutput
	ToMdbPostgresqlDatabaseMapOutputWithContext(context.Context) MdbPostgresqlDatabaseMapOutput
}

type MdbPostgresqlDatabaseMap map[string]MdbPostgresqlDatabaseInput

func (MdbPostgresqlDatabaseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MdbPostgresqlDatabase)(nil)).Elem()
}

func (i MdbPostgresqlDatabaseMap) ToMdbPostgresqlDatabaseMapOutput() MdbPostgresqlDatabaseMapOutput {
	return i.ToMdbPostgresqlDatabaseMapOutputWithContext(context.Background())
}

func (i MdbPostgresqlDatabaseMap) ToMdbPostgresqlDatabaseMapOutputWithContext(ctx context.Context) MdbPostgresqlDatabaseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MdbPostgresqlDatabaseMapOutput)
}

type MdbPostgresqlDatabaseOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MdbPostgresqlDatabase)(nil)).Elem()
}

func (o MdbPostgresqlDatabaseOutput) ToMdbPostgresqlDatabaseOutput() MdbPostgresqlDatabaseOutput {
	return o
}

func (o MdbPostgresqlDatabaseOutput) ToMdbPostgresqlDatabaseOutputWithContext(ctx context.Context) MdbPostgresqlDatabaseOutput {
	return o
}

func (o MdbPostgresqlDatabaseOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbPostgresqlDatabase) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// Inhibits deletion of the database. Can either be `true`, `false` or `unspecified`.
func (o MdbPostgresqlDatabaseOutput) DeletionProtection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlDatabase) pulumi.StringPtrOutput { return v.DeletionProtection }).(pulumi.StringPtrOutput)
}

// Set of database extensions. The structure is documented below
func (o MdbPostgresqlDatabaseOutput) Extensions() MdbPostgresqlDatabaseExtensionArrayOutput {
	return o.ApplyT(func(v *MdbPostgresqlDatabase) MdbPostgresqlDatabaseExtensionArrayOutput { return v.Extensions }).(MdbPostgresqlDatabaseExtensionArrayOutput)
}

// POSIX locale for string sorting order. Forbidden to change in an existing database.
func (o MdbPostgresqlDatabaseOutput) LcCollate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlDatabase) pulumi.StringPtrOutput { return v.LcCollate }).(pulumi.StringPtrOutput)
}

// POSIX locale for character classification. Forbidden to change in an existing database.
func (o MdbPostgresqlDatabaseOutput) LcType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlDatabase) pulumi.StringPtrOutput { return v.LcType }).(pulumi.StringPtrOutput)
}

// The name of the database.
func (o MdbPostgresqlDatabaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbPostgresqlDatabase) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Name of the user assigned as the owner of the database. Forbidden to change in an existing database.
func (o MdbPostgresqlDatabaseOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v *MdbPostgresqlDatabase) pulumi.StringOutput { return v.Owner }).(pulumi.StringOutput)
}

// Name of the template database.
func (o MdbPostgresqlDatabaseOutput) TemplateDb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MdbPostgresqlDatabase) pulumi.StringPtrOutput { return v.TemplateDb }).(pulumi.StringPtrOutput)
}

type MdbPostgresqlDatabaseArrayOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MdbPostgresqlDatabase)(nil)).Elem()
}

func (o MdbPostgresqlDatabaseArrayOutput) ToMdbPostgresqlDatabaseArrayOutput() MdbPostgresqlDatabaseArrayOutput {
	return o
}

func (o MdbPostgresqlDatabaseArrayOutput) ToMdbPostgresqlDatabaseArrayOutputWithContext(ctx context.Context) MdbPostgresqlDatabaseArrayOutput {
	return o
}

func (o MdbPostgresqlDatabaseArrayOutput) Index(i pulumi.IntInput) MdbPostgresqlDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MdbPostgresqlDatabase {
		return vs[0].([]*MdbPostgresqlDatabase)[vs[1].(int)]
	}).(MdbPostgresqlDatabaseOutput)
}

type MdbPostgresqlDatabaseMapOutput struct{ *pulumi.OutputState }

func (MdbPostgresqlDatabaseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MdbPostgresqlDatabase)(nil)).Elem()
}

func (o MdbPostgresqlDatabaseMapOutput) ToMdbPostgresqlDatabaseMapOutput() MdbPostgresqlDatabaseMapOutput {
	return o
}

func (o MdbPostgresqlDatabaseMapOutput) ToMdbPostgresqlDatabaseMapOutputWithContext(ctx context.Context) MdbPostgresqlDatabaseMapOutput {
	return o
}

func (o MdbPostgresqlDatabaseMapOutput) MapIndex(k pulumi.StringInput) MdbPostgresqlDatabaseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MdbPostgresqlDatabase {
		return vs[0].(map[string]*MdbPostgresqlDatabase)[vs[1].(string)]
	}).(MdbPostgresqlDatabaseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MdbPostgresqlDatabaseInput)(nil)).Elem(), &MdbPostgresqlDatabase{})
	pulumi.RegisterInputType(reflect.TypeOf((*MdbPostgresqlDatabaseArrayInput)(nil)).Elem(), MdbPostgresqlDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MdbPostgresqlDatabaseMapInput)(nil)).Elem(), MdbPostgresqlDatabaseMap{})
	pulumi.RegisterOutputType(MdbPostgresqlDatabaseOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlDatabaseArrayOutput{})
	pulumi.RegisterOutputType(MdbPostgresqlDatabaseMapOutput{})
}
