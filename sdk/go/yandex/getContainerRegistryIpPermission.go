// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupContainerRegistryIpPermission(ctx *pulumi.Context, args *LookupContainerRegistryIpPermissionArgs, opts ...pulumi.InvokeOption) (*LookupContainerRegistryIpPermissionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupContainerRegistryIpPermissionResult
	err := ctx.Invoke("yandex:index/getContainerRegistryIpPermission:getContainerRegistryIpPermission", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getContainerRegistryIpPermission.
type LookupContainerRegistryIpPermissionArgs struct {
	RegistryId   *string `pulumi:"registryId"`
	RegistryName *string `pulumi:"registryName"`
}

// A collection of values returned by getContainerRegistryIpPermission.
type LookupContainerRegistryIpPermissionResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id           string   `pulumi:"id"`
	Pulls        []string `pulumi:"pulls"`
	Pushes       []string `pulumi:"pushes"`
	RegistryId   string   `pulumi:"registryId"`
	RegistryName string   `pulumi:"registryName"`
}

func LookupContainerRegistryIpPermissionOutput(ctx *pulumi.Context, args LookupContainerRegistryIpPermissionOutputArgs, opts ...pulumi.InvokeOption) LookupContainerRegistryIpPermissionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupContainerRegistryIpPermissionResult, error) {
			args := v.(LookupContainerRegistryIpPermissionArgs)
			r, err := LookupContainerRegistryIpPermission(ctx, &args, opts...)
			var s LookupContainerRegistryIpPermissionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupContainerRegistryIpPermissionResultOutput)
}

// A collection of arguments for invoking getContainerRegistryIpPermission.
type LookupContainerRegistryIpPermissionOutputArgs struct {
	RegistryId   pulumi.StringPtrInput `pulumi:"registryId"`
	RegistryName pulumi.StringPtrInput `pulumi:"registryName"`
}

func (LookupContainerRegistryIpPermissionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContainerRegistryIpPermissionArgs)(nil)).Elem()
}

// A collection of values returned by getContainerRegistryIpPermission.
type LookupContainerRegistryIpPermissionResultOutput struct{ *pulumi.OutputState }

func (LookupContainerRegistryIpPermissionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContainerRegistryIpPermissionResult)(nil)).Elem()
}

func (o LookupContainerRegistryIpPermissionResultOutput) ToLookupContainerRegistryIpPermissionResultOutput() LookupContainerRegistryIpPermissionResultOutput {
	return o
}

func (o LookupContainerRegistryIpPermissionResultOutput) ToLookupContainerRegistryIpPermissionResultOutputWithContext(ctx context.Context) LookupContainerRegistryIpPermissionResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupContainerRegistryIpPermissionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerRegistryIpPermissionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupContainerRegistryIpPermissionResultOutput) Pulls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupContainerRegistryIpPermissionResult) []string { return v.Pulls }).(pulumi.StringArrayOutput)
}

func (o LookupContainerRegistryIpPermissionResultOutput) Pushes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupContainerRegistryIpPermissionResult) []string { return v.Pushes }).(pulumi.StringArrayOutput)
}

func (o LookupContainerRegistryIpPermissionResultOutput) RegistryId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerRegistryIpPermissionResult) string { return v.RegistryId }).(pulumi.StringOutput)
}

func (o LookupContainerRegistryIpPermissionResultOutput) RegistryName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerRegistryIpPermissionResult) string { return v.RegistryName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupContainerRegistryIpPermissionResultOutput{})
}
