// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupMdbKafkaUser(ctx *pulumi.Context, args *LookupMdbKafkaUserArgs, opts ...pulumi.InvokeOption) (*LookupMdbKafkaUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMdbKafkaUserResult
	err := ctx.Invoke("yandex:index/getMdbKafkaUser:getMdbKafkaUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMdbKafkaUser.
type LookupMdbKafkaUserArgs struct {
	ClusterId string `pulumi:"clusterId"`
	Name      string `pulumi:"name"`
}

// A collection of values returned by getMdbKafkaUser.
type LookupMdbKafkaUserResult struct {
	ClusterId string `pulumi:"clusterId"`
	// The provider-assigned unique ID for this managed resource.
	Id          string                      `pulumi:"id"`
	Name        string                      `pulumi:"name"`
	Password    string                      `pulumi:"password"`
	Permissions []GetMdbKafkaUserPermission `pulumi:"permissions"`
}

func LookupMdbKafkaUserOutput(ctx *pulumi.Context, args LookupMdbKafkaUserOutputArgs, opts ...pulumi.InvokeOption) LookupMdbKafkaUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMdbKafkaUserResult, error) {
			args := v.(LookupMdbKafkaUserArgs)
			r, err := LookupMdbKafkaUser(ctx, &args, opts...)
			var s LookupMdbKafkaUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMdbKafkaUserResultOutput)
}

// A collection of arguments for invoking getMdbKafkaUser.
type LookupMdbKafkaUserOutputArgs struct {
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	Name      pulumi.StringInput `pulumi:"name"`
}

func (LookupMdbKafkaUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMdbKafkaUserArgs)(nil)).Elem()
}

// A collection of values returned by getMdbKafkaUser.
type LookupMdbKafkaUserResultOutput struct{ *pulumi.OutputState }

func (LookupMdbKafkaUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMdbKafkaUserResult)(nil)).Elem()
}

func (o LookupMdbKafkaUserResultOutput) ToLookupMdbKafkaUserResultOutput() LookupMdbKafkaUserResultOutput {
	return o
}

func (o LookupMdbKafkaUserResultOutput) ToLookupMdbKafkaUserResultOutputWithContext(ctx context.Context) LookupMdbKafkaUserResultOutput {
	return o
}

func (o LookupMdbKafkaUserResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbKafkaUserResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMdbKafkaUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbKafkaUserResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupMdbKafkaUserResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbKafkaUserResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupMdbKafkaUserResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbKafkaUserResult) string { return v.Password }).(pulumi.StringOutput)
}

func (o LookupMdbKafkaUserResultOutput) Permissions() GetMdbKafkaUserPermissionArrayOutput {
	return o.ApplyT(func(v LookupMdbKafkaUserResult) []GetMdbKafkaUserPermission { return v.Permissions }).(GetMdbKafkaUserPermissionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMdbKafkaUserResultOutput{})
}
