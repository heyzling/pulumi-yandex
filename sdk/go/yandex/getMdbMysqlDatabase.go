// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupMdbMysqlDatabase(ctx *pulumi.Context, args *LookupMdbMysqlDatabaseArgs, opts ...pulumi.InvokeOption) (*LookupMdbMysqlDatabaseResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMdbMysqlDatabaseResult
	err := ctx.Invoke("yandex:index/getMdbMysqlDatabase:getMdbMysqlDatabase", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMdbMysqlDatabase.
type LookupMdbMysqlDatabaseArgs struct {
	ClusterId string `pulumi:"clusterId"`
	Name      string `pulumi:"name"`
}

// A collection of values returned by getMdbMysqlDatabase.
type LookupMdbMysqlDatabaseResult struct {
	ClusterId string `pulumi:"clusterId"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

func LookupMdbMysqlDatabaseOutput(ctx *pulumi.Context, args LookupMdbMysqlDatabaseOutputArgs, opts ...pulumi.InvokeOption) LookupMdbMysqlDatabaseResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMdbMysqlDatabaseResult, error) {
			args := v.(LookupMdbMysqlDatabaseArgs)
			r, err := LookupMdbMysqlDatabase(ctx, &args, opts...)
			var s LookupMdbMysqlDatabaseResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMdbMysqlDatabaseResultOutput)
}

// A collection of arguments for invoking getMdbMysqlDatabase.
type LookupMdbMysqlDatabaseOutputArgs struct {
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	Name      pulumi.StringInput `pulumi:"name"`
}

func (LookupMdbMysqlDatabaseOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMdbMysqlDatabaseArgs)(nil)).Elem()
}

// A collection of values returned by getMdbMysqlDatabase.
type LookupMdbMysqlDatabaseResultOutput struct{ *pulumi.OutputState }

func (LookupMdbMysqlDatabaseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMdbMysqlDatabaseResult)(nil)).Elem()
}

func (o LookupMdbMysqlDatabaseResultOutput) ToLookupMdbMysqlDatabaseResultOutput() LookupMdbMysqlDatabaseResultOutput {
	return o
}

func (o LookupMdbMysqlDatabaseResultOutput) ToLookupMdbMysqlDatabaseResultOutputWithContext(ctx context.Context) LookupMdbMysqlDatabaseResultOutput {
	return o
}

func (o LookupMdbMysqlDatabaseResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbMysqlDatabaseResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMdbMysqlDatabaseResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbMysqlDatabaseResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupMdbMysqlDatabaseResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbMysqlDatabaseResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMdbMysqlDatabaseResultOutput{})
}
