// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupMdbMysqlUser(ctx *pulumi.Context, args *LookupMdbMysqlUserArgs, opts ...pulumi.InvokeOption) (*LookupMdbMysqlUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMdbMysqlUserResult
	err := ctx.Invoke("yandex:index/getMdbMysqlUser:getMdbMysqlUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMdbMysqlUser.
type LookupMdbMysqlUserArgs struct {
	ClusterId   string                      `pulumi:"clusterId"`
	Name        string                      `pulumi:"name"`
	Permissions []GetMdbMysqlUserPermission `pulumi:"permissions"`
}

// A collection of values returned by getMdbMysqlUser.
type LookupMdbMysqlUserResult struct {
	AuthenticationPlugin string                           `pulumi:"authenticationPlugin"`
	ClusterId            string                           `pulumi:"clusterId"`
	ConnectionLimits     []GetMdbMysqlUserConnectionLimit `pulumi:"connectionLimits"`
	GlobalPermissions    []string                         `pulumi:"globalPermissions"`
	// The provider-assigned unique ID for this managed resource.
	Id          string                      `pulumi:"id"`
	Name        string                      `pulumi:"name"`
	Permissions []GetMdbMysqlUserPermission `pulumi:"permissions"`
}

func LookupMdbMysqlUserOutput(ctx *pulumi.Context, args LookupMdbMysqlUserOutputArgs, opts ...pulumi.InvokeOption) LookupMdbMysqlUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMdbMysqlUserResult, error) {
			args := v.(LookupMdbMysqlUserArgs)
			r, err := LookupMdbMysqlUser(ctx, &args, opts...)
			var s LookupMdbMysqlUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMdbMysqlUserResultOutput)
}

// A collection of arguments for invoking getMdbMysqlUser.
type LookupMdbMysqlUserOutputArgs struct {
	ClusterId   pulumi.StringInput                  `pulumi:"clusterId"`
	Name        pulumi.StringInput                  `pulumi:"name"`
	Permissions GetMdbMysqlUserPermissionArrayInput `pulumi:"permissions"`
}

func (LookupMdbMysqlUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMdbMysqlUserArgs)(nil)).Elem()
}

// A collection of values returned by getMdbMysqlUser.
type LookupMdbMysqlUserResultOutput struct{ *pulumi.OutputState }

func (LookupMdbMysqlUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMdbMysqlUserResult)(nil)).Elem()
}

func (o LookupMdbMysqlUserResultOutput) ToLookupMdbMysqlUserResultOutput() LookupMdbMysqlUserResultOutput {
	return o
}

func (o LookupMdbMysqlUserResultOutput) ToLookupMdbMysqlUserResultOutputWithContext(ctx context.Context) LookupMdbMysqlUserResultOutput {
	return o
}

func (o LookupMdbMysqlUserResultOutput) AuthenticationPlugin() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbMysqlUserResult) string { return v.AuthenticationPlugin }).(pulumi.StringOutput)
}

func (o LookupMdbMysqlUserResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbMysqlUserResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o LookupMdbMysqlUserResultOutput) ConnectionLimits() GetMdbMysqlUserConnectionLimitArrayOutput {
	return o.ApplyT(func(v LookupMdbMysqlUserResult) []GetMdbMysqlUserConnectionLimit { return v.ConnectionLimits }).(GetMdbMysqlUserConnectionLimitArrayOutput)
}

func (o LookupMdbMysqlUserResultOutput) GlobalPermissions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMdbMysqlUserResult) []string { return v.GlobalPermissions }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMdbMysqlUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbMysqlUserResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupMdbMysqlUserResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbMysqlUserResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupMdbMysqlUserResultOutput) Permissions() GetMdbMysqlUserPermissionArrayOutput {
	return o.ApplyT(func(v LookupMdbMysqlUserResult) []GetMdbMysqlUserPermission { return v.Permissions }).(GetMdbMysqlUserPermissionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMdbMysqlUserResultOutput{})
}
