// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupContainerRepository(ctx *pulumi.Context, args *LookupContainerRepositoryArgs, opts ...pulumi.InvokeOption) (*LookupContainerRepositoryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupContainerRepositoryResult
	err := ctx.Invoke("yandex:index/getContainerRepository:getContainerRepository", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getContainerRepository.
type LookupContainerRepositoryArgs struct {
	Name         *string `pulumi:"name"`
	RepositoryId *string `pulumi:"repositoryId"`
}

// A collection of values returned by getContainerRepository.
type LookupContainerRepositoryResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id           string `pulumi:"id"`
	Name         string `pulumi:"name"`
	RepositoryId string `pulumi:"repositoryId"`
}

func LookupContainerRepositoryOutput(ctx *pulumi.Context, args LookupContainerRepositoryOutputArgs, opts ...pulumi.InvokeOption) LookupContainerRepositoryResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupContainerRepositoryResult, error) {
			args := v.(LookupContainerRepositoryArgs)
			r, err := LookupContainerRepository(ctx, &args, opts...)
			var s LookupContainerRepositoryResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupContainerRepositoryResultOutput)
}

// A collection of arguments for invoking getContainerRepository.
type LookupContainerRepositoryOutputArgs struct {
	Name         pulumi.StringPtrInput `pulumi:"name"`
	RepositoryId pulumi.StringPtrInput `pulumi:"repositoryId"`
}

func (LookupContainerRepositoryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContainerRepositoryArgs)(nil)).Elem()
}

// A collection of values returned by getContainerRepository.
type LookupContainerRepositoryResultOutput struct{ *pulumi.OutputState }

func (LookupContainerRepositoryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContainerRepositoryResult)(nil)).Elem()
}

func (o LookupContainerRepositoryResultOutput) ToLookupContainerRepositoryResultOutput() LookupContainerRepositoryResultOutput {
	return o
}

func (o LookupContainerRepositoryResultOutput) ToLookupContainerRepositoryResultOutputWithContext(ctx context.Context) LookupContainerRepositoryResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupContainerRepositoryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerRepositoryResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupContainerRepositoryResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerRepositoryResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupContainerRepositoryResultOutput) RepositoryId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerRepositoryResult) string { return v.RepositoryId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupContainerRepositoryResultOutput{})
}
