// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"errors"
	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type YdbTableChangefeed struct {
	pulumi.CustomResourceState

	ConnectionString  pulumi.StringOutput                   `pulumi:"connectionString"`
	Consumers         YdbTableChangefeedConsumerArrayOutput `pulumi:"consumers"`
	Format            pulumi.StringOutput                   `pulumi:"format"`
	Mode              pulumi.StringOutput                   `pulumi:"mode"`
	Name              pulumi.StringOutput                   `pulumi:"name"`
	RetentionPeriod   pulumi.StringPtrOutput                `pulumi:"retentionPeriod"`
	TableId           pulumi.StringOutput                   `pulumi:"tableId"`
	TablePath         pulumi.StringOutput                   `pulumi:"tablePath"`
	VirtualTimestamps pulumi.BoolPtrOutput                  `pulumi:"virtualTimestamps"`
}

// NewYdbTableChangefeed registers a new resource with the given unique name, arguments, and options.
func NewYdbTableChangefeed(ctx *pulumi.Context,
	name string, args *YdbTableChangefeedArgs, opts ...pulumi.ResourceOption) (*YdbTableChangefeed, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Format == nil {
		return nil, errors.New("invalid value for required argument 'Format'")
	}
	if args.Mode == nil {
		return nil, errors.New("invalid value for required argument 'Mode'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource YdbTableChangefeed
	err := ctx.RegisterResource("yandex:index/ydbTableChangefeed:YdbTableChangefeed", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetYdbTableChangefeed gets an existing YdbTableChangefeed resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetYdbTableChangefeed(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *YdbTableChangefeedState, opts ...pulumi.ResourceOption) (*YdbTableChangefeed, error) {
	var resource YdbTableChangefeed
	err := ctx.ReadResource("yandex:index/ydbTableChangefeed:YdbTableChangefeed", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering YdbTableChangefeed resources.
type ydbTableChangefeedState struct {
	ConnectionString  *string                      `pulumi:"connectionString"`
	Consumers         []YdbTableChangefeedConsumer `pulumi:"consumers"`
	Format            *string                      `pulumi:"format"`
	Mode              *string                      `pulumi:"mode"`
	Name              *string                      `pulumi:"name"`
	RetentionPeriod   *string                      `pulumi:"retentionPeriod"`
	TableId           *string                      `pulumi:"tableId"`
	TablePath         *string                      `pulumi:"tablePath"`
	VirtualTimestamps *bool                        `pulumi:"virtualTimestamps"`
}

type YdbTableChangefeedState struct {
	ConnectionString  pulumi.StringPtrInput
	Consumers         YdbTableChangefeedConsumerArrayInput
	Format            pulumi.StringPtrInput
	Mode              pulumi.StringPtrInput
	Name              pulumi.StringPtrInput
	RetentionPeriod   pulumi.StringPtrInput
	TableId           pulumi.StringPtrInput
	TablePath         pulumi.StringPtrInput
	VirtualTimestamps pulumi.BoolPtrInput
}

func (YdbTableChangefeedState) ElementType() reflect.Type {
	return reflect.TypeOf((*ydbTableChangefeedState)(nil)).Elem()
}

type ydbTableChangefeedArgs struct {
	ConnectionString  *string                      `pulumi:"connectionString"`
	Consumers         []YdbTableChangefeedConsumer `pulumi:"consumers"`
	Format            string                       `pulumi:"format"`
	Mode              string                       `pulumi:"mode"`
	Name              *string                      `pulumi:"name"`
	RetentionPeriod   *string                      `pulumi:"retentionPeriod"`
	TableId           *string                      `pulumi:"tableId"`
	TablePath         *string                      `pulumi:"tablePath"`
	VirtualTimestamps *bool                        `pulumi:"virtualTimestamps"`
}

// The set of arguments for constructing a YdbTableChangefeed resource.
type YdbTableChangefeedArgs struct {
	ConnectionString  pulumi.StringPtrInput
	Consumers         YdbTableChangefeedConsumerArrayInput
	Format            pulumi.StringInput
	Mode              pulumi.StringInput
	Name              pulumi.StringPtrInput
	RetentionPeriod   pulumi.StringPtrInput
	TableId           pulumi.StringPtrInput
	TablePath         pulumi.StringPtrInput
	VirtualTimestamps pulumi.BoolPtrInput
}

func (YdbTableChangefeedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ydbTableChangefeedArgs)(nil)).Elem()
}

type YdbTableChangefeedInput interface {
	pulumi.Input

	ToYdbTableChangefeedOutput() YdbTableChangefeedOutput
	ToYdbTableChangefeedOutputWithContext(ctx context.Context) YdbTableChangefeedOutput
}

func (*YdbTableChangefeed) ElementType() reflect.Type {
	return reflect.TypeOf((**YdbTableChangefeed)(nil)).Elem()
}

func (i *YdbTableChangefeed) ToYdbTableChangefeedOutput() YdbTableChangefeedOutput {
	return i.ToYdbTableChangefeedOutputWithContext(context.Background())
}

func (i *YdbTableChangefeed) ToYdbTableChangefeedOutputWithContext(ctx context.Context) YdbTableChangefeedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YdbTableChangefeedOutput)
}

// YdbTableChangefeedArrayInput is an input type that accepts YdbTableChangefeedArray and YdbTableChangefeedArrayOutput values.
// You can construct a concrete instance of `YdbTableChangefeedArrayInput` via:
//
//	YdbTableChangefeedArray{ YdbTableChangefeedArgs{...} }
type YdbTableChangefeedArrayInput interface {
	pulumi.Input

	ToYdbTableChangefeedArrayOutput() YdbTableChangefeedArrayOutput
	ToYdbTableChangefeedArrayOutputWithContext(context.Context) YdbTableChangefeedArrayOutput
}

type YdbTableChangefeedArray []YdbTableChangefeedInput

func (YdbTableChangefeedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*YdbTableChangefeed)(nil)).Elem()
}

func (i YdbTableChangefeedArray) ToYdbTableChangefeedArrayOutput() YdbTableChangefeedArrayOutput {
	return i.ToYdbTableChangefeedArrayOutputWithContext(context.Background())
}

func (i YdbTableChangefeedArray) ToYdbTableChangefeedArrayOutputWithContext(ctx context.Context) YdbTableChangefeedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YdbTableChangefeedArrayOutput)
}

// YdbTableChangefeedMapInput is an input type that accepts YdbTableChangefeedMap and YdbTableChangefeedMapOutput values.
// You can construct a concrete instance of `YdbTableChangefeedMapInput` via:
//
//	YdbTableChangefeedMap{ "key": YdbTableChangefeedArgs{...} }
type YdbTableChangefeedMapInput interface {
	pulumi.Input

	ToYdbTableChangefeedMapOutput() YdbTableChangefeedMapOutput
	ToYdbTableChangefeedMapOutputWithContext(context.Context) YdbTableChangefeedMapOutput
}

type YdbTableChangefeedMap map[string]YdbTableChangefeedInput

func (YdbTableChangefeedMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*YdbTableChangefeed)(nil)).Elem()
}

func (i YdbTableChangefeedMap) ToYdbTableChangefeedMapOutput() YdbTableChangefeedMapOutput {
	return i.ToYdbTableChangefeedMapOutputWithContext(context.Background())
}

func (i YdbTableChangefeedMap) ToYdbTableChangefeedMapOutputWithContext(ctx context.Context) YdbTableChangefeedMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YdbTableChangefeedMapOutput)
}

type YdbTableChangefeedOutput struct{ *pulumi.OutputState }

func (YdbTableChangefeedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**YdbTableChangefeed)(nil)).Elem()
}

func (o YdbTableChangefeedOutput) ToYdbTableChangefeedOutput() YdbTableChangefeedOutput {
	return o
}

func (o YdbTableChangefeedOutput) ToYdbTableChangefeedOutputWithContext(ctx context.Context) YdbTableChangefeedOutput {
	return o
}

func (o YdbTableChangefeedOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v *YdbTableChangefeed) pulumi.StringOutput { return v.ConnectionString }).(pulumi.StringOutput)
}

func (o YdbTableChangefeedOutput) Consumers() YdbTableChangefeedConsumerArrayOutput {
	return o.ApplyT(func(v *YdbTableChangefeed) YdbTableChangefeedConsumerArrayOutput { return v.Consumers }).(YdbTableChangefeedConsumerArrayOutput)
}

func (o YdbTableChangefeedOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v *YdbTableChangefeed) pulumi.StringOutput { return v.Format }).(pulumi.StringOutput)
}

func (o YdbTableChangefeedOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v *YdbTableChangefeed) pulumi.StringOutput { return v.Mode }).(pulumi.StringOutput)
}

func (o YdbTableChangefeedOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *YdbTableChangefeed) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o YdbTableChangefeedOutput) RetentionPeriod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *YdbTableChangefeed) pulumi.StringPtrOutput { return v.RetentionPeriod }).(pulumi.StringPtrOutput)
}

func (o YdbTableChangefeedOutput) TableId() pulumi.StringOutput {
	return o.ApplyT(func(v *YdbTableChangefeed) pulumi.StringOutput { return v.TableId }).(pulumi.StringOutput)
}

func (o YdbTableChangefeedOutput) TablePath() pulumi.StringOutput {
	return o.ApplyT(func(v *YdbTableChangefeed) pulumi.StringOutput { return v.TablePath }).(pulumi.StringOutput)
}

func (o YdbTableChangefeedOutput) VirtualTimestamps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *YdbTableChangefeed) pulumi.BoolPtrOutput { return v.VirtualTimestamps }).(pulumi.BoolPtrOutput)
}

type YdbTableChangefeedArrayOutput struct{ *pulumi.OutputState }

func (YdbTableChangefeedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*YdbTableChangefeed)(nil)).Elem()
}

func (o YdbTableChangefeedArrayOutput) ToYdbTableChangefeedArrayOutput() YdbTableChangefeedArrayOutput {
	return o
}

func (o YdbTableChangefeedArrayOutput) ToYdbTableChangefeedArrayOutputWithContext(ctx context.Context) YdbTableChangefeedArrayOutput {
	return o
}

func (o YdbTableChangefeedArrayOutput) Index(i pulumi.IntInput) YdbTableChangefeedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *YdbTableChangefeed {
		return vs[0].([]*YdbTableChangefeed)[vs[1].(int)]
	}).(YdbTableChangefeedOutput)
}

type YdbTableChangefeedMapOutput struct{ *pulumi.OutputState }

func (YdbTableChangefeedMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*YdbTableChangefeed)(nil)).Elem()
}

func (o YdbTableChangefeedMapOutput) ToYdbTableChangefeedMapOutput() YdbTableChangefeedMapOutput {
	return o
}

func (o YdbTableChangefeedMapOutput) ToYdbTableChangefeedMapOutputWithContext(ctx context.Context) YdbTableChangefeedMapOutput {
	return o
}

func (o YdbTableChangefeedMapOutput) MapIndex(k pulumi.StringInput) YdbTableChangefeedOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *YdbTableChangefeed {
		return vs[0].(map[string]*YdbTableChangefeed)[vs[1].(string)]
	}).(YdbTableChangefeedOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*YdbTableChangefeedInput)(nil)).Elem(), &YdbTableChangefeed{})
	pulumi.RegisterInputType(reflect.TypeOf((*YdbTableChangefeedArrayInput)(nil)).Elem(), YdbTableChangefeedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*YdbTableChangefeedMapInput)(nil)).Elem(), YdbTableChangefeedMap{})
	pulumi.RegisterOutputType(YdbTableChangefeedOutput{})
	pulumi.RegisterOutputType(YdbTableChangefeedArrayOutput{})
	pulumi.RegisterOutputType(YdbTableChangefeedMapOutput{})
}
