// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"errors"
	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := yandex.NewOrganizationmanagerSamlFederationUserAccount(ctx, "account", &yandex.OrganizationmanagerSamlFederationUserAccountArgs{
//				FederationId: pulumi.String("some_federation_id"),
//				NameId:       pulumi.String("example@example.org"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// A Yandex SAML Federation user account can be imported using the `id` of the resource, e.g.:
//
// ```sh
// $ pulumi import yandex:index/organizationmanagerSamlFederationUserAccount:OrganizationmanagerSamlFederationUserAccount account "user_id"
// ```
type OrganizationmanagerSamlFederationUserAccount struct {
	pulumi.CustomResourceState

	// ID of a SAML Federation.
	FederationId pulumi.StringOutput `pulumi:"federationId"`
	// Name ID of the SAML federated user.
	// *
	NameId pulumi.StringOutput `pulumi:"nameId"`
}

// NewOrganizationmanagerSamlFederationUserAccount registers a new resource with the given unique name, arguments, and options.
func NewOrganizationmanagerSamlFederationUserAccount(ctx *pulumi.Context,
	name string, args *OrganizationmanagerSamlFederationUserAccountArgs, opts ...pulumi.ResourceOption) (*OrganizationmanagerSamlFederationUserAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FederationId == nil {
		return nil, errors.New("invalid value for required argument 'FederationId'")
	}
	if args.NameId == nil {
		return nil, errors.New("invalid value for required argument 'NameId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OrganizationmanagerSamlFederationUserAccount
	err := ctx.RegisterResource("yandex:index/organizationmanagerSamlFederationUserAccount:OrganizationmanagerSamlFederationUserAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationmanagerSamlFederationUserAccount gets an existing OrganizationmanagerSamlFederationUserAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationmanagerSamlFederationUserAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationmanagerSamlFederationUserAccountState, opts ...pulumi.ResourceOption) (*OrganizationmanagerSamlFederationUserAccount, error) {
	var resource OrganizationmanagerSamlFederationUserAccount
	err := ctx.ReadResource("yandex:index/organizationmanagerSamlFederationUserAccount:OrganizationmanagerSamlFederationUserAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationmanagerSamlFederationUserAccount resources.
type organizationmanagerSamlFederationUserAccountState struct {
	// ID of a SAML Federation.
	FederationId *string `pulumi:"federationId"`
	// Name ID of the SAML federated user.
	// *
	NameId *string `pulumi:"nameId"`
}

type OrganizationmanagerSamlFederationUserAccountState struct {
	// ID of a SAML Federation.
	FederationId pulumi.StringPtrInput
	// Name ID of the SAML federated user.
	// *
	NameId pulumi.StringPtrInput
}

func (OrganizationmanagerSamlFederationUserAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationmanagerSamlFederationUserAccountState)(nil)).Elem()
}

type organizationmanagerSamlFederationUserAccountArgs struct {
	// ID of a SAML Federation.
	FederationId string `pulumi:"federationId"`
	// Name ID of the SAML federated user.
	// *
	NameId string `pulumi:"nameId"`
}

// The set of arguments for constructing a OrganizationmanagerSamlFederationUserAccount resource.
type OrganizationmanagerSamlFederationUserAccountArgs struct {
	// ID of a SAML Federation.
	FederationId pulumi.StringInput
	// Name ID of the SAML federated user.
	// *
	NameId pulumi.StringInput
}

func (OrganizationmanagerSamlFederationUserAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationmanagerSamlFederationUserAccountArgs)(nil)).Elem()
}

type OrganizationmanagerSamlFederationUserAccountInput interface {
	pulumi.Input

	ToOrganizationmanagerSamlFederationUserAccountOutput() OrganizationmanagerSamlFederationUserAccountOutput
	ToOrganizationmanagerSamlFederationUserAccountOutputWithContext(ctx context.Context) OrganizationmanagerSamlFederationUserAccountOutput
}

func (*OrganizationmanagerSamlFederationUserAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationmanagerSamlFederationUserAccount)(nil)).Elem()
}

func (i *OrganizationmanagerSamlFederationUserAccount) ToOrganizationmanagerSamlFederationUserAccountOutput() OrganizationmanagerSamlFederationUserAccountOutput {
	return i.ToOrganizationmanagerSamlFederationUserAccountOutputWithContext(context.Background())
}

func (i *OrganizationmanagerSamlFederationUserAccount) ToOrganizationmanagerSamlFederationUserAccountOutputWithContext(ctx context.Context) OrganizationmanagerSamlFederationUserAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationmanagerSamlFederationUserAccountOutput)
}

// OrganizationmanagerSamlFederationUserAccountArrayInput is an input type that accepts OrganizationmanagerSamlFederationUserAccountArray and OrganizationmanagerSamlFederationUserAccountArrayOutput values.
// You can construct a concrete instance of `OrganizationmanagerSamlFederationUserAccountArrayInput` via:
//
//	OrganizationmanagerSamlFederationUserAccountArray{ OrganizationmanagerSamlFederationUserAccountArgs{...} }
type OrganizationmanagerSamlFederationUserAccountArrayInput interface {
	pulumi.Input

	ToOrganizationmanagerSamlFederationUserAccountArrayOutput() OrganizationmanagerSamlFederationUserAccountArrayOutput
	ToOrganizationmanagerSamlFederationUserAccountArrayOutputWithContext(context.Context) OrganizationmanagerSamlFederationUserAccountArrayOutput
}

type OrganizationmanagerSamlFederationUserAccountArray []OrganizationmanagerSamlFederationUserAccountInput

func (OrganizationmanagerSamlFederationUserAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationmanagerSamlFederationUserAccount)(nil)).Elem()
}

func (i OrganizationmanagerSamlFederationUserAccountArray) ToOrganizationmanagerSamlFederationUserAccountArrayOutput() OrganizationmanagerSamlFederationUserAccountArrayOutput {
	return i.ToOrganizationmanagerSamlFederationUserAccountArrayOutputWithContext(context.Background())
}

func (i OrganizationmanagerSamlFederationUserAccountArray) ToOrganizationmanagerSamlFederationUserAccountArrayOutputWithContext(ctx context.Context) OrganizationmanagerSamlFederationUserAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationmanagerSamlFederationUserAccountArrayOutput)
}

// OrganizationmanagerSamlFederationUserAccountMapInput is an input type that accepts OrganizationmanagerSamlFederationUserAccountMap and OrganizationmanagerSamlFederationUserAccountMapOutput values.
// You can construct a concrete instance of `OrganizationmanagerSamlFederationUserAccountMapInput` via:
//
//	OrganizationmanagerSamlFederationUserAccountMap{ "key": OrganizationmanagerSamlFederationUserAccountArgs{...} }
type OrganizationmanagerSamlFederationUserAccountMapInput interface {
	pulumi.Input

	ToOrganizationmanagerSamlFederationUserAccountMapOutput() OrganizationmanagerSamlFederationUserAccountMapOutput
	ToOrganizationmanagerSamlFederationUserAccountMapOutputWithContext(context.Context) OrganizationmanagerSamlFederationUserAccountMapOutput
}

type OrganizationmanagerSamlFederationUserAccountMap map[string]OrganizationmanagerSamlFederationUserAccountInput

func (OrganizationmanagerSamlFederationUserAccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationmanagerSamlFederationUserAccount)(nil)).Elem()
}

func (i OrganizationmanagerSamlFederationUserAccountMap) ToOrganizationmanagerSamlFederationUserAccountMapOutput() OrganizationmanagerSamlFederationUserAccountMapOutput {
	return i.ToOrganizationmanagerSamlFederationUserAccountMapOutputWithContext(context.Background())
}

func (i OrganizationmanagerSamlFederationUserAccountMap) ToOrganizationmanagerSamlFederationUserAccountMapOutputWithContext(ctx context.Context) OrganizationmanagerSamlFederationUserAccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationmanagerSamlFederationUserAccountMapOutput)
}

type OrganizationmanagerSamlFederationUserAccountOutput struct{ *pulumi.OutputState }

func (OrganizationmanagerSamlFederationUserAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationmanagerSamlFederationUserAccount)(nil)).Elem()
}

func (o OrganizationmanagerSamlFederationUserAccountOutput) ToOrganizationmanagerSamlFederationUserAccountOutput() OrganizationmanagerSamlFederationUserAccountOutput {
	return o
}

func (o OrganizationmanagerSamlFederationUserAccountOutput) ToOrganizationmanagerSamlFederationUserAccountOutputWithContext(ctx context.Context) OrganizationmanagerSamlFederationUserAccountOutput {
	return o
}

// ID of a SAML Federation.
func (o OrganizationmanagerSamlFederationUserAccountOutput) FederationId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationmanagerSamlFederationUserAccount) pulumi.StringOutput { return v.FederationId }).(pulumi.StringOutput)
}

// Name ID of the SAML federated user.
// *
func (o OrganizationmanagerSamlFederationUserAccountOutput) NameId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationmanagerSamlFederationUserAccount) pulumi.StringOutput { return v.NameId }).(pulumi.StringOutput)
}

type OrganizationmanagerSamlFederationUserAccountArrayOutput struct{ *pulumi.OutputState }

func (OrganizationmanagerSamlFederationUserAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationmanagerSamlFederationUserAccount)(nil)).Elem()
}

func (o OrganizationmanagerSamlFederationUserAccountArrayOutput) ToOrganizationmanagerSamlFederationUserAccountArrayOutput() OrganizationmanagerSamlFederationUserAccountArrayOutput {
	return o
}

func (o OrganizationmanagerSamlFederationUserAccountArrayOutput) ToOrganizationmanagerSamlFederationUserAccountArrayOutputWithContext(ctx context.Context) OrganizationmanagerSamlFederationUserAccountArrayOutput {
	return o
}

func (o OrganizationmanagerSamlFederationUserAccountArrayOutput) Index(i pulumi.IntInput) OrganizationmanagerSamlFederationUserAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OrganizationmanagerSamlFederationUserAccount {
		return vs[0].([]*OrganizationmanagerSamlFederationUserAccount)[vs[1].(int)]
	}).(OrganizationmanagerSamlFederationUserAccountOutput)
}

type OrganizationmanagerSamlFederationUserAccountMapOutput struct{ *pulumi.OutputState }

func (OrganizationmanagerSamlFederationUserAccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationmanagerSamlFederationUserAccount)(nil)).Elem()
}

func (o OrganizationmanagerSamlFederationUserAccountMapOutput) ToOrganizationmanagerSamlFederationUserAccountMapOutput() OrganizationmanagerSamlFederationUserAccountMapOutput {
	return o
}

func (o OrganizationmanagerSamlFederationUserAccountMapOutput) ToOrganizationmanagerSamlFederationUserAccountMapOutputWithContext(ctx context.Context) OrganizationmanagerSamlFederationUserAccountMapOutput {
	return o
}

func (o OrganizationmanagerSamlFederationUserAccountMapOutput) MapIndex(k pulumi.StringInput) OrganizationmanagerSamlFederationUserAccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OrganizationmanagerSamlFederationUserAccount {
		return vs[0].(map[string]*OrganizationmanagerSamlFederationUserAccount)[vs[1].(string)]
	}).(OrganizationmanagerSamlFederationUserAccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationmanagerSamlFederationUserAccountInput)(nil)).Elem(), &OrganizationmanagerSamlFederationUserAccount{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationmanagerSamlFederationUserAccountArrayInput)(nil)).Elem(), OrganizationmanagerSamlFederationUserAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationmanagerSamlFederationUserAccountMapInput)(nil)).Elem(), OrganizationmanagerSamlFederationUserAccountMap{})
	pulumi.RegisterOutputType(OrganizationmanagerSamlFederationUserAccountOutput{})
	pulumi.RegisterOutputType(OrganizationmanagerSamlFederationUserAccountArrayOutput{})
	pulumi.RegisterOutputType(OrganizationmanagerSamlFederationUserAccountMapOutput{})
}
