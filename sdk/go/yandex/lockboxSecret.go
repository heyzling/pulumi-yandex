// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Yandex Cloud Lockbox secret resource. For more information, see
// [the official documentation](https://cloud.yandex.com/en/docs/lockbox/).
//
// ## Example Usage
//
// Use `LockboxSecretVersion` to add entries to the secret.
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := yandex.NewLockboxSecret(ctx, "mySecret", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
type LockboxSecret struct {
	pulumi.CustomResourceState

	// The Yandex Cloud Lockbox secret creation timestamp.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Whether the Yandex Cloud Lockbox secret is protected from deletion.
	DeletionProtection pulumi.BoolPtrOutput `pulumi:"deletionProtection"`
	// A description for the Yandex Cloud Lockbox secret.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// ID of the folder that the Yandex Cloud Lockbox secret belongs to.
	// It will be deduced from provider configuration if not set explicitly.
	FolderId pulumi.StringOutput `pulumi:"folderId"`
	// The KMS key used to encrypt the Yandex Cloud Lockbox secret.
	KmsKeyId pulumi.StringPtrOutput `pulumi:"kmsKeyId"`
	// A set of key/value label pairs to assign to the Yandex Cloud Lockbox secret.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Name for the Yandex Cloud Lockbox secret.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Yandex Cloud Lockbox secret status.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewLockboxSecret registers a new resource with the given unique name, arguments, and options.
func NewLockboxSecret(ctx *pulumi.Context,
	name string, args *LockboxSecretArgs, opts ...pulumi.ResourceOption) (*LockboxSecret, error) {
	if args == nil {
		args = &LockboxSecretArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LockboxSecret
	err := ctx.RegisterResource("yandex:index/lockboxSecret:LockboxSecret", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLockboxSecret gets an existing LockboxSecret resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLockboxSecret(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LockboxSecretState, opts ...pulumi.ResourceOption) (*LockboxSecret, error) {
	var resource LockboxSecret
	err := ctx.ReadResource("yandex:index/lockboxSecret:LockboxSecret", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LockboxSecret resources.
type lockboxSecretState struct {
	// The Yandex Cloud Lockbox secret creation timestamp.
	CreatedAt *string `pulumi:"createdAt"`
	// Whether the Yandex Cloud Lockbox secret is protected from deletion.
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// A description for the Yandex Cloud Lockbox secret.
	Description *string `pulumi:"description"`
	// ID of the folder that the Yandex Cloud Lockbox secret belongs to.
	// It will be deduced from provider configuration if not set explicitly.
	FolderId *string `pulumi:"folderId"`
	// The KMS key used to encrypt the Yandex Cloud Lockbox secret.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// A set of key/value label pairs to assign to the Yandex Cloud Lockbox secret.
	Labels map[string]string `pulumi:"labels"`
	// Name for the Yandex Cloud Lockbox secret.
	Name *string `pulumi:"name"`
	// The Yandex Cloud Lockbox secret status.
	Status *string `pulumi:"status"`
}

type LockboxSecretState struct {
	// The Yandex Cloud Lockbox secret creation timestamp.
	CreatedAt pulumi.StringPtrInput
	// Whether the Yandex Cloud Lockbox secret is protected from deletion.
	DeletionProtection pulumi.BoolPtrInput
	// A description for the Yandex Cloud Lockbox secret.
	Description pulumi.StringPtrInput
	// ID of the folder that the Yandex Cloud Lockbox secret belongs to.
	// It will be deduced from provider configuration if not set explicitly.
	FolderId pulumi.StringPtrInput
	// The KMS key used to encrypt the Yandex Cloud Lockbox secret.
	KmsKeyId pulumi.StringPtrInput
	// A set of key/value label pairs to assign to the Yandex Cloud Lockbox secret.
	Labels pulumi.StringMapInput
	// Name for the Yandex Cloud Lockbox secret.
	Name pulumi.StringPtrInput
	// The Yandex Cloud Lockbox secret status.
	Status pulumi.StringPtrInput
}

func (LockboxSecretState) ElementType() reflect.Type {
	return reflect.TypeOf((*lockboxSecretState)(nil)).Elem()
}

type lockboxSecretArgs struct {
	// Whether the Yandex Cloud Lockbox secret is protected from deletion.
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// A description for the Yandex Cloud Lockbox secret.
	Description *string `pulumi:"description"`
	// ID of the folder that the Yandex Cloud Lockbox secret belongs to.
	// It will be deduced from provider configuration if not set explicitly.
	FolderId *string `pulumi:"folderId"`
	// The KMS key used to encrypt the Yandex Cloud Lockbox secret.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// A set of key/value label pairs to assign to the Yandex Cloud Lockbox secret.
	Labels map[string]string `pulumi:"labels"`
	// Name for the Yandex Cloud Lockbox secret.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a LockboxSecret resource.
type LockboxSecretArgs struct {
	// Whether the Yandex Cloud Lockbox secret is protected from deletion.
	DeletionProtection pulumi.BoolPtrInput
	// A description for the Yandex Cloud Lockbox secret.
	Description pulumi.StringPtrInput
	// ID of the folder that the Yandex Cloud Lockbox secret belongs to.
	// It will be deduced from provider configuration if not set explicitly.
	FolderId pulumi.StringPtrInput
	// The KMS key used to encrypt the Yandex Cloud Lockbox secret.
	KmsKeyId pulumi.StringPtrInput
	// A set of key/value label pairs to assign to the Yandex Cloud Lockbox secret.
	Labels pulumi.StringMapInput
	// Name for the Yandex Cloud Lockbox secret.
	Name pulumi.StringPtrInput
}

func (LockboxSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*lockboxSecretArgs)(nil)).Elem()
}

type LockboxSecretInput interface {
	pulumi.Input

	ToLockboxSecretOutput() LockboxSecretOutput
	ToLockboxSecretOutputWithContext(ctx context.Context) LockboxSecretOutput
}

func (*LockboxSecret) ElementType() reflect.Type {
	return reflect.TypeOf((**LockboxSecret)(nil)).Elem()
}

func (i *LockboxSecret) ToLockboxSecretOutput() LockboxSecretOutput {
	return i.ToLockboxSecretOutputWithContext(context.Background())
}

func (i *LockboxSecret) ToLockboxSecretOutputWithContext(ctx context.Context) LockboxSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LockboxSecretOutput)
}

// LockboxSecretArrayInput is an input type that accepts LockboxSecretArray and LockboxSecretArrayOutput values.
// You can construct a concrete instance of `LockboxSecretArrayInput` via:
//
//	LockboxSecretArray{ LockboxSecretArgs{...} }
type LockboxSecretArrayInput interface {
	pulumi.Input

	ToLockboxSecretArrayOutput() LockboxSecretArrayOutput
	ToLockboxSecretArrayOutputWithContext(context.Context) LockboxSecretArrayOutput
}

type LockboxSecretArray []LockboxSecretInput

func (LockboxSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LockboxSecret)(nil)).Elem()
}

func (i LockboxSecretArray) ToLockboxSecretArrayOutput() LockboxSecretArrayOutput {
	return i.ToLockboxSecretArrayOutputWithContext(context.Background())
}

func (i LockboxSecretArray) ToLockboxSecretArrayOutputWithContext(ctx context.Context) LockboxSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LockboxSecretArrayOutput)
}

// LockboxSecretMapInput is an input type that accepts LockboxSecretMap and LockboxSecretMapOutput values.
// You can construct a concrete instance of `LockboxSecretMapInput` via:
//
//	LockboxSecretMap{ "key": LockboxSecretArgs{...} }
type LockboxSecretMapInput interface {
	pulumi.Input

	ToLockboxSecretMapOutput() LockboxSecretMapOutput
	ToLockboxSecretMapOutputWithContext(context.Context) LockboxSecretMapOutput
}

type LockboxSecretMap map[string]LockboxSecretInput

func (LockboxSecretMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LockboxSecret)(nil)).Elem()
}

func (i LockboxSecretMap) ToLockboxSecretMapOutput() LockboxSecretMapOutput {
	return i.ToLockboxSecretMapOutputWithContext(context.Background())
}

func (i LockboxSecretMap) ToLockboxSecretMapOutputWithContext(ctx context.Context) LockboxSecretMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LockboxSecretMapOutput)
}

type LockboxSecretOutput struct{ *pulumi.OutputState }

func (LockboxSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LockboxSecret)(nil)).Elem()
}

func (o LockboxSecretOutput) ToLockboxSecretOutput() LockboxSecretOutput {
	return o
}

func (o LockboxSecretOutput) ToLockboxSecretOutputWithContext(ctx context.Context) LockboxSecretOutput {
	return o
}

// The Yandex Cloud Lockbox secret creation timestamp.
func (o LockboxSecretOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *LockboxSecret) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Whether the Yandex Cloud Lockbox secret is protected from deletion.
func (o LockboxSecretOutput) DeletionProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LockboxSecret) pulumi.BoolPtrOutput { return v.DeletionProtection }).(pulumi.BoolPtrOutput)
}

// A description for the Yandex Cloud Lockbox secret.
func (o LockboxSecretOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LockboxSecret) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// ID of the folder that the Yandex Cloud Lockbox secret belongs to.
// It will be deduced from provider configuration if not set explicitly.
func (o LockboxSecretOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *LockboxSecret) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

// The KMS key used to encrypt the Yandex Cloud Lockbox secret.
func (o LockboxSecretOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LockboxSecret) pulumi.StringPtrOutput { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// A set of key/value label pairs to assign to the Yandex Cloud Lockbox secret.
func (o LockboxSecretOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LockboxSecret) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Name for the Yandex Cloud Lockbox secret.
func (o LockboxSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LockboxSecret) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Yandex Cloud Lockbox secret status.
func (o LockboxSecretOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *LockboxSecret) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type LockboxSecretArrayOutput struct{ *pulumi.OutputState }

func (LockboxSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LockboxSecret)(nil)).Elem()
}

func (o LockboxSecretArrayOutput) ToLockboxSecretArrayOutput() LockboxSecretArrayOutput {
	return o
}

func (o LockboxSecretArrayOutput) ToLockboxSecretArrayOutputWithContext(ctx context.Context) LockboxSecretArrayOutput {
	return o
}

func (o LockboxSecretArrayOutput) Index(i pulumi.IntInput) LockboxSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LockboxSecret {
		return vs[0].([]*LockboxSecret)[vs[1].(int)]
	}).(LockboxSecretOutput)
}

type LockboxSecretMapOutput struct{ *pulumi.OutputState }

func (LockboxSecretMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LockboxSecret)(nil)).Elem()
}

func (o LockboxSecretMapOutput) ToLockboxSecretMapOutput() LockboxSecretMapOutput {
	return o
}

func (o LockboxSecretMapOutput) ToLockboxSecretMapOutputWithContext(ctx context.Context) LockboxSecretMapOutput {
	return o
}

func (o LockboxSecretMapOutput) MapIndex(k pulumi.StringInput) LockboxSecretOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LockboxSecret {
		return vs[0].(map[string]*LockboxSecret)[vs[1].(string)]
	}).(LockboxSecretOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LockboxSecretInput)(nil)).Elem(), &LockboxSecret{})
	pulumi.RegisterInputType(reflect.TypeOf((*LockboxSecretArrayInput)(nil)).Elem(), LockboxSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LockboxSecretMapInput)(nil)).Elem(), LockboxSecretMap{})
	pulumi.RegisterOutputType(LockboxSecretOutput{})
	pulumi.RegisterOutputType(LockboxSecretArrayOutput{})
	pulumi.RegisterOutputType(LockboxSecretMapOutput{})
}
