// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Allows creation and management of Cloud resources for an existing Yandex.Cloud Organization. See [the official documentation](https://cloud.yandex.com/docs/resource-manager/concepts/resources-hierarchy) for additional info.
// Note: deletion of clouds may take up to 30 minutes as it requires a lot of communication between cloud services.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := yandex.NewResourcemanagerCloud(ctx, "cloud1", &yandex.ResourcemanagerCloudArgs{
//				OrganizationId: pulumi.String("my_organization_id"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
type ResourcemanagerCloud struct {
	pulumi.CustomResourceState

	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// A description of the Cloud.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A set of key/value label pairs to assign to the Cloud.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// The name of the Cloud.
	Name pulumi.StringOutput `pulumi:"name"`
	// Yandex.Cloud Organization that the cloud belongs to. If value is omitted, the default provider Organization ID is used.
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
}

// NewResourcemanagerCloud registers a new resource with the given unique name, arguments, and options.
func NewResourcemanagerCloud(ctx *pulumi.Context,
	name string, args *ResourcemanagerCloudArgs, opts ...pulumi.ResourceOption) (*ResourcemanagerCloud, error) {
	if args == nil {
		args = &ResourcemanagerCloudArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ResourcemanagerCloud
	err := ctx.RegisterResource("yandex:index/resourcemanagerCloud:ResourcemanagerCloud", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourcemanagerCloud gets an existing ResourcemanagerCloud resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourcemanagerCloud(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourcemanagerCloudState, opts ...pulumi.ResourceOption) (*ResourcemanagerCloud, error) {
	var resource ResourcemanagerCloud
	err := ctx.ReadResource("yandex:index/resourcemanagerCloud:ResourcemanagerCloud", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourcemanagerCloud resources.
type resourcemanagerCloudState struct {
	CreatedAt *string `pulumi:"createdAt"`
	// A description of the Cloud.
	Description *string `pulumi:"description"`
	// A set of key/value label pairs to assign to the Cloud.
	Labels map[string]string `pulumi:"labels"`
	// The name of the Cloud.
	Name *string `pulumi:"name"`
	// Yandex.Cloud Organization that the cloud belongs to. If value is omitted, the default provider Organization ID is used.
	OrganizationId *string `pulumi:"organizationId"`
}

type ResourcemanagerCloudState struct {
	CreatedAt pulumi.StringPtrInput
	// A description of the Cloud.
	Description pulumi.StringPtrInput
	// A set of key/value label pairs to assign to the Cloud.
	Labels pulumi.StringMapInput
	// The name of the Cloud.
	Name pulumi.StringPtrInput
	// Yandex.Cloud Organization that the cloud belongs to. If value is omitted, the default provider Organization ID is used.
	OrganizationId pulumi.StringPtrInput
}

func (ResourcemanagerCloudState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourcemanagerCloudState)(nil)).Elem()
}

type resourcemanagerCloudArgs struct {
	// A description of the Cloud.
	Description *string `pulumi:"description"`
	// A set of key/value label pairs to assign to the Cloud.
	Labels map[string]string `pulumi:"labels"`
	// The name of the Cloud.
	Name *string `pulumi:"name"`
	// Yandex.Cloud Organization that the cloud belongs to. If value is omitted, the default provider Organization ID is used.
	OrganizationId *string `pulumi:"organizationId"`
}

// The set of arguments for constructing a ResourcemanagerCloud resource.
type ResourcemanagerCloudArgs struct {
	// A description of the Cloud.
	Description pulumi.StringPtrInput
	// A set of key/value label pairs to assign to the Cloud.
	Labels pulumi.StringMapInput
	// The name of the Cloud.
	Name pulumi.StringPtrInput
	// Yandex.Cloud Organization that the cloud belongs to. If value is omitted, the default provider Organization ID is used.
	OrganizationId pulumi.StringPtrInput
}

func (ResourcemanagerCloudArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourcemanagerCloudArgs)(nil)).Elem()
}

type ResourcemanagerCloudInput interface {
	pulumi.Input

	ToResourcemanagerCloudOutput() ResourcemanagerCloudOutput
	ToResourcemanagerCloudOutputWithContext(ctx context.Context) ResourcemanagerCloudOutput
}

func (*ResourcemanagerCloud) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourcemanagerCloud)(nil)).Elem()
}

func (i *ResourcemanagerCloud) ToResourcemanagerCloudOutput() ResourcemanagerCloudOutput {
	return i.ToResourcemanagerCloudOutputWithContext(context.Background())
}

func (i *ResourcemanagerCloud) ToResourcemanagerCloudOutputWithContext(ctx context.Context) ResourcemanagerCloudOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcemanagerCloudOutput)
}

// ResourcemanagerCloudArrayInput is an input type that accepts ResourcemanagerCloudArray and ResourcemanagerCloudArrayOutput values.
// You can construct a concrete instance of `ResourcemanagerCloudArrayInput` via:
//
//	ResourcemanagerCloudArray{ ResourcemanagerCloudArgs{...} }
type ResourcemanagerCloudArrayInput interface {
	pulumi.Input

	ToResourcemanagerCloudArrayOutput() ResourcemanagerCloudArrayOutput
	ToResourcemanagerCloudArrayOutputWithContext(context.Context) ResourcemanagerCloudArrayOutput
}

type ResourcemanagerCloudArray []ResourcemanagerCloudInput

func (ResourcemanagerCloudArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourcemanagerCloud)(nil)).Elem()
}

func (i ResourcemanagerCloudArray) ToResourcemanagerCloudArrayOutput() ResourcemanagerCloudArrayOutput {
	return i.ToResourcemanagerCloudArrayOutputWithContext(context.Background())
}

func (i ResourcemanagerCloudArray) ToResourcemanagerCloudArrayOutputWithContext(ctx context.Context) ResourcemanagerCloudArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcemanagerCloudArrayOutput)
}

// ResourcemanagerCloudMapInput is an input type that accepts ResourcemanagerCloudMap and ResourcemanagerCloudMapOutput values.
// You can construct a concrete instance of `ResourcemanagerCloudMapInput` via:
//
//	ResourcemanagerCloudMap{ "key": ResourcemanagerCloudArgs{...} }
type ResourcemanagerCloudMapInput interface {
	pulumi.Input

	ToResourcemanagerCloudMapOutput() ResourcemanagerCloudMapOutput
	ToResourcemanagerCloudMapOutputWithContext(context.Context) ResourcemanagerCloudMapOutput
}

type ResourcemanagerCloudMap map[string]ResourcemanagerCloudInput

func (ResourcemanagerCloudMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourcemanagerCloud)(nil)).Elem()
}

func (i ResourcemanagerCloudMap) ToResourcemanagerCloudMapOutput() ResourcemanagerCloudMapOutput {
	return i.ToResourcemanagerCloudMapOutputWithContext(context.Background())
}

func (i ResourcemanagerCloudMap) ToResourcemanagerCloudMapOutputWithContext(ctx context.Context) ResourcemanagerCloudMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcemanagerCloudMapOutput)
}

type ResourcemanagerCloudOutput struct{ *pulumi.OutputState }

func (ResourcemanagerCloudOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourcemanagerCloud)(nil)).Elem()
}

func (o ResourcemanagerCloudOutput) ToResourcemanagerCloudOutput() ResourcemanagerCloudOutput {
	return o
}

func (o ResourcemanagerCloudOutput) ToResourcemanagerCloudOutputWithContext(ctx context.Context) ResourcemanagerCloudOutput {
	return o
}

func (o ResourcemanagerCloudOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourcemanagerCloud) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// A description of the Cloud.
func (o ResourcemanagerCloudOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourcemanagerCloud) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A set of key/value label pairs to assign to the Cloud.
func (o ResourcemanagerCloudOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ResourcemanagerCloud) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// The name of the Cloud.
func (o ResourcemanagerCloudOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourcemanagerCloud) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Yandex.Cloud Organization that the cloud belongs to. If value is omitted, the default provider Organization ID is used.
func (o ResourcemanagerCloudOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourcemanagerCloud) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

type ResourcemanagerCloudArrayOutput struct{ *pulumi.OutputState }

func (ResourcemanagerCloudArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourcemanagerCloud)(nil)).Elem()
}

func (o ResourcemanagerCloudArrayOutput) ToResourcemanagerCloudArrayOutput() ResourcemanagerCloudArrayOutput {
	return o
}

func (o ResourcemanagerCloudArrayOutput) ToResourcemanagerCloudArrayOutputWithContext(ctx context.Context) ResourcemanagerCloudArrayOutput {
	return o
}

func (o ResourcemanagerCloudArrayOutput) Index(i pulumi.IntInput) ResourcemanagerCloudOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ResourcemanagerCloud {
		return vs[0].([]*ResourcemanagerCloud)[vs[1].(int)]
	}).(ResourcemanagerCloudOutput)
}

type ResourcemanagerCloudMapOutput struct{ *pulumi.OutputState }

func (ResourcemanagerCloudMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourcemanagerCloud)(nil)).Elem()
}

func (o ResourcemanagerCloudMapOutput) ToResourcemanagerCloudMapOutput() ResourcemanagerCloudMapOutput {
	return o
}

func (o ResourcemanagerCloudMapOutput) ToResourcemanagerCloudMapOutputWithContext(ctx context.Context) ResourcemanagerCloudMapOutput {
	return o
}

func (o ResourcemanagerCloudMapOutput) MapIndex(k pulumi.StringInput) ResourcemanagerCloudOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ResourcemanagerCloud {
		return vs[0].(map[string]*ResourcemanagerCloud)[vs[1].(string)]
	}).(ResourcemanagerCloudOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcemanagerCloudInput)(nil)).Elem(), &ResourcemanagerCloud{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcemanagerCloudArrayInput)(nil)).Elem(), ResourcemanagerCloudArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcemanagerCloudMapInput)(nil)).Elem(), ResourcemanagerCloudMap{})
	pulumi.RegisterOutputType(ResourcemanagerCloudOutput{})
	pulumi.RegisterOutputType(ResourcemanagerCloudArrayOutput{})
	pulumi.RegisterOutputType(ResourcemanagerCloudMapOutput{})
}
