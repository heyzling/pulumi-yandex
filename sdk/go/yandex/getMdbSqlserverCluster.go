// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupMdbSqlserverCluster(ctx *pulumi.Context, args *LookupMdbSqlserverClusterArgs, opts ...pulumi.InvokeOption) (*LookupMdbSqlserverClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMdbSqlserverClusterResult
	err := ctx.Invoke("yandex:index/getMdbSqlserverCluster:getMdbSqlserverCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMdbSqlserverCluster.
type LookupMdbSqlserverClusterArgs struct {
	ClusterId          *string           `pulumi:"clusterId"`
	DeletionProtection *bool             `pulumi:"deletionProtection"`
	FolderId           *string           `pulumi:"folderId"`
	Name               *string           `pulumi:"name"`
	Sqlcollation       *string           `pulumi:"sqlcollation"`
	SqlserverConfig    map[string]string `pulumi:"sqlserverConfig"`
}

// A collection of values returned by getMdbSqlserverCluster.
type LookupMdbSqlserverClusterResult struct {
	BackupWindowStarts []GetMdbSqlserverClusterBackupWindowStart `pulumi:"backupWindowStarts"`
	ClusterId          string                                    `pulumi:"clusterId"`
	CreatedAt          string                                    `pulumi:"createdAt"`
	Databases          []GetMdbSqlserverClusterDatabase          `pulumi:"databases"`
	DeletionProtection bool                                      `pulumi:"deletionProtection"`
	Description        string                                    `pulumi:"description"`
	Environment        string                                    `pulumi:"environment"`
	FolderId           string                                    `pulumi:"folderId"`
	Health             string                                    `pulumi:"health"`
	HostGroupIds       []string                                  `pulumi:"hostGroupIds"`
	Hosts              []GetMdbSqlserverClusterHost              `pulumi:"hosts"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                           `pulumi:"id"`
	Labels           map[string]string                `pulumi:"labels"`
	Name             string                           `pulumi:"name"`
	NetworkId        string                           `pulumi:"networkId"`
	Resources        []GetMdbSqlserverClusterResource `pulumi:"resources"`
	SecurityGroupIds []string                         `pulumi:"securityGroupIds"`
	Sqlcollation     string                           `pulumi:"sqlcollation"`
	SqlserverConfig  map[string]string                `pulumi:"sqlserverConfig"`
	Status           string                           `pulumi:"status"`
	Users            []GetMdbSqlserverClusterUser     `pulumi:"users"`
	Version          string                           `pulumi:"version"`
}

func LookupMdbSqlserverClusterOutput(ctx *pulumi.Context, args LookupMdbSqlserverClusterOutputArgs, opts ...pulumi.InvokeOption) LookupMdbSqlserverClusterResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMdbSqlserverClusterResult, error) {
			args := v.(LookupMdbSqlserverClusterArgs)
			r, err := LookupMdbSqlserverCluster(ctx, &args, opts...)
			var s LookupMdbSqlserverClusterResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMdbSqlserverClusterResultOutput)
}

// A collection of arguments for invoking getMdbSqlserverCluster.
type LookupMdbSqlserverClusterOutputArgs struct {
	ClusterId          pulumi.StringPtrInput `pulumi:"clusterId"`
	DeletionProtection pulumi.BoolPtrInput   `pulumi:"deletionProtection"`
	FolderId           pulumi.StringPtrInput `pulumi:"folderId"`
	Name               pulumi.StringPtrInput `pulumi:"name"`
	Sqlcollation       pulumi.StringPtrInput `pulumi:"sqlcollation"`
	SqlserverConfig    pulumi.StringMapInput `pulumi:"sqlserverConfig"`
}

func (LookupMdbSqlserverClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMdbSqlserverClusterArgs)(nil)).Elem()
}

// A collection of values returned by getMdbSqlserverCluster.
type LookupMdbSqlserverClusterResultOutput struct{ *pulumi.OutputState }

func (LookupMdbSqlserverClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMdbSqlserverClusterResult)(nil)).Elem()
}

func (o LookupMdbSqlserverClusterResultOutput) ToLookupMdbSqlserverClusterResultOutput() LookupMdbSqlserverClusterResultOutput {
	return o
}

func (o LookupMdbSqlserverClusterResultOutput) ToLookupMdbSqlserverClusterResultOutputWithContext(ctx context.Context) LookupMdbSqlserverClusterResultOutput {
	return o
}

func (o LookupMdbSqlserverClusterResultOutput) BackupWindowStarts() GetMdbSqlserverClusterBackupWindowStartArrayOutput {
	return o.ApplyT(func(v LookupMdbSqlserverClusterResult) []GetMdbSqlserverClusterBackupWindowStart {
		return v.BackupWindowStarts
	}).(GetMdbSqlserverClusterBackupWindowStartArrayOutput)
}

func (o LookupMdbSqlserverClusterResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbSqlserverClusterResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o LookupMdbSqlserverClusterResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbSqlserverClusterResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o LookupMdbSqlserverClusterResultOutput) Databases() GetMdbSqlserverClusterDatabaseArrayOutput {
	return o.ApplyT(func(v LookupMdbSqlserverClusterResult) []GetMdbSqlserverClusterDatabase { return v.Databases }).(GetMdbSqlserverClusterDatabaseArrayOutput)
}

func (o LookupMdbSqlserverClusterResultOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMdbSqlserverClusterResult) bool { return v.DeletionProtection }).(pulumi.BoolOutput)
}

func (o LookupMdbSqlserverClusterResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbSqlserverClusterResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupMdbSqlserverClusterResultOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbSqlserverClusterResult) string { return v.Environment }).(pulumi.StringOutput)
}

func (o LookupMdbSqlserverClusterResultOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbSqlserverClusterResult) string { return v.FolderId }).(pulumi.StringOutput)
}

func (o LookupMdbSqlserverClusterResultOutput) Health() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbSqlserverClusterResult) string { return v.Health }).(pulumi.StringOutput)
}

func (o LookupMdbSqlserverClusterResultOutput) HostGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMdbSqlserverClusterResult) []string { return v.HostGroupIds }).(pulumi.StringArrayOutput)
}

func (o LookupMdbSqlserverClusterResultOutput) Hosts() GetMdbSqlserverClusterHostArrayOutput {
	return o.ApplyT(func(v LookupMdbSqlserverClusterResult) []GetMdbSqlserverClusterHost { return v.Hosts }).(GetMdbSqlserverClusterHostArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMdbSqlserverClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbSqlserverClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupMdbSqlserverClusterResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMdbSqlserverClusterResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o LookupMdbSqlserverClusterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbSqlserverClusterResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupMdbSqlserverClusterResultOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbSqlserverClusterResult) string { return v.NetworkId }).(pulumi.StringOutput)
}

func (o LookupMdbSqlserverClusterResultOutput) Resources() GetMdbSqlserverClusterResourceArrayOutput {
	return o.ApplyT(func(v LookupMdbSqlserverClusterResult) []GetMdbSqlserverClusterResource { return v.Resources }).(GetMdbSqlserverClusterResourceArrayOutput)
}

func (o LookupMdbSqlserverClusterResultOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMdbSqlserverClusterResult) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o LookupMdbSqlserverClusterResultOutput) Sqlcollation() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbSqlserverClusterResult) string { return v.Sqlcollation }).(pulumi.StringOutput)
}

func (o LookupMdbSqlserverClusterResultOutput) SqlserverConfig() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupMdbSqlserverClusterResult) map[string]string { return v.SqlserverConfig }).(pulumi.StringMapOutput)
}

func (o LookupMdbSqlserverClusterResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbSqlserverClusterResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupMdbSqlserverClusterResultOutput) Users() GetMdbSqlserverClusterUserArrayOutput {
	return o.ApplyT(func(v LookupMdbSqlserverClusterResult) []GetMdbSqlserverClusterUser { return v.Users }).(GetMdbSqlserverClusterUserArrayOutput)
}

func (o LookupMdbSqlserverClusterResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMdbSqlserverClusterResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMdbSqlserverClusterResultOutput{})
}
