// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"errors"
	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## yandex\_ydb\_database\_iam\_binding
//
// Allows creation and management of a single binding within IAM policy for
// an existing Managed YDB Database instance.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/heyzling/pulumi-yandex.git/sdk/go/yandex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			database1, err := yandex.NewYdbDatabaseServerless(ctx, "database1", &yandex.YdbDatabaseServerlessArgs{
//				FolderId: pulumi.Any(data.Yandex_resourcemanager_folder.Test_folder.Id),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = yandex.NewYdbDatabaseIamBinding(ctx, "viewer", &yandex.YdbDatabaseIamBindingArgs{
//				DatabaseId: database1.ID(),
//				Role:       pulumi.String("ydb.viewer"),
//				Members: pulumi.StringArray{
//					pulumi.String("userAccount:foo_user_id"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// IAM binding imports use space-delimited identifiers; first the resource in question and then the role.
//
// These bindings can be imported using the `database_id` and role, e.g.
//
// ```sh
// $ pulumi import yandex:index/ydbDatabaseIamBinding:YdbDatabaseIamBinding viewer "database_id ydb.viewer"
// ```
type YdbDatabaseIamBinding struct {
	pulumi.CustomResourceState

	// The [Managed Service YDB instance](https://cloud.yandex.com/docs/ydb/) Database ID to apply a binding to.
	DatabaseId pulumi.StringOutput `pulumi:"databaseId"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
	// * **serviceAccount:{service_account_id}**: A unique service account ID.
	// * **federatedUser:{federated_user_id}:**: A unique saml federation user account ID.
	// * **group:{group_id}**: A unique group ID.
	// * **system:group:federation:{federation_id}:users**: All users in federation.
	// * **system:group:organization:{organization_id}:users**: All users in organization.
	// * **system:allAuthenticatedUsers**: All authenticated users.
	// * **system:allUsers**: All users, including unauthenticated ones.
	//
	// Note: for more information about system groups, see the [documentation](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group).
	Members pulumi.StringArrayOutput `pulumi:"members"`
	// The role that should be applied. See [roles](https://cloud.yandex.com/docs/ydb/security/).
	Role       pulumi.StringOutput `pulumi:"role"`
	SleepAfter pulumi.IntPtrOutput `pulumi:"sleepAfter"`
}

// NewYdbDatabaseIamBinding registers a new resource with the given unique name, arguments, and options.
func NewYdbDatabaseIamBinding(ctx *pulumi.Context,
	name string, args *YdbDatabaseIamBindingArgs, opts ...pulumi.ResourceOption) (*YdbDatabaseIamBinding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DatabaseId == nil {
		return nil, errors.New("invalid value for required argument 'DatabaseId'")
	}
	if args.Members == nil {
		return nil, errors.New("invalid value for required argument 'Members'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource YdbDatabaseIamBinding
	err := ctx.RegisterResource("yandex:index/ydbDatabaseIamBinding:YdbDatabaseIamBinding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetYdbDatabaseIamBinding gets an existing YdbDatabaseIamBinding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetYdbDatabaseIamBinding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *YdbDatabaseIamBindingState, opts ...pulumi.ResourceOption) (*YdbDatabaseIamBinding, error) {
	var resource YdbDatabaseIamBinding
	err := ctx.ReadResource("yandex:index/ydbDatabaseIamBinding:YdbDatabaseIamBinding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering YdbDatabaseIamBinding resources.
type ydbDatabaseIamBindingState struct {
	// The [Managed Service YDB instance](https://cloud.yandex.com/docs/ydb/) Database ID to apply a binding to.
	DatabaseId *string `pulumi:"databaseId"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
	// * **serviceAccount:{service_account_id}**: A unique service account ID.
	// * **federatedUser:{federated_user_id}:**: A unique saml federation user account ID.
	// * **group:{group_id}**: A unique group ID.
	// * **system:group:federation:{federation_id}:users**: All users in federation.
	// * **system:group:organization:{organization_id}:users**: All users in organization.
	// * **system:allAuthenticatedUsers**: All authenticated users.
	// * **system:allUsers**: All users, including unauthenticated ones.
	//
	// Note: for more information about system groups, see the [documentation](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group).
	Members []string `pulumi:"members"`
	// The role that should be applied. See [roles](https://cloud.yandex.com/docs/ydb/security/).
	Role       *string `pulumi:"role"`
	SleepAfter *int    `pulumi:"sleepAfter"`
}

type YdbDatabaseIamBindingState struct {
	// The [Managed Service YDB instance](https://cloud.yandex.com/docs/ydb/) Database ID to apply a binding to.
	DatabaseId pulumi.StringPtrInput
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
	// * **serviceAccount:{service_account_id}**: A unique service account ID.
	// * **federatedUser:{federated_user_id}:**: A unique saml federation user account ID.
	// * **group:{group_id}**: A unique group ID.
	// * **system:group:federation:{federation_id}:users**: All users in federation.
	// * **system:group:organization:{organization_id}:users**: All users in organization.
	// * **system:allAuthenticatedUsers**: All authenticated users.
	// * **system:allUsers**: All users, including unauthenticated ones.
	//
	// Note: for more information about system groups, see the [documentation](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group).
	Members pulumi.StringArrayInput
	// The role that should be applied. See [roles](https://cloud.yandex.com/docs/ydb/security/).
	Role       pulumi.StringPtrInput
	SleepAfter pulumi.IntPtrInput
}

func (YdbDatabaseIamBindingState) ElementType() reflect.Type {
	return reflect.TypeOf((*ydbDatabaseIamBindingState)(nil)).Elem()
}

type ydbDatabaseIamBindingArgs struct {
	// The [Managed Service YDB instance](https://cloud.yandex.com/docs/ydb/) Database ID to apply a binding to.
	DatabaseId string `pulumi:"databaseId"`
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
	// * **serviceAccount:{service_account_id}**: A unique service account ID.
	// * **federatedUser:{federated_user_id}:**: A unique saml federation user account ID.
	// * **group:{group_id}**: A unique group ID.
	// * **system:group:federation:{federation_id}:users**: All users in federation.
	// * **system:group:organization:{organization_id}:users**: All users in organization.
	// * **system:allAuthenticatedUsers**: All authenticated users.
	// * **system:allUsers**: All users, including unauthenticated ones.
	//
	// Note: for more information about system groups, see the [documentation](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group).
	Members []string `pulumi:"members"`
	// The role that should be applied. See [roles](https://cloud.yandex.com/docs/ydb/security/).
	Role       string `pulumi:"role"`
	SleepAfter *int   `pulumi:"sleepAfter"`
}

// The set of arguments for constructing a YdbDatabaseIamBinding resource.
type YdbDatabaseIamBindingArgs struct {
	// The [Managed Service YDB instance](https://cloud.yandex.com/docs/ydb/) Database ID to apply a binding to.
	DatabaseId pulumi.StringInput
	// Identities that will be granted the privilege in `role`.
	// Each entry can have one of the following values:
	// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
	// * **serviceAccount:{service_account_id}**: A unique service account ID.
	// * **federatedUser:{federated_user_id}:**: A unique saml federation user account ID.
	// * **group:{group_id}**: A unique group ID.
	// * **system:group:federation:{federation_id}:users**: All users in federation.
	// * **system:group:organization:{organization_id}:users**: All users in organization.
	// * **system:allAuthenticatedUsers**: All authenticated users.
	// * **system:allUsers**: All users, including unauthenticated ones.
	//
	// Note: for more information about system groups, see the [documentation](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group).
	Members pulumi.StringArrayInput
	// The role that should be applied. See [roles](https://cloud.yandex.com/docs/ydb/security/).
	Role       pulumi.StringInput
	SleepAfter pulumi.IntPtrInput
}

func (YdbDatabaseIamBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ydbDatabaseIamBindingArgs)(nil)).Elem()
}

type YdbDatabaseIamBindingInput interface {
	pulumi.Input

	ToYdbDatabaseIamBindingOutput() YdbDatabaseIamBindingOutput
	ToYdbDatabaseIamBindingOutputWithContext(ctx context.Context) YdbDatabaseIamBindingOutput
}

func (*YdbDatabaseIamBinding) ElementType() reflect.Type {
	return reflect.TypeOf((**YdbDatabaseIamBinding)(nil)).Elem()
}

func (i *YdbDatabaseIamBinding) ToYdbDatabaseIamBindingOutput() YdbDatabaseIamBindingOutput {
	return i.ToYdbDatabaseIamBindingOutputWithContext(context.Background())
}

func (i *YdbDatabaseIamBinding) ToYdbDatabaseIamBindingOutputWithContext(ctx context.Context) YdbDatabaseIamBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YdbDatabaseIamBindingOutput)
}

// YdbDatabaseIamBindingArrayInput is an input type that accepts YdbDatabaseIamBindingArray and YdbDatabaseIamBindingArrayOutput values.
// You can construct a concrete instance of `YdbDatabaseIamBindingArrayInput` via:
//
//	YdbDatabaseIamBindingArray{ YdbDatabaseIamBindingArgs{...} }
type YdbDatabaseIamBindingArrayInput interface {
	pulumi.Input

	ToYdbDatabaseIamBindingArrayOutput() YdbDatabaseIamBindingArrayOutput
	ToYdbDatabaseIamBindingArrayOutputWithContext(context.Context) YdbDatabaseIamBindingArrayOutput
}

type YdbDatabaseIamBindingArray []YdbDatabaseIamBindingInput

func (YdbDatabaseIamBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*YdbDatabaseIamBinding)(nil)).Elem()
}

func (i YdbDatabaseIamBindingArray) ToYdbDatabaseIamBindingArrayOutput() YdbDatabaseIamBindingArrayOutput {
	return i.ToYdbDatabaseIamBindingArrayOutputWithContext(context.Background())
}

func (i YdbDatabaseIamBindingArray) ToYdbDatabaseIamBindingArrayOutputWithContext(ctx context.Context) YdbDatabaseIamBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YdbDatabaseIamBindingArrayOutput)
}

// YdbDatabaseIamBindingMapInput is an input type that accepts YdbDatabaseIamBindingMap and YdbDatabaseIamBindingMapOutput values.
// You can construct a concrete instance of `YdbDatabaseIamBindingMapInput` via:
//
//	YdbDatabaseIamBindingMap{ "key": YdbDatabaseIamBindingArgs{...} }
type YdbDatabaseIamBindingMapInput interface {
	pulumi.Input

	ToYdbDatabaseIamBindingMapOutput() YdbDatabaseIamBindingMapOutput
	ToYdbDatabaseIamBindingMapOutputWithContext(context.Context) YdbDatabaseIamBindingMapOutput
}

type YdbDatabaseIamBindingMap map[string]YdbDatabaseIamBindingInput

func (YdbDatabaseIamBindingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*YdbDatabaseIamBinding)(nil)).Elem()
}

func (i YdbDatabaseIamBindingMap) ToYdbDatabaseIamBindingMapOutput() YdbDatabaseIamBindingMapOutput {
	return i.ToYdbDatabaseIamBindingMapOutputWithContext(context.Background())
}

func (i YdbDatabaseIamBindingMap) ToYdbDatabaseIamBindingMapOutputWithContext(ctx context.Context) YdbDatabaseIamBindingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(YdbDatabaseIamBindingMapOutput)
}

type YdbDatabaseIamBindingOutput struct{ *pulumi.OutputState }

func (YdbDatabaseIamBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**YdbDatabaseIamBinding)(nil)).Elem()
}

func (o YdbDatabaseIamBindingOutput) ToYdbDatabaseIamBindingOutput() YdbDatabaseIamBindingOutput {
	return o
}

func (o YdbDatabaseIamBindingOutput) ToYdbDatabaseIamBindingOutputWithContext(ctx context.Context) YdbDatabaseIamBindingOutput {
	return o
}

// The [Managed Service YDB instance](https://cloud.yandex.com/docs/ydb/) Database ID to apply a binding to.
func (o YdbDatabaseIamBindingOutput) DatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v *YdbDatabaseIamBinding) pulumi.StringOutput { return v.DatabaseId }).(pulumi.StringOutput)
}

// Identities that will be granted the privilege in `role`.
// Each entry can have one of the following values:
// * **userAccount:{user_id}**: A unique user ID that represents a specific Yandex account.
// * **serviceAccount:{service_account_id}**: A unique service account ID.
// * **federatedUser:{federated_user_id}:**: A unique saml federation user account ID.
// * **group:{group_id}**: A unique group ID.
// * **system:group:federation:{federation_id}:users**: All users in federation.
// * **system:group:organization:{organization_id}:users**: All users in organization.
// * **system:allAuthenticatedUsers**: All authenticated users.
// * **system:allUsers**: All users, including unauthenticated ones.
//
// Note: for more information about system groups, see the [documentation](https://cloud.yandex.com/docs/iam/concepts/access-control/system-group).
func (o YdbDatabaseIamBindingOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *YdbDatabaseIamBinding) pulumi.StringArrayOutput { return v.Members }).(pulumi.StringArrayOutput)
}

// The role that should be applied. See [roles](https://cloud.yandex.com/docs/ydb/security/).
func (o YdbDatabaseIamBindingOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *YdbDatabaseIamBinding) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

func (o YdbDatabaseIamBindingOutput) SleepAfter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *YdbDatabaseIamBinding) pulumi.IntPtrOutput { return v.SleepAfter }).(pulumi.IntPtrOutput)
}

type YdbDatabaseIamBindingArrayOutput struct{ *pulumi.OutputState }

func (YdbDatabaseIamBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*YdbDatabaseIamBinding)(nil)).Elem()
}

func (o YdbDatabaseIamBindingArrayOutput) ToYdbDatabaseIamBindingArrayOutput() YdbDatabaseIamBindingArrayOutput {
	return o
}

func (o YdbDatabaseIamBindingArrayOutput) ToYdbDatabaseIamBindingArrayOutputWithContext(ctx context.Context) YdbDatabaseIamBindingArrayOutput {
	return o
}

func (o YdbDatabaseIamBindingArrayOutput) Index(i pulumi.IntInput) YdbDatabaseIamBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *YdbDatabaseIamBinding {
		return vs[0].([]*YdbDatabaseIamBinding)[vs[1].(int)]
	}).(YdbDatabaseIamBindingOutput)
}

type YdbDatabaseIamBindingMapOutput struct{ *pulumi.OutputState }

func (YdbDatabaseIamBindingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*YdbDatabaseIamBinding)(nil)).Elem()
}

func (o YdbDatabaseIamBindingMapOutput) ToYdbDatabaseIamBindingMapOutput() YdbDatabaseIamBindingMapOutput {
	return o
}

func (o YdbDatabaseIamBindingMapOutput) ToYdbDatabaseIamBindingMapOutputWithContext(ctx context.Context) YdbDatabaseIamBindingMapOutput {
	return o
}

func (o YdbDatabaseIamBindingMapOutput) MapIndex(k pulumi.StringInput) YdbDatabaseIamBindingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *YdbDatabaseIamBinding {
		return vs[0].(map[string]*YdbDatabaseIamBinding)[vs[1].(string)]
	}).(YdbDatabaseIamBindingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*YdbDatabaseIamBindingInput)(nil)).Elem(), &YdbDatabaseIamBinding{})
	pulumi.RegisterInputType(reflect.TypeOf((*YdbDatabaseIamBindingArrayInput)(nil)).Elem(), YdbDatabaseIamBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*YdbDatabaseIamBindingMapInput)(nil)).Elem(), YdbDatabaseIamBindingMap{})
	pulumi.RegisterOutputType(YdbDatabaseIamBindingOutput{})
	pulumi.RegisterOutputType(YdbDatabaseIamBindingArrayOutput{})
	pulumi.RegisterOutputType(YdbDatabaseIamBindingMapOutput{})
}
