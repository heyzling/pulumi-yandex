# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['OrganizationmanagerOsLoginSettingsArgs', 'OrganizationmanagerOsLoginSettings']

@pulumi.input_type
class OrganizationmanagerOsLoginSettingsArgs:
    def __init__(__self__, *,
                 organization_id: pulumi.Input[str],
                 ssh_certificate_settings: Optional[pulumi.Input['OrganizationmanagerOsLoginSettingsSshCertificateSettingsArgs']] = None,
                 user_ssh_key_settings: Optional[pulumi.Input['OrganizationmanagerOsLoginSettingsUserSshKeySettingsArgs']] = None):
        """
        The set of arguments for constructing a OrganizationmanagerOsLoginSettings resource.
        :param pulumi.Input[str] organization_id: The organization to manage it's OsLogin Settings.
        :param pulumi.Input['OrganizationmanagerOsLoginSettingsSshCertificateSettingsArgs'] ssh_certificate_settings: The structure is documented below.
        :param pulumi.Input['OrganizationmanagerOsLoginSettingsUserSshKeySettingsArgs'] user_ssh_key_settings: The structure is documented below.
        """
        pulumi.set(__self__, "organization_id", organization_id)
        if ssh_certificate_settings is not None:
            pulumi.set(__self__, "ssh_certificate_settings", ssh_certificate_settings)
        if user_ssh_key_settings is not None:
            pulumi.set(__self__, "user_ssh_key_settings", user_ssh_key_settings)

    @property
    @pulumi.getter(name="organizationId")
    def organization_id(self) -> pulumi.Input[str]:
        """
        The organization to manage it's OsLogin Settings.
        """
        return pulumi.get(self, "organization_id")

    @organization_id.setter
    def organization_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "organization_id", value)

    @property
    @pulumi.getter(name="sshCertificateSettings")
    def ssh_certificate_settings(self) -> Optional[pulumi.Input['OrganizationmanagerOsLoginSettingsSshCertificateSettingsArgs']]:
        """
        The structure is documented below.
        """
        return pulumi.get(self, "ssh_certificate_settings")

    @ssh_certificate_settings.setter
    def ssh_certificate_settings(self, value: Optional[pulumi.Input['OrganizationmanagerOsLoginSettingsSshCertificateSettingsArgs']]):
        pulumi.set(self, "ssh_certificate_settings", value)

    @property
    @pulumi.getter(name="userSshKeySettings")
    def user_ssh_key_settings(self) -> Optional[pulumi.Input['OrganizationmanagerOsLoginSettingsUserSshKeySettingsArgs']]:
        """
        The structure is documented below.
        """
        return pulumi.get(self, "user_ssh_key_settings")

    @user_ssh_key_settings.setter
    def user_ssh_key_settings(self, value: Optional[pulumi.Input['OrganizationmanagerOsLoginSettingsUserSshKeySettingsArgs']]):
        pulumi.set(self, "user_ssh_key_settings", value)


@pulumi.input_type
class _OrganizationmanagerOsLoginSettingsState:
    def __init__(__self__, *,
                 organization_id: Optional[pulumi.Input[str]] = None,
                 ssh_certificate_settings: Optional[pulumi.Input['OrganizationmanagerOsLoginSettingsSshCertificateSettingsArgs']] = None,
                 user_ssh_key_settings: Optional[pulumi.Input['OrganizationmanagerOsLoginSettingsUserSshKeySettingsArgs']] = None):
        """
        Input properties used for looking up and filtering OrganizationmanagerOsLoginSettings resources.
        :param pulumi.Input[str] organization_id: The organization to manage it's OsLogin Settings.
        :param pulumi.Input['OrganizationmanagerOsLoginSettingsSshCertificateSettingsArgs'] ssh_certificate_settings: The structure is documented below.
        :param pulumi.Input['OrganizationmanagerOsLoginSettingsUserSshKeySettingsArgs'] user_ssh_key_settings: The structure is documented below.
        """
        if organization_id is not None:
            pulumi.set(__self__, "organization_id", organization_id)
        if ssh_certificate_settings is not None:
            pulumi.set(__self__, "ssh_certificate_settings", ssh_certificate_settings)
        if user_ssh_key_settings is not None:
            pulumi.set(__self__, "user_ssh_key_settings", user_ssh_key_settings)

    @property
    @pulumi.getter(name="organizationId")
    def organization_id(self) -> Optional[pulumi.Input[str]]:
        """
        The organization to manage it's OsLogin Settings.
        """
        return pulumi.get(self, "organization_id")

    @organization_id.setter
    def organization_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "organization_id", value)

    @property
    @pulumi.getter(name="sshCertificateSettings")
    def ssh_certificate_settings(self) -> Optional[pulumi.Input['OrganizationmanagerOsLoginSettingsSshCertificateSettingsArgs']]:
        """
        The structure is documented below.
        """
        return pulumi.get(self, "ssh_certificate_settings")

    @ssh_certificate_settings.setter
    def ssh_certificate_settings(self, value: Optional[pulumi.Input['OrganizationmanagerOsLoginSettingsSshCertificateSettingsArgs']]):
        pulumi.set(self, "ssh_certificate_settings", value)

    @property
    @pulumi.getter(name="userSshKeySettings")
    def user_ssh_key_settings(self) -> Optional[pulumi.Input['OrganizationmanagerOsLoginSettingsUserSshKeySettingsArgs']]:
        """
        The structure is documented below.
        """
        return pulumi.get(self, "user_ssh_key_settings")

    @user_ssh_key_settings.setter
    def user_ssh_key_settings(self, value: Optional[pulumi.Input['OrganizationmanagerOsLoginSettingsUserSshKeySettingsArgs']]):
        pulumi.set(self, "user_ssh_key_settings", value)


class OrganizationmanagerOsLoginSettings(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 organization_id: Optional[pulumi.Input[str]] = None,
                 ssh_certificate_settings: Optional[pulumi.Input[pulumi.InputType['OrganizationmanagerOsLoginSettingsSshCertificateSettingsArgs']]] = None,
                 user_ssh_key_settings: Optional[pulumi.Input[pulumi.InputType['OrganizationmanagerOsLoginSettingsUserSshKeySettingsArgs']]] = None,
                 __props__=None):
        """
        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import pulumi_yandex as yandex

        my_os_login_settings = yandex.OrganizationmanagerOsLoginSettings("myOsLoginSettings",
            organization_id="sdf4*********3fr",
            ssh_certificate_settings=yandex.OrganizationmanagerOsLoginSettingsSshCertificateSettingsArgs(
                enabled=True,
            ),
            user_ssh_key_settings=yandex.OrganizationmanagerOsLoginSettingsUserSshKeySettingsArgs(
                allow_manage_own_keys=True,
                enabled=True,
            ))
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] organization_id: The organization to manage it's OsLogin Settings.
        :param pulumi.Input[pulumi.InputType['OrganizationmanagerOsLoginSettingsSshCertificateSettingsArgs']] ssh_certificate_settings: The structure is documented below.
        :param pulumi.Input[pulumi.InputType['OrganizationmanagerOsLoginSettingsUserSshKeySettingsArgs']] user_ssh_key_settings: The structure is documented below.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: OrganizationmanagerOsLoginSettingsArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        ## Example Usage

        <!--Start PulumiCodeChooser -->
        ```python
        import pulumi
        import pulumi_yandex as yandex

        my_os_login_settings = yandex.OrganizationmanagerOsLoginSettings("myOsLoginSettings",
            organization_id="sdf4*********3fr",
            ssh_certificate_settings=yandex.OrganizationmanagerOsLoginSettingsSshCertificateSettingsArgs(
                enabled=True,
            ),
            user_ssh_key_settings=yandex.OrganizationmanagerOsLoginSettingsUserSshKeySettingsArgs(
                allow_manage_own_keys=True,
                enabled=True,
            ))
        ```
        <!--End PulumiCodeChooser -->

        :param str resource_name: The name of the resource.
        :param OrganizationmanagerOsLoginSettingsArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(OrganizationmanagerOsLoginSettingsArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 organization_id: Optional[pulumi.Input[str]] = None,
                 ssh_certificate_settings: Optional[pulumi.Input[pulumi.InputType['OrganizationmanagerOsLoginSettingsSshCertificateSettingsArgs']]] = None,
                 user_ssh_key_settings: Optional[pulumi.Input[pulumi.InputType['OrganizationmanagerOsLoginSettingsUserSshKeySettingsArgs']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = OrganizationmanagerOsLoginSettingsArgs.__new__(OrganizationmanagerOsLoginSettingsArgs)

            if organization_id is None and not opts.urn:
                raise TypeError("Missing required property 'organization_id'")
            __props__.__dict__["organization_id"] = organization_id
            __props__.__dict__["ssh_certificate_settings"] = ssh_certificate_settings
            __props__.__dict__["user_ssh_key_settings"] = user_ssh_key_settings
        super(OrganizationmanagerOsLoginSettings, __self__).__init__(
            'yandex:index/organizationmanagerOsLoginSettings:OrganizationmanagerOsLoginSettings',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            organization_id: Optional[pulumi.Input[str]] = None,
            ssh_certificate_settings: Optional[pulumi.Input[pulumi.InputType['OrganizationmanagerOsLoginSettingsSshCertificateSettingsArgs']]] = None,
            user_ssh_key_settings: Optional[pulumi.Input[pulumi.InputType['OrganizationmanagerOsLoginSettingsUserSshKeySettingsArgs']]] = None) -> 'OrganizationmanagerOsLoginSettings':
        """
        Get an existing OrganizationmanagerOsLoginSettings resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] organization_id: The organization to manage it's OsLogin Settings.
        :param pulumi.Input[pulumi.InputType['OrganizationmanagerOsLoginSettingsSshCertificateSettingsArgs']] ssh_certificate_settings: The structure is documented below.
        :param pulumi.Input[pulumi.InputType['OrganizationmanagerOsLoginSettingsUserSshKeySettingsArgs']] user_ssh_key_settings: The structure is documented below.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _OrganizationmanagerOsLoginSettingsState.__new__(_OrganizationmanagerOsLoginSettingsState)

        __props__.__dict__["organization_id"] = organization_id
        __props__.__dict__["ssh_certificate_settings"] = ssh_certificate_settings
        __props__.__dict__["user_ssh_key_settings"] = user_ssh_key_settings
        return OrganizationmanagerOsLoginSettings(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="organizationId")
    def organization_id(self) -> pulumi.Output[str]:
        """
        The organization to manage it's OsLogin Settings.
        """
        return pulumi.get(self, "organization_id")

    @property
    @pulumi.getter(name="sshCertificateSettings")
    def ssh_certificate_settings(self) -> pulumi.Output[Optional['outputs.OrganizationmanagerOsLoginSettingsSshCertificateSettings']]:
        """
        The structure is documented below.
        """
        return pulumi.get(self, "ssh_certificate_settings")

    @property
    @pulumi.getter(name="userSshKeySettings")
    def user_ssh_key_settings(self) -> pulumi.Output[Optional['outputs.OrganizationmanagerOsLoginSettingsUserSshKeySettings']]:
        """
        The structure is documented below.
        """
        return pulumi.get(self, "user_ssh_key_settings")

