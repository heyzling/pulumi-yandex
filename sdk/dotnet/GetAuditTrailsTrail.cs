// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    public static class GetAuditTrailsTrail
    {
        public static Task<GetAuditTrailsTrailResult> InvokeAsync(GetAuditTrailsTrailArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAuditTrailsTrailResult>("yandex:index/getAuditTrailsTrail:getAuditTrailsTrail", args ?? new GetAuditTrailsTrailArgs(), options.WithDefaults());

        public static Output<GetAuditTrailsTrailResult> Invoke(GetAuditTrailsTrailInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAuditTrailsTrailResult>("yandex:index/getAuditTrailsTrail:getAuditTrailsTrail", args ?? new GetAuditTrailsTrailInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAuditTrailsTrailArgs : global::Pulumi.InvokeArgs
    {
        [Input("trailId", required: true)]
        public string TrailId { get; set; } = null!;

        public GetAuditTrailsTrailArgs()
        {
        }
        public static new GetAuditTrailsTrailArgs Empty => new GetAuditTrailsTrailArgs();
    }

    public sealed class GetAuditTrailsTrailInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("trailId", required: true)]
        public Input<string> TrailId { get; set; } = null!;

        public GetAuditTrailsTrailInvokeArgs()
        {
        }
        public static new GetAuditTrailsTrailInvokeArgs Empty => new GetAuditTrailsTrailInvokeArgs();
    }


    [OutputType]
    public sealed class GetAuditTrailsTrailResult
    {
        public readonly ImmutableArray<Outputs.GetAuditTrailsTrailDataStreamDestinationResult> DataStreamDestinations;
        public readonly string Description;
        public readonly ImmutableArray<Outputs.GetAuditTrailsTrailFilterResult> Filters;
        public readonly string FolderId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableDictionary<string, string> Labels;
        public readonly ImmutableArray<Outputs.GetAuditTrailsTrailLoggingDestinationResult> LoggingDestinations;
        public readonly string Name;
        public readonly string ServiceAccountId;
        public readonly string Status;
        public readonly ImmutableArray<Outputs.GetAuditTrailsTrailStorageDestinationResult> StorageDestinations;
        public readonly string TrailId;

        [OutputConstructor]
        private GetAuditTrailsTrailResult(
            ImmutableArray<Outputs.GetAuditTrailsTrailDataStreamDestinationResult> dataStreamDestinations,

            string description,

            ImmutableArray<Outputs.GetAuditTrailsTrailFilterResult> filters,

            string folderId,

            string id,

            ImmutableDictionary<string, string> labels,

            ImmutableArray<Outputs.GetAuditTrailsTrailLoggingDestinationResult> loggingDestinations,

            string name,

            string serviceAccountId,

            string status,

            ImmutableArray<Outputs.GetAuditTrailsTrailStorageDestinationResult> storageDestinations,

            string trailId)
        {
            DataStreamDestinations = dataStreamDestinations;
            Description = description;
            Filters = filters;
            FolderId = folderId;
            Id = id;
            Labels = labels;
            LoggingDestinations = loggingDestinations;
            Name = name;
            ServiceAccountId = serviceAccountId;
            Status = status;
            StorageDestinations = storageDestinations;
            TrailId = trailId;
        }
    }
}
