// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    public static class GetYdbDatabaseServerless
    {
        public static Task<GetYdbDatabaseServerlessResult> InvokeAsync(GetYdbDatabaseServerlessArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetYdbDatabaseServerlessResult>("yandex:index/getYdbDatabaseServerless:getYdbDatabaseServerless", args ?? new GetYdbDatabaseServerlessArgs(), options.WithDefaults());

        public static Output<GetYdbDatabaseServerlessResult> Invoke(GetYdbDatabaseServerlessInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetYdbDatabaseServerlessResult>("yandex:index/getYdbDatabaseServerless:getYdbDatabaseServerless", args ?? new GetYdbDatabaseServerlessInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetYdbDatabaseServerlessArgs : global::Pulumi.InvokeArgs
    {
        [Input("databaseId")]
        public string? DatabaseId { get; set; }

        [Input("deletionProtection")]
        public bool? DeletionProtection { get; set; }

        [Input("folderId")]
        public string? FolderId { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("serverlessDatabases")]
        private List<Inputs.GetYdbDatabaseServerlessServerlessDatabaseArgs>? _serverlessDatabases;
        public List<Inputs.GetYdbDatabaseServerlessServerlessDatabaseArgs> ServerlessDatabases
        {
            get => _serverlessDatabases ?? (_serverlessDatabases = new List<Inputs.GetYdbDatabaseServerlessServerlessDatabaseArgs>());
            set => _serverlessDatabases = value;
        }

        public GetYdbDatabaseServerlessArgs()
        {
        }
        public static new GetYdbDatabaseServerlessArgs Empty => new GetYdbDatabaseServerlessArgs();
    }

    public sealed class GetYdbDatabaseServerlessInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("databaseId")]
        public Input<string>? DatabaseId { get; set; }

        [Input("deletionProtection")]
        public Input<bool>? DeletionProtection { get; set; }

        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("serverlessDatabases")]
        private InputList<Inputs.GetYdbDatabaseServerlessServerlessDatabaseInputArgs>? _serverlessDatabases;
        public InputList<Inputs.GetYdbDatabaseServerlessServerlessDatabaseInputArgs> ServerlessDatabases
        {
            get => _serverlessDatabases ?? (_serverlessDatabases = new InputList<Inputs.GetYdbDatabaseServerlessServerlessDatabaseInputArgs>());
            set => _serverlessDatabases = value;
        }

        public GetYdbDatabaseServerlessInvokeArgs()
        {
        }
        public static new GetYdbDatabaseServerlessInvokeArgs Empty => new GetYdbDatabaseServerlessInvokeArgs();
    }


    [OutputType]
    public sealed class GetYdbDatabaseServerlessResult
    {
        public readonly string CreatedAt;
        public readonly string? DatabaseId;
        public readonly string DatabasePath;
        public readonly bool DeletionProtection;
        public readonly string Description;
        public readonly string DocumentApiEndpoint;
        public readonly string? FolderId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableDictionary<string, string> Labels;
        public readonly string LocationId;
        public readonly string? Name;
        public readonly ImmutableArray<Outputs.GetYdbDatabaseServerlessServerlessDatabaseResult> ServerlessDatabases;
        public readonly string Status;
        public readonly bool TlsEnabled;
        public readonly string YdbApiEndpoint;
        public readonly string YdbFullEndpoint;

        [OutputConstructor]
        private GetYdbDatabaseServerlessResult(
            string createdAt,

            string? databaseId,

            string databasePath,

            bool deletionProtection,

            string description,

            string documentApiEndpoint,

            string? folderId,

            string id,

            ImmutableDictionary<string, string> labels,

            string locationId,

            string? name,

            ImmutableArray<Outputs.GetYdbDatabaseServerlessServerlessDatabaseResult> serverlessDatabases,

            string status,

            bool tlsEnabled,

            string ydbApiEndpoint,

            string ydbFullEndpoint)
        {
            CreatedAt = createdAt;
            DatabaseId = databaseId;
            DatabasePath = databasePath;
            DeletionProtection = deletionProtection;
            Description = description;
            DocumentApiEndpoint = documentApiEndpoint;
            FolderId = folderId;
            Id = id;
            Labels = labels;
            LocationId = locationId;
            Name = name;
            ServerlessDatabases = serverlessDatabases;
            Status = status;
            TlsEnabled = tlsEnabled;
            YdbApiEndpoint = ydbApiEndpoint;
            YdbFullEndpoint = ydbFullEndpoint;
        }
    }
}
