// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    /// <summary>
    /// A Disk Placement Group resource. For more information, see
    /// [the official documentation](https://cloud.yandex.com/docs/compute/concepts/disk#nr-disks).
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Yandex = Pulumi.Yandex;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var group1 = new Yandex.ComputeDiskPlacementGroup("group1", new()
    ///     {
    ///         Description = "my description",
    ///         FolderId = "abc*********123",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// A Disk Placement Group can be imported using any of these accepted formats:
    /// 
    /// ```sh
    /// $ pulumi import yandex:index/computeDiskPlacementGroup:ComputeDiskPlacementGroup default disk_placement_group_id
    /// ```
    /// </summary>
    [YandexResourceType("yandex:index/computeDiskPlacementGroup:ComputeDiskPlacementGroup")]
    public partial class ComputeDiskPlacementGroup : global::Pulumi.CustomResource
    {
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// A description of the Disk Placement Group.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Folder that the resource belongs to. If value is omitted, the default provider folder is used.
        /// </summary>
        [Output("folderId")]
        public Output<string> FolderId { get; private set; } = null!;

        /// <summary>
        /// A set of key/value label pairs to assign to the Disk Placement Group.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// The name of the Disk Placement Group.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Status of the Disk Placement Group.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// ID of the zone where the Disk Placement Group resides. Default is `ru-central1-b`
        /// </summary>
        [Output("zone")]
        public Output<string?> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a ComputeDiskPlacementGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ComputeDiskPlacementGroup(string name, ComputeDiskPlacementGroupArgs? args = null, CustomResourceOptions? options = null)
            : base("yandex:index/computeDiskPlacementGroup:ComputeDiskPlacementGroup", name, args ?? new ComputeDiskPlacementGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ComputeDiskPlacementGroup(string name, Input<string> id, ComputeDiskPlacementGroupState? state = null, CustomResourceOptions? options = null)
            : base("yandex:index/computeDiskPlacementGroup:ComputeDiskPlacementGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/heyzling/pulumi-yandex/releases/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ComputeDiskPlacementGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ComputeDiskPlacementGroup Get(string name, Input<string> id, ComputeDiskPlacementGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new ComputeDiskPlacementGroup(name, id, state, options);
        }
    }

    public sealed class ComputeDiskPlacementGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description of the Disk Placement Group.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Folder that the resource belongs to. If value is omitted, the default provider folder is used.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// A set of key/value label pairs to assign to the Disk Placement Group.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The name of the Disk Placement Group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// ID of the zone where the Disk Placement Group resides. Default is `ru-central1-b`
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public ComputeDiskPlacementGroupArgs()
        {
        }
        public static new ComputeDiskPlacementGroupArgs Empty => new ComputeDiskPlacementGroupArgs();
    }

    public sealed class ComputeDiskPlacementGroupState : global::Pulumi.ResourceArgs
    {
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// A description of the Disk Placement Group.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Folder that the resource belongs to. If value is omitted, the default provider folder is used.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// A set of key/value label pairs to assign to the Disk Placement Group.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The name of the Disk Placement Group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Status of the Disk Placement Group.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// ID of the zone where the Disk Placement Group resides. Default is `ru-central1-b`
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public ComputeDiskPlacementGroupState()
        {
        }
        public static new ComputeDiskPlacementGroupState Empty => new ComputeDiskPlacementGroupState();
    }
}
