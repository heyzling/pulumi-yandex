// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    public static class GetContainerRegistryIpPermission
    {
        public static Task<GetContainerRegistryIpPermissionResult> InvokeAsync(GetContainerRegistryIpPermissionArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetContainerRegistryIpPermissionResult>("yandex:index/getContainerRegistryIpPermission:getContainerRegistryIpPermission", args ?? new GetContainerRegistryIpPermissionArgs(), options.WithDefaults());

        public static Output<GetContainerRegistryIpPermissionResult> Invoke(GetContainerRegistryIpPermissionInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetContainerRegistryIpPermissionResult>("yandex:index/getContainerRegistryIpPermission:getContainerRegistryIpPermission", args ?? new GetContainerRegistryIpPermissionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetContainerRegistryIpPermissionArgs : global::Pulumi.InvokeArgs
    {
        [Input("registryId")]
        public string? RegistryId { get; set; }

        [Input("registryName")]
        public string? RegistryName { get; set; }

        public GetContainerRegistryIpPermissionArgs()
        {
        }
        public static new GetContainerRegistryIpPermissionArgs Empty => new GetContainerRegistryIpPermissionArgs();
    }

    public sealed class GetContainerRegistryIpPermissionInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("registryId")]
        public Input<string>? RegistryId { get; set; }

        [Input("registryName")]
        public Input<string>? RegistryName { get; set; }

        public GetContainerRegistryIpPermissionInvokeArgs()
        {
        }
        public static new GetContainerRegistryIpPermissionInvokeArgs Empty => new GetContainerRegistryIpPermissionInvokeArgs();
    }


    [OutputType]
    public sealed class GetContainerRegistryIpPermissionResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Pulls;
        public readonly ImmutableArray<string> Pushes;
        public readonly string RegistryId;
        public readonly string RegistryName;

        [OutputConstructor]
        private GetContainerRegistryIpPermissionResult(
            string id,

            ImmutableArray<string> pulls,

            ImmutableArray<string> pushes,

            string registryId,

            string registryName)
        {
            Id = id;
            Pulls = pulls;
            Pushes = pushes;
            RegistryId = registryId;
            RegistryName = registryName;
        }
    }
}
