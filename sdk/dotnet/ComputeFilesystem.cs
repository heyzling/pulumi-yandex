// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    /// <summary>
    /// File storage is a virtual file system that can be attached to multiple Compute Cloud VMs in the same availability zone.
    /// 
    /// Users can share files in storage and use them from different VMs.
    /// 
    /// Storage is attached to a VM through the [Filesystem in Userspace](https://en.wikipedia.org/wiki/Filesystem_in_Userspace) (FUSE) interface as a [virtiofs](https://www.kernel.org/doc/html/latest/filesystems/virtiofs.html) device that is not linked to the host file system directly.
    /// 
    /// For more information about filesystems in Yandex.Cloud, see:
    /// 
    /// * [Documentation](https://cloud.yandex.com/docs/compute/concepts/filesystem)
    /// * How-to Guides
    ///     * [Attach filesystem to a VM](https://cloud.yandex.com/en-ru/docs/compute/operations/filesystem/attach-to-vm)
    ///     * [Detach filesystem from VM](https://cloud.yandex.com/en-ru/docs/compute/operations/filesystem/detach-from-vm)
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Yandex = Pulumi.Yandex;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = new Yandex.ComputeFilesystem("default", new()
    ///     {
    ///         Labels = 
    ///         {
    ///             { "environment", "test" },
    ///         },
    ///         Size = 10,
    ///         Type = "network-ssd",
    ///         Zone = "ru-central1-a",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// A filesystem can be imported using any of these accepted formats:
    /// 
    /// ```sh
    /// $ pulumi import yandex:index/computeFilesystem:ComputeFilesystem default filesystem_id
    /// ```
    /// </summary>
    [YandexResourceType("yandex:index/computeFilesystem:ComputeFilesystem")]
    public partial class ComputeFilesystem : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Block size of the filesystem, specified in bytes.
        /// </summary>
        [Output("blockSize")]
        public Output<int?> BlockSize { get; private set; } = null!;

        /// <summary>
        /// Creation timestamp of the filesystem.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Description of the filesystem. Provide this property when you create a resource.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The ID of the folder that the filesystem belongs to. If it is not provided, the default 
        /// provider folder is used.
        /// </summary>
        [Output("folderId")]
        public Output<string> FolderId { get; private set; } = null!;

        /// <summary>
        /// Labels to assign to this filesystem. A list of key/value pairs. For details about the concept, 
        /// see [documentation](https://cloud.yandex.com/docs/overview/concepts/services#labels).
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// Name of the filesystem. Provide this property when you create a resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Size of the filesystem, specified in GB.
        /// </summary>
        [Output("size")]
        public Output<int?> Size { get; private set; } = null!;

        /// <summary>
        /// The status of the filesystem.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Type of filesystem to create. Type `network-hdd` is set by default.
        /// </summary>
        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;

        /// <summary>
        /// Availability zone where the filesystem will reside.
        /// </summary>
        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a ComputeFilesystem resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ComputeFilesystem(string name, ComputeFilesystemArgs? args = null, CustomResourceOptions? options = null)
            : base("yandex:index/computeFilesystem:ComputeFilesystem", name, args ?? new ComputeFilesystemArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ComputeFilesystem(string name, Input<string> id, ComputeFilesystemState? state = null, CustomResourceOptions? options = null)
            : base("yandex:index/computeFilesystem:ComputeFilesystem", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/heyzling/pulumi-yandex/releases/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ComputeFilesystem resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ComputeFilesystem Get(string name, Input<string> id, ComputeFilesystemState? state = null, CustomResourceOptions? options = null)
        {
            return new ComputeFilesystem(name, id, state, options);
        }
    }

    public sealed class ComputeFilesystemArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Block size of the filesystem, specified in bytes.
        /// </summary>
        [Input("blockSize")]
        public Input<int>? BlockSize { get; set; }

        /// <summary>
        /// Description of the filesystem. Provide this property when you create a resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The ID of the folder that the filesystem belongs to. If it is not provided, the default 
        /// provider folder is used.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels to assign to this filesystem. A list of key/value pairs. For details about the concept, 
        /// see [documentation](https://cloud.yandex.com/docs/overview/concepts/services#labels).
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Name of the filesystem. Provide this property when you create a resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Size of the filesystem, specified in GB.
        /// </summary>
        [Input("size")]
        public Input<int>? Size { get; set; }

        /// <summary>
        /// Type of filesystem to create. Type `network-hdd` is set by default.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// Availability zone where the filesystem will reside.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public ComputeFilesystemArgs()
        {
        }
        public static new ComputeFilesystemArgs Empty => new ComputeFilesystemArgs();
    }

    public sealed class ComputeFilesystemState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Block size of the filesystem, specified in bytes.
        /// </summary>
        [Input("blockSize")]
        public Input<int>? BlockSize { get; set; }

        /// <summary>
        /// Creation timestamp of the filesystem.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Description of the filesystem. Provide this property when you create a resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The ID of the folder that the filesystem belongs to. If it is not provided, the default 
        /// provider folder is used.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels to assign to this filesystem. A list of key/value pairs. For details about the concept, 
        /// see [documentation](https://cloud.yandex.com/docs/overview/concepts/services#labels).
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Name of the filesystem. Provide this property when you create a resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Size of the filesystem, specified in GB.
        /// </summary>
        [Input("size")]
        public Input<int>? Size { get; set; }

        /// <summary>
        /// The status of the filesystem.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Type of filesystem to create. Type `network-hdd` is set by default.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// Availability zone where the filesystem will reside.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public ComputeFilesystemState()
        {
        }
        public static new ComputeFilesystemState Empty => new ComputeFilesystemState();
    }
}
