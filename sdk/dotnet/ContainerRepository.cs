// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    /// <summary>
    /// Creates a new container repository. For more information, see
    /// [the official documentation](https://cloud.yandex.com/docs/container-registry/concepts/repository)
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Yandex = Pulumi.Yandex;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var my_registry = new Yandex.ContainerRegistry("my-registry");
    /// 
    ///     var my_repository = new Yandex.ContainerRepository("my-repository");
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// A repository can be imported using the `id` of the resource, e.g.
    /// 
    /// ```sh
    /// $ pulumi import yandex:index/containerRepository:ContainerRepository my-repository repository_id
    /// ```
    /// </summary>
    [YandexResourceType("yandex:index/containerRepository:ContainerRepository")]
    public partial class ContainerRepository : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A name of the repository. The name of the repository should start with id of a container registry and match the name of the images that will be pushed in the repository.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a ContainerRepository resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ContainerRepository(string name, ContainerRepositoryArgs? args = null, CustomResourceOptions? options = null)
            : base("yandex:index/containerRepository:ContainerRepository", name, args ?? new ContainerRepositoryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ContainerRepository(string name, Input<string> id, ContainerRepositoryState? state = null, CustomResourceOptions? options = null)
            : base("yandex:index/containerRepository:ContainerRepository", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/heyzling/pulumi-yandex/releases/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ContainerRepository resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ContainerRepository Get(string name, Input<string> id, ContainerRepositoryState? state = null, CustomResourceOptions? options = null)
        {
            return new ContainerRepository(name, id, state, options);
        }
    }

    public sealed class ContainerRepositoryArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A name of the repository. The name of the repository should start with id of a container registry and match the name of the images that will be pushed in the repository.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ContainerRepositoryArgs()
        {
        }
        public static new ContainerRepositoryArgs Empty => new ContainerRepositoryArgs();
    }

    public sealed class ContainerRepositoryState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A name of the repository. The name of the repository should start with id of a container registry and match the name of the images that will be pushed in the repository.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ContainerRepositoryState()
        {
        }
        public static new ContainerRepositoryState Empty => new ContainerRepositoryState();
    }
}
