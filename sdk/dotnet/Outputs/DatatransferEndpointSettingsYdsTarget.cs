// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex.Outputs
{

    [OutputType]
    public sealed class DatatransferEndpointSettingsYdsTarget
    {
        /// <summary>
        /// Database name.
        /// </summary>
        public readonly string? Database;
        /// <summary>
        /// - (Optional) YDS Endpoint.
        /// </summary>
        public readonly string? Endpoint;
        /// <summary>
        /// Not to split events queue into separate per-table queues.
        /// </summary>
        public readonly bool? SaveTxOrder;
        /// <summary>
        /// List of security groups that the transfer associated with this endpoint should use.
        /// </summary>
        public readonly ImmutableArray<string> SecurityGroups;
        /// <summary>
        /// Data serialization settings.
        /// </summary>
        public readonly Outputs.DatatransferEndpointSettingsYdsTargetSerializer? Serializer;
        /// <summary>
        /// - (Required) Service account ID for interaction with database.
        /// </summary>
        public readonly string? ServiceAccountId;
        /// <summary>
        /// - (Optional) Stream.
        /// </summary>
        public readonly string? Stream;
        /// <summary>
        /// Identifier of the Yandex Cloud VPC subnetwork to user for accessing the database. If omitted, the server has to be accessible via Internet.
        /// </summary>
        public readonly string? SubnetId;

        [OutputConstructor]
        private DatatransferEndpointSettingsYdsTarget(
            string? database,

            string? endpoint,

            bool? saveTxOrder,

            ImmutableArray<string> securityGroups,

            Outputs.DatatransferEndpointSettingsYdsTargetSerializer? serializer,

            string? serviceAccountId,

            string? stream,

            string? subnetId)
        {
            Database = database;
            Endpoint = endpoint;
            SaveTxOrder = saveTxOrder;
            SecurityGroups = securityGroups;
            Serializer = serializer;
            ServiceAccountId = serviceAccountId;
            Stream = stream;
            SubnetId = subnetId;
        }
    }
}
