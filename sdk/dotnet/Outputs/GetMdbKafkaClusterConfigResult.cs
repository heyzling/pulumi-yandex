// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex.Outputs
{

    [OutputType]
    public sealed class GetMdbKafkaClusterConfigResult
    {
        public readonly Outputs.GetMdbKafkaClusterConfigAccessResult Access;
        public readonly bool? AssignPublicIp;
        public readonly int? BrokersCount;
        public readonly Outputs.GetMdbKafkaClusterConfigDiskSizeAutoscalingResult DiskSizeAutoscaling;
        public readonly Outputs.GetMdbKafkaClusterConfigKafkaResult Kafka;
        public readonly bool? SchemaRegistry;
        public readonly bool? UnmanagedTopics;
        public readonly string Version;
        public readonly ImmutableArray<string> Zones;
        public readonly Outputs.GetMdbKafkaClusterConfigZookeeperResult Zookeeper;

        [OutputConstructor]
        private GetMdbKafkaClusterConfigResult(
            Outputs.GetMdbKafkaClusterConfigAccessResult access,

            bool? assignPublicIp,

            int? brokersCount,

            Outputs.GetMdbKafkaClusterConfigDiskSizeAutoscalingResult diskSizeAutoscaling,

            Outputs.GetMdbKafkaClusterConfigKafkaResult kafka,

            bool? schemaRegistry,

            bool? unmanagedTopics,

            string version,

            ImmutableArray<string> zones,

            Outputs.GetMdbKafkaClusterConfigZookeeperResult zookeeper)
        {
            Access = access;
            AssignPublicIp = assignPublicIp;
            BrokersCount = brokersCount;
            DiskSizeAutoscaling = diskSizeAutoscaling;
            Kafka = kafka;
            SchemaRegistry = schemaRegistry;
            UnmanagedTopics = unmanagedTopics;
            Version = version;
            Zones = zones;
            Zookeeper = zookeeper;
        }
    }
}
