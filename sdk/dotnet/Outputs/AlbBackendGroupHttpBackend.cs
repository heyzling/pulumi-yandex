// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex.Outputs
{

    [OutputType]
    public sealed class AlbBackendGroupHttpBackend
    {
        /// <summary>
        /// Healthcheck specification that will be used by this backend. Structure is documented below.
        /// </summary>
        public readonly Outputs.AlbBackendGroupHttpBackendHealthcheck? Healthcheck;
        /// <summary>
        /// Enables HTTP2 for upstream requests. If not set, HTTP 1.1 will be used by default.
        /// </summary>
        public readonly bool? Http2;
        /// <summary>
        /// Load Balancing Config specification that will be used by this backend. Structure is documented below.
        /// </summary>
        public readonly Outputs.AlbBackendGroupHttpBackendLoadBalancingConfig? LoadBalancingConfig;
        /// <summary>
        /// Name of the backend.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Port for incoming traffic.
        /// </summary>
        public readonly int? Port;
        public readonly string? StorageBucket;
        /// <summary>
        /// References target groups for the backend.
        /// </summary>
        public readonly ImmutableArray<string> TargetGroupIds;
        /// <summary>
        /// Tls specification that will be used by this backend. Structure is documented below.
        /// </summary>
        public readonly Outputs.AlbBackendGroupHttpBackendTls? Tls;
        /// <summary>
        /// Weight of the backend. Traffic will be split between backends of the same BackendGroup according to their weights.
        /// </summary>
        public readonly int? Weight;

        [OutputConstructor]
        private AlbBackendGroupHttpBackend(
            Outputs.AlbBackendGroupHttpBackendHealthcheck? healthcheck,

            bool? http2,

            Outputs.AlbBackendGroupHttpBackendLoadBalancingConfig? loadBalancingConfig,

            string name,

            int? port,

            string? storageBucket,

            ImmutableArray<string> targetGroupIds,

            Outputs.AlbBackendGroupHttpBackendTls? tls,

            int? weight)
        {
            Healthcheck = healthcheck;
            Http2 = http2;
            LoadBalancingConfig = loadBalancingConfig;
            Name = name;
            Port = port;
            StorageBucket = storageBucket;
            TargetGroupIds = targetGroupIds;
            Tls = tls;
            Weight = weight;
        }
    }
}
