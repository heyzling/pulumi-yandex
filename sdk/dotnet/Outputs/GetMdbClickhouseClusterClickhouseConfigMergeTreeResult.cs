// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex.Outputs
{

    [OutputType]
    public sealed class GetMdbClickhouseClusterClickhouseConfigMergeTreeResult
    {
        public readonly bool CheckSampleColumnIsCorrect;
        public readonly int CleanupDelayPeriod;
        public readonly int MaxAvgPartSizeForTooManyParts;
        public readonly int MaxBytesToMergeAtMinSpaceInPool;
        public readonly int MaxCleanupDelayPeriod;
        public readonly int MaxMergeSelectingSleepMs;
        public readonly int MaxNumberOfMergesWithTtlInPool;
        public readonly int MaxPartsInTotal;
        public readonly int MaxReplicatedMergesInQueue;
        public readonly int MergeMaxBlockSize;
        public readonly int MergeSelectingSleepMs;
        public readonly int MergeWithRecompressionTtlTimeout;
        public readonly int MergeWithTtlTimeout;
        public readonly bool MinAgeToForceMergeOnPartitionOnly;
        public readonly int MinAgeToForceMergeSeconds;
        public readonly int MinBytesForWidePart;
        public readonly int MinRowsForWidePart;
        public readonly int NumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge;
        public readonly int PartsToDelayInsert;
        public readonly int PartsToThrowInsert;
        public readonly int ReplicatedDeduplicationWindow;
        public readonly int ReplicatedDeduplicationWindowSeconds;
        public readonly bool TtlOnlyDropParts;

        [OutputConstructor]
        private GetMdbClickhouseClusterClickhouseConfigMergeTreeResult(
            bool checkSampleColumnIsCorrect,

            int cleanupDelayPeriod,

            int maxAvgPartSizeForTooManyParts,

            int maxBytesToMergeAtMinSpaceInPool,

            int maxCleanupDelayPeriod,

            int maxMergeSelectingSleepMs,

            int maxNumberOfMergesWithTtlInPool,

            int maxPartsInTotal,

            int maxReplicatedMergesInQueue,

            int mergeMaxBlockSize,

            int mergeSelectingSleepMs,

            int mergeWithRecompressionTtlTimeout,

            int mergeWithTtlTimeout,

            bool minAgeToForceMergeOnPartitionOnly,

            int minAgeToForceMergeSeconds,

            int minBytesForWidePart,

            int minRowsForWidePart,

            int numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge,

            int partsToDelayInsert,

            int partsToThrowInsert,

            int replicatedDeduplicationWindow,

            int replicatedDeduplicationWindowSeconds,

            bool ttlOnlyDropParts)
        {
            CheckSampleColumnIsCorrect = checkSampleColumnIsCorrect;
            CleanupDelayPeriod = cleanupDelayPeriod;
            MaxAvgPartSizeForTooManyParts = maxAvgPartSizeForTooManyParts;
            MaxBytesToMergeAtMinSpaceInPool = maxBytesToMergeAtMinSpaceInPool;
            MaxCleanupDelayPeriod = maxCleanupDelayPeriod;
            MaxMergeSelectingSleepMs = maxMergeSelectingSleepMs;
            MaxNumberOfMergesWithTtlInPool = maxNumberOfMergesWithTtlInPool;
            MaxPartsInTotal = maxPartsInTotal;
            MaxReplicatedMergesInQueue = maxReplicatedMergesInQueue;
            MergeMaxBlockSize = mergeMaxBlockSize;
            MergeSelectingSleepMs = mergeSelectingSleepMs;
            MergeWithRecompressionTtlTimeout = mergeWithRecompressionTtlTimeout;
            MergeWithTtlTimeout = mergeWithTtlTimeout;
            MinAgeToForceMergeOnPartitionOnly = minAgeToForceMergeOnPartitionOnly;
            MinAgeToForceMergeSeconds = minAgeToForceMergeSeconds;
            MinBytesForWidePart = minBytesForWidePart;
            MinRowsForWidePart = minRowsForWidePart;
            NumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge = numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge;
            PartsToDelayInsert = partsToDelayInsert;
            PartsToThrowInsert = partsToThrowInsert;
            ReplicatedDeduplicationWindow = replicatedDeduplicationWindow;
            ReplicatedDeduplicationWindowSeconds = replicatedDeduplicationWindowSeconds;
            TtlOnlyDropParts = ttlOnlyDropParts;
        }
    }
}
