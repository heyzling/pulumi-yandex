// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex.Outputs
{

    [OutputType]
    public sealed class MonitoringDashboardWidgetChart
    {
        /// <summary>
        /// Chart ID.
        /// </summary>
        public readonly string? ChartId;
        /// <summary>
        /// Chart description in dashboard (not enabled in UI).
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Enable legend under chart.
        /// </summary>
        public readonly bool? DisplayLegend;
        /// <summary>
        /// Fixed time interval for chart. Values:
        /// - FREEZE_DURATION_HOUR: Last hour.
        /// - FREEZE_DURATION_DAY: Last day = last 24 hours.
        /// - FREEZE_DURATION_WEEK: Last 7 days.
        /// - FREEZE_DURATION_MONTH: Last 31 days.
        /// </summary>
        public readonly string? Freeze;
        /// <summary>
        /// Names settings.
        /// </summary>
        public readonly ImmutableArray<Outputs.MonitoringDashboardWidgetChartNameHidingSetting> NameHidingSettings;
        /// <summary>
        /// Queries settings.
        /// </summary>
        public readonly ImmutableArray<Outputs.MonitoringDashboardWidgetChartQuery> Queries;
        /// <summary>
        /// Time series settings.
        /// </summary>
        public readonly ImmutableArray<Outputs.MonitoringDashboardWidgetChartSeriesOverride> SeriesOverrides;
        /// <summary>
        /// Chart widget title.
        /// </summary>
        public readonly string? Title;
        /// <summary>
        /// Visualization settings.
        /// </summary>
        public readonly ImmutableArray<Outputs.MonitoringDashboardWidgetChartVisualizationSetting> VisualizationSettings;

        [OutputConstructor]
        private MonitoringDashboardWidgetChart(
            string? chartId,

            string? description,

            bool? displayLegend,

            string? freeze,

            ImmutableArray<Outputs.MonitoringDashboardWidgetChartNameHidingSetting> nameHidingSettings,

            ImmutableArray<Outputs.MonitoringDashboardWidgetChartQuery> queries,

            ImmutableArray<Outputs.MonitoringDashboardWidgetChartSeriesOverride> seriesOverrides,

            string? title,

            ImmutableArray<Outputs.MonitoringDashboardWidgetChartVisualizationSetting> visualizationSettings)
        {
            ChartId = chartId;
            Description = description;
            DisplayLegend = displayLegend;
            Freeze = freeze;
            NameHidingSettings = nameHidingSettings;
            Queries = queries;
            SeriesOverrides = seriesOverrides;
            Title = title;
            VisualizationSettings = visualizationSettings;
        }
    }
}
