// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    /// <summary>
    /// Creates a new container repository lifecycle policy. For more information, see
    /// [the official documentation](https://cloud.yandex.com/en-ru/docs/container-registry/concepts/lifecycle-policy)
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Yandex = Pulumi.Yandex;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myRegistry = new Yandex.ContainerRegistry("myRegistry");
    /// 
    ///     var myRepository = new Yandex.ContainerRepository("myRepository");
    /// 
    ///     var myLifecyclePolicy = new Yandex.ContainerRepositoryLifecyclePolicy("myLifecyclePolicy", new()
    ///     {
    ///         Status = "active",
    ///         RepositoryId = myRepository.Id,
    ///         Rules = new[]
    ///         {
    ///             new Yandex.Inputs.ContainerRepositoryLifecyclePolicyRuleArgs
    ///             {
    ///                 Description = "my description",
    ///                 Untagged = true,
    ///                 TagRegexp = ".*",
    ///                 RetainedTop = 1,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// A lifecycle policy can be imported using the `id` of the resource, e.g.
    /// 
    /// bash
    /// 
    /// ```sh
    /// $ pulumi import yandex:index/containerRepositoryLifecyclePolicy:ContainerRepositoryLifecyclePolicy my_lifecycle_policy lifecycle_policy_id
    /// ```
    /// </summary>
    [YandexResourceType("yandex:index/containerRepositoryLifecyclePolicy:ContainerRepositoryLifecyclePolicy")]
    public partial class ContainerRepositoryLifecyclePolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Creation timestamp of the instance.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Description of the lifecycle policy.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Lifecycle policy name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the repository that the resource belongs to.
        /// </summary>
        [Output("repositoryId")]
        public Output<string> RepositoryId { get; private set; } = null!;

        [Output("rules")]
        public Output<ImmutableArray<Outputs.ContainerRepositoryLifecyclePolicyRule>> Rules { get; private set; } = null!;

        /// <summary>
        /// The status of lifecycle policy. Must be `active` or `disabled`.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a ContainerRepositoryLifecyclePolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ContainerRepositoryLifecyclePolicy(string name, ContainerRepositoryLifecyclePolicyArgs args, CustomResourceOptions? options = null)
            : base("yandex:index/containerRepositoryLifecyclePolicy:ContainerRepositoryLifecyclePolicy", name, args ?? new ContainerRepositoryLifecyclePolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ContainerRepositoryLifecyclePolicy(string name, Input<string> id, ContainerRepositoryLifecyclePolicyState? state = null, CustomResourceOptions? options = null)
            : base("yandex:index/containerRepositoryLifecyclePolicy:ContainerRepositoryLifecyclePolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/heyzling/pulumi-yandex/releases/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ContainerRepositoryLifecyclePolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ContainerRepositoryLifecyclePolicy Get(string name, Input<string> id, ContainerRepositoryLifecyclePolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new ContainerRepositoryLifecyclePolicy(name, id, state, options);
        }
    }

    public sealed class ContainerRepositoryLifecyclePolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the lifecycle policy.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Lifecycle policy name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the repository that the resource belongs to.
        /// </summary>
        [Input("repositoryId", required: true)]
        public Input<string> RepositoryId { get; set; } = null!;

        [Input("rules")]
        private InputList<Inputs.ContainerRepositoryLifecyclePolicyRuleArgs>? _rules;
        public InputList<Inputs.ContainerRepositoryLifecyclePolicyRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.ContainerRepositoryLifecyclePolicyRuleArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// The status of lifecycle policy. Must be `active` or `disabled`.
        /// </summary>
        [Input("status", required: true)]
        public Input<string> Status { get; set; } = null!;

        public ContainerRepositoryLifecyclePolicyArgs()
        {
        }
        public static new ContainerRepositoryLifecyclePolicyArgs Empty => new ContainerRepositoryLifecyclePolicyArgs();
    }

    public sealed class ContainerRepositoryLifecyclePolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Creation timestamp of the instance.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Description of the lifecycle policy.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Lifecycle policy name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the repository that the resource belongs to.
        /// </summary>
        [Input("repositoryId")]
        public Input<string>? RepositoryId { get; set; }

        [Input("rules")]
        private InputList<Inputs.ContainerRepositoryLifecyclePolicyRuleGetArgs>? _rules;
        public InputList<Inputs.ContainerRepositoryLifecyclePolicyRuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.ContainerRepositoryLifecyclePolicyRuleGetArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// The status of lifecycle policy. Must be `active` or `disabled`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public ContainerRepositoryLifecyclePolicyState()
        {
        }
        public static new ContainerRepositoryLifecyclePolicyState Empty => new ContainerRepositoryLifecyclePolicyState();
    }
}
