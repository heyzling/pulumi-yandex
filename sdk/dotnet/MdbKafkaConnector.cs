// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    [YandexResourceType("yandex:index/mdbKafkaConnector:MdbKafkaConnector")]
    public partial class MdbKafkaConnector : global::Pulumi.CustomResource
    {
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        [Output("connectorConfigMirrormakers")]
        public Output<ImmutableArray<Outputs.MdbKafkaConnectorConnectorConfigMirrormaker>> ConnectorConfigMirrormakers { get; private set; } = null!;

        [Output("connectorConfigS3Sinks")]
        public Output<ImmutableArray<Outputs.MdbKafkaConnectorConnectorConfigS3Sink>> ConnectorConfigS3Sinks { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("properties")]
        public Output<ImmutableDictionary<string, string>> Properties { get; private set; } = null!;

        [Output("tasksMax")]
        public Output<int?> TasksMax { get; private set; } = null!;


        /// <summary>
        /// Create a MdbKafkaConnector resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MdbKafkaConnector(string name, MdbKafkaConnectorArgs args, CustomResourceOptions? options = null)
            : base("yandex:index/mdbKafkaConnector:MdbKafkaConnector", name, args ?? new MdbKafkaConnectorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MdbKafkaConnector(string name, Input<string> id, MdbKafkaConnectorState? state = null, CustomResourceOptions? options = null)
            : base("yandex:index/mdbKafkaConnector:MdbKafkaConnector", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/heyzling/pulumi-yandex/releases/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MdbKafkaConnector resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MdbKafkaConnector Get(string name, Input<string> id, MdbKafkaConnectorState? state = null, CustomResourceOptions? options = null)
        {
            return new MdbKafkaConnector(name, id, state, options);
        }
    }

    public sealed class MdbKafkaConnectorArgs : global::Pulumi.ResourceArgs
    {
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        [Input("connectorConfigMirrormakers")]
        private InputList<Inputs.MdbKafkaConnectorConnectorConfigMirrormakerArgs>? _connectorConfigMirrormakers;
        public InputList<Inputs.MdbKafkaConnectorConnectorConfigMirrormakerArgs> ConnectorConfigMirrormakers
        {
            get => _connectorConfigMirrormakers ?? (_connectorConfigMirrormakers = new InputList<Inputs.MdbKafkaConnectorConnectorConfigMirrormakerArgs>());
            set => _connectorConfigMirrormakers = value;
        }

        [Input("connectorConfigS3Sinks")]
        private InputList<Inputs.MdbKafkaConnectorConnectorConfigS3SinkArgs>? _connectorConfigS3Sinks;
        public InputList<Inputs.MdbKafkaConnectorConnectorConfigS3SinkArgs> ConnectorConfigS3Sinks
        {
            get => _connectorConfigS3Sinks ?? (_connectorConfigS3Sinks = new InputList<Inputs.MdbKafkaConnectorConnectorConfigS3SinkArgs>());
            set => _connectorConfigS3Sinks = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("properties")]
        private InputMap<string>? _properties;
        public InputMap<string> Properties
        {
            get => _properties ?? (_properties = new InputMap<string>());
            set => _properties = value;
        }

        [Input("tasksMax")]
        public Input<int>? TasksMax { get; set; }

        public MdbKafkaConnectorArgs()
        {
        }
        public static new MdbKafkaConnectorArgs Empty => new MdbKafkaConnectorArgs();
    }

    public sealed class MdbKafkaConnectorState : global::Pulumi.ResourceArgs
    {
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        [Input("connectorConfigMirrormakers")]
        private InputList<Inputs.MdbKafkaConnectorConnectorConfigMirrormakerGetArgs>? _connectorConfigMirrormakers;
        public InputList<Inputs.MdbKafkaConnectorConnectorConfigMirrormakerGetArgs> ConnectorConfigMirrormakers
        {
            get => _connectorConfigMirrormakers ?? (_connectorConfigMirrormakers = new InputList<Inputs.MdbKafkaConnectorConnectorConfigMirrormakerGetArgs>());
            set => _connectorConfigMirrormakers = value;
        }

        [Input("connectorConfigS3Sinks")]
        private InputList<Inputs.MdbKafkaConnectorConnectorConfigS3SinkGetArgs>? _connectorConfigS3Sinks;
        public InputList<Inputs.MdbKafkaConnectorConnectorConfigS3SinkGetArgs> ConnectorConfigS3Sinks
        {
            get => _connectorConfigS3Sinks ?? (_connectorConfigS3Sinks = new InputList<Inputs.MdbKafkaConnectorConnectorConfigS3SinkGetArgs>());
            set => _connectorConfigS3Sinks = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("properties")]
        private InputMap<string>? _properties;
        public InputMap<string> Properties
        {
            get => _properties ?? (_properties = new InputMap<string>());
            set => _properties = value;
        }

        [Input("tasksMax")]
        public Input<int>? TasksMax { get; set; }

        public MdbKafkaConnectorState()
        {
        }
        public static new MdbKafkaConnectorState Empty => new MdbKafkaConnectorState();
    }
}
