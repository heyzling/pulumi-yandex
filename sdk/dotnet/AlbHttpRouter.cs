// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    /// <summary>
    /// Creates an HTTP Router in the specified folder.
    /// For more information, see [the official documentation](https://cloud.yandex.com/en/docs/application-load-balancer/concepts/http-router).
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Yandex = Pulumi.Yandex;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var tf_router = new Yandex.AlbHttpRouter("tf-router", new()
    ///     {
    ///         Labels = 
    ///         {
    ///             { "empty-label", "s" },
    ///             { "tf-label", "tf-label-value" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// An HTTP Router can be imported using the `id` of the resource, e.g.:
    /// 
    /// ```sh
    /// $ pulumi import yandex:index/albHttpRouter:AlbHttpRouter default http_router_id
    /// ```
    /// </summary>
    [YandexResourceType("yandex:index/albHttpRouter:AlbHttpRouter")]
    public partial class AlbHttpRouter : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The HTTP Router creation timestamp.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// An optional description of the HTTP Router. Provide this property when
        /// you create the resource.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The ID of the folder to which the resource belongs.
        /// If omitted, the provider folder is used.
        /// </summary>
        [Output("folderId")]
        public Output<string> FolderId { get; private set; } = null!;

        /// <summary>
        /// Labels to assign to this HTTP Router. A list of key/value pairs.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// Name of the HTTP Router. Provided by the client when the HTTP Router is created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("routeOptions")]
        public Output<Outputs.AlbHttpRouterRouteOptions?> RouteOptions { get; private set; } = null!;


        /// <summary>
        /// Create a AlbHttpRouter resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AlbHttpRouter(string name, AlbHttpRouterArgs? args = null, CustomResourceOptions? options = null)
            : base("yandex:index/albHttpRouter:AlbHttpRouter", name, args ?? new AlbHttpRouterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AlbHttpRouter(string name, Input<string> id, AlbHttpRouterState? state = null, CustomResourceOptions? options = null)
            : base("yandex:index/albHttpRouter:AlbHttpRouter", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/heyzling/pulumi-yandex/releases/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AlbHttpRouter resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AlbHttpRouter Get(string name, Input<string> id, AlbHttpRouterState? state = null, CustomResourceOptions? options = null)
        {
            return new AlbHttpRouter(name, id, state, options);
        }
    }

    public sealed class AlbHttpRouterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An optional description of the HTTP Router. Provide this property when
        /// you create the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The ID of the folder to which the resource belongs.
        /// If omitted, the provider folder is used.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels to assign to this HTTP Router. A list of key/value pairs.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Name of the HTTP Router. Provided by the client when the HTTP Router is created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("routeOptions")]
        public Input<Inputs.AlbHttpRouterRouteOptionsArgs>? RouteOptions { get; set; }

        public AlbHttpRouterArgs()
        {
        }
        public static new AlbHttpRouterArgs Empty => new AlbHttpRouterArgs();
    }

    public sealed class AlbHttpRouterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The HTTP Router creation timestamp.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// An optional description of the HTTP Router. Provide this property when
        /// you create the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The ID of the folder to which the resource belongs.
        /// If omitted, the provider folder is used.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels to assign to this HTTP Router. A list of key/value pairs.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Name of the HTTP Router. Provided by the client when the HTTP Router is created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("routeOptions")]
        public Input<Inputs.AlbHttpRouterRouteOptionsGetArgs>? RouteOptions { get; set; }

        public AlbHttpRouterState()
        {
        }
        public static new AlbHttpRouterState Empty => new AlbHttpRouterState();
    }
}
