// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    /// <summary>
    /// Get information about a Yandex YDB Topics. For more information, see
    /// [the official documentation](https://cloud.yandex.ru/docs/ydb/concepts/#ydb).
    /// </summary>
    [YandexResourceType("yandex:index/ydbTopic:YdbTopic")]
    public partial class YdbTopic : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Topic Readers. Types: array[consumer], optional. Default value: null.
        /// </summary>
        [Output("consumers")]
        public Output<ImmutableArray<Outputs.YdbTopicConsumer>> Consumers { get; private set; } = null!;

        /// <summary>
        /// YDB database endpoint. Types: string, required. Default value: "".
        /// </summary>
        [Output("databaseEndpoint")]
        public Output<string> DatabaseEndpoint { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Resource metering mode (`reserved_capacity` - based on the allocated resources or `request_units` - based on actual usage). This option applies to topics in serverless databases. Value type: String.
        /// </summary>
        [Output("meteringMode")]
        public Output<string> MeteringMode { get; private set; } = null!;

        /// <summary>
        /// Topic name. Type: string, required. Default value: "".
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Maximum allowed write speed per partition. If a write speed for a given partition exceeds this value, the write speed will be capped. Value type: integer, default value: 1024 (1MB).
        /// </summary>
        [Output("partitionWriteSpeedKbps")]
        public Output<int> PartitionWriteSpeedKbps { get; private set; } = null!;

        /// <summary>
        /// Number of partitions. Types: integer, optional. Default value: 2.
        /// </summary>
        [Output("partitionsCount")]
        public Output<int> PartitionsCount { get; private set; } = null!;

        [Output("retentionPeriodHours")]
        public Output<int> RetentionPeriodHours { get; private set; } = null!;

        [Output("retentionStorageMb")]
        public Output<int> RetentionStorageMb { get; private set; } = null!;

        /// <summary>
        /// Supported data encodings. Types: array[string]. Default value: ["gzip", "raw", "zstd"].
        /// </summary>
        [Output("supportedCodecs")]
        public Output<ImmutableArray<string>> SupportedCodecs { get; private set; } = null!;


        /// <summary>
        /// Create a YdbTopic resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public YdbTopic(string name, YdbTopicArgs args, CustomResourceOptions? options = null)
            : base("yandex:index/ydbTopic:YdbTopic", name, args ?? new YdbTopicArgs(), MakeResourceOptions(options, ""))
        {
        }

        private YdbTopic(string name, Input<string> id, YdbTopicState? state = null, CustomResourceOptions? options = null)
            : base("yandex:index/ydbTopic:YdbTopic", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/heyzling/pulumi-yandex/releases/",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing YdbTopic resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static YdbTopic Get(string name, Input<string> id, YdbTopicState? state = null, CustomResourceOptions? options = null)
        {
            return new YdbTopic(name, id, state, options);
        }
    }

    public sealed class YdbTopicArgs : global::Pulumi.ResourceArgs
    {
        [Input("consumers")]
        private InputList<Inputs.YdbTopicConsumerArgs>? _consumers;

        /// <summary>
        /// Topic Readers. Types: array[consumer], optional. Default value: null.
        /// </summary>
        public InputList<Inputs.YdbTopicConsumerArgs> Consumers
        {
            get => _consumers ?? (_consumers = new InputList<Inputs.YdbTopicConsumerArgs>());
            set => _consumers = value;
        }

        /// <summary>
        /// YDB database endpoint. Types: string, required. Default value: "".
        /// </summary>
        [Input("databaseEndpoint", required: true)]
        public Input<string> DatabaseEndpoint { get; set; } = null!;

        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Resource metering mode (`reserved_capacity` - based on the allocated resources or `request_units` - based on actual usage). This option applies to topics in serverless databases. Value type: String.
        /// </summary>
        [Input("meteringMode")]
        public Input<string>? MeteringMode { get; set; }

        /// <summary>
        /// Topic name. Type: string, required. Default value: "".
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Maximum allowed write speed per partition. If a write speed for a given partition exceeds this value, the write speed will be capped. Value type: integer, default value: 1024 (1MB).
        /// </summary>
        [Input("partitionWriteSpeedKbps")]
        public Input<int>? PartitionWriteSpeedKbps { get; set; }

        /// <summary>
        /// Number of partitions. Types: integer, optional. Default value: 2.
        /// </summary>
        [Input("partitionsCount")]
        public Input<int>? PartitionsCount { get; set; }

        [Input("retentionPeriodHours")]
        public Input<int>? RetentionPeriodHours { get; set; }

        [Input("retentionStorageMb")]
        public Input<int>? RetentionStorageMb { get; set; }

        [Input("supportedCodecs")]
        private InputList<string>? _supportedCodecs;

        /// <summary>
        /// Supported data encodings. Types: array[string]. Default value: ["gzip", "raw", "zstd"].
        /// </summary>
        public InputList<string> SupportedCodecs
        {
            get => _supportedCodecs ?? (_supportedCodecs = new InputList<string>());
            set => _supportedCodecs = value;
        }

        public YdbTopicArgs()
        {
        }
        public static new YdbTopicArgs Empty => new YdbTopicArgs();
    }

    public sealed class YdbTopicState : global::Pulumi.ResourceArgs
    {
        [Input("consumers")]
        private InputList<Inputs.YdbTopicConsumerGetArgs>? _consumers;

        /// <summary>
        /// Topic Readers. Types: array[consumer], optional. Default value: null.
        /// </summary>
        public InputList<Inputs.YdbTopicConsumerGetArgs> Consumers
        {
            get => _consumers ?? (_consumers = new InputList<Inputs.YdbTopicConsumerGetArgs>());
            set => _consumers = value;
        }

        /// <summary>
        /// YDB database endpoint. Types: string, required. Default value: "".
        /// </summary>
        [Input("databaseEndpoint")]
        public Input<string>? DatabaseEndpoint { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Resource metering mode (`reserved_capacity` - based on the allocated resources or `request_units` - based on actual usage). This option applies to topics in serverless databases. Value type: String.
        /// </summary>
        [Input("meteringMode")]
        public Input<string>? MeteringMode { get; set; }

        /// <summary>
        /// Topic name. Type: string, required. Default value: "".
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Maximum allowed write speed per partition. If a write speed for a given partition exceeds this value, the write speed will be capped. Value type: integer, default value: 1024 (1MB).
        /// </summary>
        [Input("partitionWriteSpeedKbps")]
        public Input<int>? PartitionWriteSpeedKbps { get; set; }

        /// <summary>
        /// Number of partitions. Types: integer, optional. Default value: 2.
        /// </summary>
        [Input("partitionsCount")]
        public Input<int>? PartitionsCount { get; set; }

        [Input("retentionPeriodHours")]
        public Input<int>? RetentionPeriodHours { get; set; }

        [Input("retentionStorageMb")]
        public Input<int>? RetentionStorageMb { get; set; }

        [Input("supportedCodecs")]
        private InputList<string>? _supportedCodecs;

        /// <summary>
        /// Supported data encodings. Types: array[string]. Default value: ["gzip", "raw", "zstd"].
        /// </summary>
        public InputList<string> SupportedCodecs
        {
            get => _supportedCodecs ?? (_supportedCodecs = new InputList<string>());
            set => _supportedCodecs = value;
        }

        public YdbTopicState()
        {
        }
        public static new YdbTopicState Empty => new YdbTopicState();
    }
}
