// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex.Inputs
{

    public sealed class GetMdbClickhouseClusterClickhouseConfigMergeTreeArgs : global::Pulumi.InvokeArgs
    {
        [Input("checkSampleColumnIsCorrect", required: true)]
        public bool CheckSampleColumnIsCorrect { get; set; }

        [Input("cleanupDelayPeriod", required: true)]
        public int CleanupDelayPeriod { get; set; }

        [Input("maxAvgPartSizeForTooManyParts", required: true)]
        public int MaxAvgPartSizeForTooManyParts { get; set; }

        [Input("maxBytesToMergeAtMinSpaceInPool", required: true)]
        public int MaxBytesToMergeAtMinSpaceInPool { get; set; }

        [Input("maxCleanupDelayPeriod", required: true)]
        public int MaxCleanupDelayPeriod { get; set; }

        [Input("maxMergeSelectingSleepMs", required: true)]
        public int MaxMergeSelectingSleepMs { get; set; }

        [Input("maxNumberOfMergesWithTtlInPool", required: true)]
        public int MaxNumberOfMergesWithTtlInPool { get; set; }

        [Input("maxPartsInTotal", required: true)]
        public int MaxPartsInTotal { get; set; }

        [Input("maxReplicatedMergesInQueue", required: true)]
        public int MaxReplicatedMergesInQueue { get; set; }

        [Input("mergeMaxBlockSize", required: true)]
        public int MergeMaxBlockSize { get; set; }

        [Input("mergeSelectingSleepMs", required: true)]
        public int MergeSelectingSleepMs { get; set; }

        [Input("mergeWithRecompressionTtlTimeout", required: true)]
        public int MergeWithRecompressionTtlTimeout { get; set; }

        [Input("mergeWithTtlTimeout", required: true)]
        public int MergeWithTtlTimeout { get; set; }

        [Input("minAgeToForceMergeOnPartitionOnly", required: true)]
        public bool MinAgeToForceMergeOnPartitionOnly { get; set; }

        [Input("minAgeToForceMergeSeconds", required: true)]
        public int MinAgeToForceMergeSeconds { get; set; }

        [Input("minBytesForWidePart", required: true)]
        public int MinBytesForWidePart { get; set; }

        [Input("minRowsForWidePart", required: true)]
        public int MinRowsForWidePart { get; set; }

        [Input("numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge", required: true)]
        public int NumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge { get; set; }

        [Input("partsToDelayInsert", required: true)]
        public int PartsToDelayInsert { get; set; }

        [Input("partsToThrowInsert", required: true)]
        public int PartsToThrowInsert { get; set; }

        [Input("replicatedDeduplicationWindow", required: true)]
        public int ReplicatedDeduplicationWindow { get; set; }

        [Input("replicatedDeduplicationWindowSeconds", required: true)]
        public int ReplicatedDeduplicationWindowSeconds { get; set; }

        [Input("ttlOnlyDropParts", required: true)]
        public bool TtlOnlyDropParts { get; set; }

        public GetMdbClickhouseClusterClickhouseConfigMergeTreeArgs()
        {
        }
        public static new GetMdbClickhouseClusterClickhouseConfigMergeTreeArgs Empty => new GetMdbClickhouseClusterClickhouseConfigMergeTreeArgs();
    }
}
