// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex.Inputs
{

    public sealed class ComputeInstanceGroupScalePolicyAutoScaleCustomRuleGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Folder ID of custom metric in Yandex Monitoring that should be used for scaling.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// A map of labels of metric.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The name of metric.
        /// </summary>
        [Input("metricName", required: true)]
        public Input<string> MetricName { get; set; } = null!;

        /// <summary>
        /// Metric type, `GAUGE` or `COUNTER`.
        /// </summary>
        [Input("metricType", required: true)]
        public Input<string> MetricType { get; set; } = null!;

        /// <summary>
        /// Rule type: `UTILIZATION` - This type means that the metric applies to one instance.
        /// First, Instance Groups calculates the average metric value for each instance,
        /// then averages the values for instances in one availability zone.
        /// This type of metric must have the `instance_id` label. `WORKLOAD` - This type means that the metric applies to instances in one availability zone.
        /// This type of metric must have the `zone_id` label.
        /// </summary>
        [Input("ruleType", required: true)]
        public Input<string> RuleType { get; set; } = null!;

        /// <summary>
        /// Service of custom metric in Yandex Monitoring that should be used for scaling.
        /// </summary>
        [Input("service")]
        public Input<string>? Service { get; set; }

        /// <summary>
        /// Target metric value level.
        /// </summary>
        [Input("target", required: true)]
        public Input<double> Target { get; set; } = null!;

        public ComputeInstanceGroupScalePolicyAutoScaleCustomRuleGetArgs()
        {
        }
        public static new ComputeInstanceGroupScalePolicyAutoScaleCustomRuleGetArgs Empty => new ComputeInstanceGroupScalePolicyAutoScaleCustomRuleGetArgs();
    }
}
