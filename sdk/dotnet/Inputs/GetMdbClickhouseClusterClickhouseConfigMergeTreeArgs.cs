// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex.Inputs
{

    public sealed class GetMdbClickhouseClusterClickhouseConfigMergeTreeInputArgs : global::Pulumi.ResourceArgs
    {
        [Input("checkSampleColumnIsCorrect", required: true)]
        public Input<bool> CheckSampleColumnIsCorrect { get; set; } = null!;

        [Input("cleanupDelayPeriod", required: true)]
        public Input<int> CleanupDelayPeriod { get; set; } = null!;

        [Input("maxAvgPartSizeForTooManyParts", required: true)]
        public Input<int> MaxAvgPartSizeForTooManyParts { get; set; } = null!;

        [Input("maxBytesToMergeAtMinSpaceInPool", required: true)]
        public Input<int> MaxBytesToMergeAtMinSpaceInPool { get; set; } = null!;

        [Input("maxCleanupDelayPeriod", required: true)]
        public Input<int> MaxCleanupDelayPeriod { get; set; } = null!;

        [Input("maxMergeSelectingSleepMs", required: true)]
        public Input<int> MaxMergeSelectingSleepMs { get; set; } = null!;

        [Input("maxNumberOfMergesWithTtlInPool", required: true)]
        public Input<int> MaxNumberOfMergesWithTtlInPool { get; set; } = null!;

        [Input("maxPartsInTotal", required: true)]
        public Input<int> MaxPartsInTotal { get; set; } = null!;

        [Input("maxReplicatedMergesInQueue", required: true)]
        public Input<int> MaxReplicatedMergesInQueue { get; set; } = null!;

        [Input("mergeMaxBlockSize", required: true)]
        public Input<int> MergeMaxBlockSize { get; set; } = null!;

        [Input("mergeSelectingSleepMs", required: true)]
        public Input<int> MergeSelectingSleepMs { get; set; } = null!;

        [Input("mergeWithRecompressionTtlTimeout", required: true)]
        public Input<int> MergeWithRecompressionTtlTimeout { get; set; } = null!;

        [Input("mergeWithTtlTimeout", required: true)]
        public Input<int> MergeWithTtlTimeout { get; set; } = null!;

        [Input("minAgeToForceMergeOnPartitionOnly", required: true)]
        public Input<bool> MinAgeToForceMergeOnPartitionOnly { get; set; } = null!;

        [Input("minAgeToForceMergeSeconds", required: true)]
        public Input<int> MinAgeToForceMergeSeconds { get; set; } = null!;

        [Input("minBytesForWidePart", required: true)]
        public Input<int> MinBytesForWidePart { get; set; } = null!;

        [Input("minRowsForWidePart", required: true)]
        public Input<int> MinRowsForWidePart { get; set; } = null!;

        [Input("numberOfFreeEntriesInPoolToLowerMaxSizeOfMerge", required: true)]
        public Input<int> NumberOfFreeEntriesInPoolToLowerMaxSizeOfMerge { get; set; } = null!;

        [Input("partsToDelayInsert", required: true)]
        public Input<int> PartsToDelayInsert { get; set; } = null!;

        [Input("partsToThrowInsert", required: true)]
        public Input<int> PartsToThrowInsert { get; set; } = null!;

        [Input("replicatedDeduplicationWindow", required: true)]
        public Input<int> ReplicatedDeduplicationWindow { get; set; } = null!;

        [Input("replicatedDeduplicationWindowSeconds", required: true)]
        public Input<int> ReplicatedDeduplicationWindowSeconds { get; set; } = null!;

        [Input("ttlOnlyDropParts", required: true)]
        public Input<bool> TtlOnlyDropParts { get; set; } = null!;

        public GetMdbClickhouseClusterClickhouseConfigMergeTreeInputArgs()
        {
        }
        public static new GetMdbClickhouseClusterClickhouseConfigMergeTreeInputArgs Empty => new GetMdbClickhouseClusterClickhouseConfigMergeTreeInputArgs();
    }
}
