// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex.Inputs
{

    public sealed class AlbVirtualHostRouteHttpRouteRedirectActionArgs : global::Pulumi.ResourceArgs
    {
        [Input("removeQuery")]
        public Input<bool>? RemoveQuery { get; set; }

        /// <summary>
        /// Replaces hostname.
        /// </summary>
        [Input("replaceHost")]
        public Input<string>? ReplaceHost { get; set; }

        /// <summary>
        /// Replace path.
        /// </summary>
        [Input("replacePath")]
        public Input<string>? ReplacePath { get; set; }

        /// <summary>
        /// Replaces port.
        /// </summary>
        [Input("replacePort")]
        public Input<int>? ReplacePort { get; set; }

        /// <summary>
        /// Replace only matched prefix. Example:&lt;br/&gt; match:{ prefix_match: "/some" } &lt;br/&gt; 
        /// redirect: { replace_prefix: "/other" } &lt;br/&gt; will redirect "/something" to "/otherthing".
        /// 
        /// * `remove query` - (Optional) If set, remove query part.
        /// </summary>
        [Input("replacePrefix")]
        public Input<string>? ReplacePrefix { get; set; }

        /// <summary>
        /// Replaces scheme. If the original scheme is `http` or `https`, will also remove the 
        /// 80 or 443 port, if present.
        /// </summary>
        [Input("replaceScheme")]
        public Input<string>? ReplaceScheme { get; set; }

        /// <summary>
        /// The HTTP status code to use in the redirect response. Supported values are: 
        /// moved_permanently, found, see_other, temporary_redirect, permanent_redirect.
        /// 
        /// &gt; **NOTE:** Only one type of paths `replace_path` or `replace_prefix` should be specified.
        /// </summary>
        [Input("responseCode")]
        public Input<string>? ResponseCode { get; set; }

        public AlbVirtualHostRouteHttpRouteRedirectActionArgs()
        {
        }
        public static new AlbVirtualHostRouteHttpRouteRedirectActionArgs Empty => new AlbVirtualHostRouteHttpRouteRedirectActionArgs();
    }
}
