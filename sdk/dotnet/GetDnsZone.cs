// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    public static class GetDnsZone
    {
        public static Task<GetDnsZoneResult> InvokeAsync(GetDnsZoneArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDnsZoneResult>("yandex:index/getDnsZone:getDnsZone", args ?? new GetDnsZoneArgs(), options.WithDefaults());

        public static Output<GetDnsZoneResult> Invoke(GetDnsZoneInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDnsZoneResult>("yandex:index/getDnsZone:getDnsZone", args ?? new GetDnsZoneInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDnsZoneArgs : global::Pulumi.InvokeArgs
    {
        [Input("dnsZoneId")]
        public string? DnsZoneId { get; set; }

        [Input("folderId")]
        public string? FolderId { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        public GetDnsZoneArgs()
        {
        }
        public static new GetDnsZoneArgs Empty => new GetDnsZoneArgs();
    }

    public sealed class GetDnsZoneInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("dnsZoneId")]
        public Input<string>? DnsZoneId { get; set; }

        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetDnsZoneInvokeArgs()
        {
        }
        public static new GetDnsZoneInvokeArgs Empty => new GetDnsZoneInvokeArgs();
    }


    [OutputType]
    public sealed class GetDnsZoneResult
    {
        public readonly string CreatedAt;
        public readonly bool DeletionProtection;
        public readonly string Description;
        public readonly string DnsZoneId;
        public readonly string FolderId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableDictionary<string, string> Labels;
        public readonly string Name;
        public readonly ImmutableArray<string> PrivateNetworks;
        public readonly bool Public;
        public readonly string Zone;

        [OutputConstructor]
        private GetDnsZoneResult(
            string createdAt,

            bool deletionProtection,

            string description,

            string dnsZoneId,

            string folderId,

            string id,

            ImmutableDictionary<string, string> labels,

            string name,

            ImmutableArray<string> privateNetworks,

            bool @public,

            string zone)
        {
            CreatedAt = createdAt;
            DeletionProtection = deletionProtection;
            Description = description;
            DnsZoneId = dnsZoneId;
            FolderId = folderId;
            Id = id;
            Labels = labels;
            Name = name;
            PrivateNetworks = privateNetworks;
            Public = @public;
            Zone = zone;
        }
    }
}
